{
	// Place your snippets for lua here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"actor.teleport_actor": {
        "prefix": [
            "actor.teleport_actor",
            "teleport_actor"
        ],
        "body": [
            "actor.teleport_actor(actor --[[ integer ]], position --[[ vector3 ]], unkflag0 --[[ boolean ]], unkflag1 --[[ boolean ]], unkflag2 --[[ boolean ]])"
        ],
        "description": "ACTOR::TELEPORT_ACTOR (0x2D54B916) function."
    },
    "actor.teleport_actor_with_heading": {
        "prefix": [
            "actor.teleport_actor_with_heading",
            "teleport_actor_with_heading"
        ],
        "body": [
            "actor.teleport_actor_with_heading(actor --[[ integer ]], positionxy --[[ vector2 ]], positionz --[[ number ]], heading --[[ number ]], unkflag0 --[[ boolean ]], unkflag1 --[[ boolean ]], unkflag2 --[[ boolean ]])"
        ],
        "description": "ACTOR::TELEPORT_ACTOR_WITH_HEADING (0xE4DE507C) function."
    },
    "actor.get_max_speed": {
        "prefix": [
            "actor.get_max_speed",
            "get_max_speed"
        ],
        "body": [
            "local result --[[ number ]] = actor.get_max_speed(actor --[[ integer ]])"
        ],
        "description": "ACTOR::GET_MAX_SPEED (0x6B3A39A9) function."
    },
    "actor.get_position": {
        "prefix": [
            "actor.get_position",
            "get_position"
        ],
        "body": [
            "local result --[[ vector3 ]] = actor.get_position(actor --[[ integer ]])"
        ],
        "description": "ACTOR::GET_POSITION (0x99BD9D6F) function."
    },
    "actor.get_heading": {
        "prefix": [
            "actor.get_heading",
            "get_heading"
        ],
        "body": [
            "local result --[[ number ]] = actor.get_heading(actor --[[ integer ]])"
        ],
        "description": "ACTOR::GET_HEADING (0x42DE39F0) function."
    },
    "actor.get_actor_axis": {
        "prefix": [
            "actor.get_actor_axis",
            "get_actor_axis"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_actor_axis(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_ACTOR_AXIS (0x294A5549) function."
    },
    "actor.set_actor_heading": {
        "prefix": [
            "actor.set_actor_heading",
            "set_actor_heading"
        ],
        "body": [
            "actor.set_actor_heading(actor --[[ integer ]], heading --[[ number ]], unkflag --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_ACTOR_HEADING (0xECE8520B) function."
    },
    "actor.set_actor_one_shot_death": {
        "prefix": [
            "actor.set_actor_one_shot_death",
            "set_actor_one_shot_death"
        ],
        "body": [
            "actor.set_actor_one_shot_death(actor --[[ integer ]], toggle --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_ACTOR_ONE_SHOT_DEATH (0xCDC686B2) function."
    },
    "actor.get_actor_one_shot_death_status": {
        "prefix": [
            "actor.get_actor_one_shot_death_status",
            "get_actor_one_shot_death_status"
        ],
        "body": [
            "local result --[[ boolean ]] = actor.get_actor_one_shot_death_status(actor --[[ integer ]])"
        ],
        "description": "ACTOR::GET_ACTOR_ONE_SHOT_DEATH_STATUS (0x0912622D) function."
    },
    "actor.get_physinst_from_actor": {
        "prefix": [
            "actor.get_physinst_from_actor",
            "get_physinst_from_actor"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_physinst_from_actor(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_PHYSINST_FROM_ACTOR (0x758F993A) function."
    },
    "actor.can_actor_hogtie_target": {
        "prefix": [
            "actor.can_actor_hogtie_target",
            "can_actor_hogtie_target"
        ],
        "body": [
            "local result --[[ integer ]] = actor.can_actor_hogtie_target(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::CAN_ACTOR_HOGTIE_TARGET (0x1AA3A0C0) function."
    },
    "actor.is_actor_player": {
        "prefix": [
            "actor.is_actor_player",
            "is_actor_player"
        ],
        "body": [
            "local result --[[ boolean ]] = actor.is_actor_player(actor --[[ integer ]])"
        ],
        "description": "ACTOR::IS_ACTOR_PLAYER (0xB27E91E7) function."
    },
    "actor.is_actor_local_player": {
        "prefix": [
            "actor.is_actor_local_player",
            "is_actor_local_player"
        ],
        "body": [
            "local result --[[ boolean ]] = actor.is_actor_local_player(actor --[[ integer ]])"
        ],
        "description": "ACTOR::IS_ACTOR_LOCAL_PLAYER (0x6542CF26) function."
    },
    "actor.get_debug_padindex": {
        "prefix": [
            "actor.get_debug_padindex",
            "get_debug_padindex"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_debug_padindex()"
        ],
        "description": "ACTOR::GET_DEBUG_PADINDEX (0xB114332D) function."
    },
    "actor.get_player_padindex": {
        "prefix": [
            "actor.get_player_padindex",
            "get_player_padindex"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_player_padindex(actor --[[ integer ]])"
        ],
        "description": "ACTOR::GET_PLAYER_PADINDEX (0x524F6981) function."
    },
    "actor.get_player_padindex_no_actor": {
        "prefix": [
            "actor.get_player_padindex_no_actor",
            "get_player_padindex_no_actor"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_player_padindex_no_actor()"
        ],
        "description": "ACTOR::GET_PLAYER_PADINDEX_NO_ACTOR (0xCF02D1D6) function."
    },
    "actor.set_player_padindex": {
        "prefix": [
            "actor.set_player_padindex",
            "set_player_padindex"
        ],
        "body": [
            "actor.set_player_padindex(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_PADINDEX (0x8F82B7D4) function."
    },
    "actor.set_player_control": {
        "prefix": [
            "actor.set_player_control",
            "set_player_control"
        ],
        "body": [
            "actor.set_player_control(player --[[ integer ]], allowallcontrols --[[ boolean ]], flags --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_CONTROL (0xD17AFCD8) function."
    },
    "actor.set_player_enable_mount_use_contexts": {
        "prefix": [
            "actor.set_player_enable_mount_use_contexts",
            "set_player_enable_mount_use_contexts"
        ],
        "body": [
            "actor.set_player_enable_mount_use_contexts(actor --[[ integer ]], value --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_PLAYER_ENABLE_MOUNT_USE_CONTEXTS (0xBEEDDD54) function."
    },
    "actor.set_player_disable_targeting": {
        "prefix": [
            "actor.set_player_disable_targeting",
            "set_player_disable_targeting"
        ],
        "body": [
            "actor.set_player_disable_targeting(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_DISABLE_TARGETING (0x0959C27A) function."
    },
    "actor.is_player_controllable": {
        "prefix": [
            "actor.is_player_controllable",
            "is_player_controllable"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_player_controllable(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_PLAYER_CONTROLLABLE (0x9613C2D0) function."
    },
    "actor.is_player_in_combat": {
        "prefix": [
            "actor.is_player_in_combat",
            "is_player_in_combat"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_player_in_combat(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_PLAYER_IN_COMBAT (0x6576AD43) function."
    },
    "actor.is_player_in_combat_within": {
        "prefix": [
            "actor.is_player_in_combat_within",
            "is_player_in_combat_within"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_player_in_combat_within(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_PLAYER_IN_COMBAT_WITHIN (0x48B7C279) function."
    },
    "actor.set_reticle_draw_disabled_by_script": {
        "prefix": [
            "actor.set_reticle_draw_disabled_by_script",
            "set_reticle_draw_disabled_by_script"
        ],
        "body": [
            "actor.set_reticle_draw_disabled_by_script(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_RETICLE_DRAW_DISABLED_BY_SCRIPT (0xCE7CE46D) function."
    },
    "actor.set_player_control_rumble": {
        "prefix": [
            "actor.set_player_control_rumble",
            "set_player_control_rumble"
        ],
        "body": [
            "actor.set_player_control_rumble(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_CONTROL_RUMBLE (0x4590CE00) function."
    },
    "actor.reset_rumble": {
        "prefix": [
            "actor.reset_rumble",
            "reset_rumble"
        ],
        "body": [
            "actor.reset_rumble()"
        ],
        "description": "ACTOR::RESET_RUMBLE (0xB3BE2F95) function."
    },
    "actor.get_player_control_config": {
        "prefix": [
            "actor.get_player_control_config",
            "get_player_control_config"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_player_control_config(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_PLAYER_CONTROL_CONFIG (0x8421033D) function."
    },
    "actor.set_player_control_config": {
        "prefix": [
            "actor.set_player_control_config",
            "set_player_control_config"
        ],
        "body": [
            "actor.set_player_control_config(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_CONTROL_CONFIG (0x01B84BCA) function."
    },
    "actor.player_rumble": {
        "prefix": [
            "actor.player_rumble",
            "player_rumble"
        ],
        "body": [
            "actor.player_rumble(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ACTOR::PLAYER_RUMBLE (0x2E0EC2F2) function."
    },
    "actor.set_player_current_notoriety": {
        "prefix": [
            "actor.set_player_current_notoriety",
            "set_player_current_notoriety"
        ],
        "body": [
            "actor.set_player_current_notoriety(level --[[ number ]])"
        ],
        "description": "ACTOR::SET_PLAYER_CURRENT_NOTORIETY (0x4B0D6152) function."
    },
    "actor.set_player_current_honor": {
        "prefix": [
            "actor.set_player_current_honor",
            "set_player_current_honor"
        ],
        "body": [
            "actor.set_player_current_honor(level --[[ number ]])"
        ],
        "description": "ACTOR::SET_PLAYER_CURRENT_HONOR (0x4D918005) function."
    },
    "actor.set_player_combatmode": {
        "prefix": [
            "actor.set_player_combatmode",
            "set_player_combatmode"
        ],
        "body": [
            "actor.set_player_combatmode(combatmode --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_COMBATMODE (0x57595189) function."
    },
    "actor.get_player_combatmode": {
        "prefix": [
            "actor.get_player_combatmode",
            "get_player_combatmode"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_player_combatmode()"
        ],
        "description": "ACTOR::GET_PLAYER_COMBATMODE (0x86E193B8) function."
    },
    "actor.set_player_combatmode_override": {
        "prefix": [
            "actor.set_player_combatmode_override",
            "set_player_combatmode_override"
        ],
        "body": [
            "actor.set_player_combatmode_override(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_COMBATMODE_OVERRIDE (0xAFFBBE78) function."
    },
    "actor.set_player_combatmode_exclusion": {
        "prefix": [
            "actor.set_player_combatmode_exclusion",
            "set_player_combatmode_exclusion"
        ],
        "body": [
            "actor.set_player_combatmode_exclusion(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_COMBATMODE_EXCLUSION (0x1184EC7B) function."
    },
    "actor.set_player_vehicle_input": {
        "prefix": [
            "actor.set_player_vehicle_input",
            "set_player_vehicle_input"
        ],
        "body": [
            "actor.set_player_vehicle_input(player --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_VEHICLE_INPUT (0xE1160B04) function."
    },
    "actor.add_player_control_horse_follow": {
        "prefix": [
            "actor.add_player_control_horse_follow",
            "add_player_control_horse_follow"
        ],
        "body": [
            "actor.add_player_control_horse_follow(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "ACTOR::ADD_PLAYER_CONTROL_HORSE_FOLLOW (0x900165CE) function."
    },
    "actor.rem_player_control_horse_follow": {
        "prefix": [
            "actor.rem_player_control_horse_follow",
            "rem_player_control_horse_follow"
        ],
        "body": [
            "actor.rem_player_control_horse_follow(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::REM_PLAYER_CONTROL_HORSE_FOLLOW (0xBFC8EF7C) function."
    },
    "actor.get_player_actor": {
        "prefix": [
            "actor.get_player_actor",
            "get_player_actor"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_player_actor(playerid --[[ integer ]])"
        ],
        "description": "ACTOR::GET_PLAYER_ACTOR (0xE8CFDD53) function."
    },
    "actor.is_local_player": {
        "prefix": [
            "actor.is_local_player",
            "is_local_player"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_local_player(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_LOCAL_PLAYER (0x40EF1003) function."
    },
    "actor.is_local_player_valid": {
        "prefix": [
            "actor.is_local_player_valid",
            "is_local_player_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = actor.is_local_player_valid(actor --[[ integer ]])"
        ],
        "description": "ACTOR::IS_LOCAL_PLAYER_VALID (0x0ADC17E9) function."
    },
    "actor.is_slot_valid": {
        "prefix": [
            "actor.is_slot_valid",
            "is_slot_valid"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_slot_valid(slotid --[[ integer ]])"
        ],
        "description": "ACTOR::IS_SLOT_VALID (0xD04480FE) function."
    },
    "actor.get_slot_actor": {
        "prefix": [
            "actor.get_slot_actor",
            "get_slot_actor"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_slot_actor(slotid --[[ integer ]])"
        ],
        "description": "ACTOR::GET_SLOT_ACTOR (0xDB9B49D8) function."
    },
    "actor.get_actor_slot": {
        "prefix": [
            "actor.get_actor_slot",
            "get_actor_slot"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_actor_slot(actor --[[ integer ]])"
        ],
        "description": "ACTOR::GET_ACTOR_SLOT (0xAABF3356) function."
    },
    "actor.get_local_slot": {
        "prefix": [
            "actor.get_local_slot",
            "get_local_slot"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_local_slot()"
        ],
        "description": "ACTOR::GET_LOCAL_SLOT (0xAD68A22E) function."
    },
    "actor.get_slot_name": {
        "prefix": [
            "actor.get_slot_name",
            "get_slot_name"
        ],
        "body": [
            "local result --[[ string ]] = actor.get_slot_name(slotid --[[ integer ]])"
        ],
        "description": "ACTOR::GET_SLOT_NAME (0x34CBABAE) function."
    },
    "actor.get_slot_position": {
        "prefix": [
            "actor.get_slot_position",
            "get_slot_position"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_slot_position(unk0 --[[ integer ]], out --[[ vector3 ]])"
        ],
        "description": "ACTOR::GET_SLOT_POSITION (0x3241158C) function."
    },
    "actor.get_slot_facing": {
        "prefix": [
            "actor.get_slot_facing",
            "get_slot_facing"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_slot_facing(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_SLOT_FACING (0x34A9866B) function."
    },
    "actor.is_player_targetting_actor": {
        "prefix": [
            "actor.is_player_targetting_actor",
            "is_player_targetting_actor"
        ],
        "body": [
            "local result --[[ boolean ]] = actor.is_player_targetting_actor(player --[[ integer ]], target --[[ integer ]], unk2 --[[ boolean ]])"
        ],
        "description": "ACTOR::IS_PLAYER_TARGETTING_ACTOR (0x87DDCA96) function."
    },
    "actor.is_player_deadeye": {
        "prefix": [
            "actor.is_player_deadeye",
            "is_player_deadeye"
        ],
        "body": [
            "local result --[[ boolean ]] = actor.is_player_deadeye(actor --[[ integer ]])"
        ],
        "description": "ACTOR::IS_PLAYER_DEADEYE (0x6148423A) function."
    },
    "actor.set_player_deadeye_mode": {
        "prefix": [
            "actor.set_player_deadeye_mode",
            "set_player_deadeye_mode"
        ],
        "body": [
            "actor.set_player_deadeye_mode(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_DEADEYE_MODE (0xB6A47C37) function."
    },
    "actor.set_force_player_aim_mode": {
        "prefix": [
            "actor.set_force_player_aim_mode",
            "set_force_player_aim_mode"
        ],
        "body": [
            "actor.set_force_player_aim_mode(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_FORCE_PLAYER_AIM_MODE (0x1CFAF2EA) function."
    },
    "actor.set_player_endless_readymode": {
        "prefix": [
            "actor.set_player_endless_readymode",
            "set_player_endless_readymode"
        ],
        "body": [
            "actor.set_player_endless_readymode(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_ENDLESS_READYMODE (0xD0E08B5E) function."
    },
    "actor.get_player_zoom_state": {
        "prefix": [
            "actor.get_player_zoom_state",
            "get_player_zoom_state"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_player_zoom_state(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_PLAYER_ZOOM_STATE (0xBC521A38) function."
    },
    "actor.is_player_using_cover": {
        "prefix": [
            "actor.is_player_using_cover",
            "is_player_using_cover"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_player_using_cover(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_PLAYER_USING_COVER (0x724A2931) function."
    },
    "actor.attach_player_to_cover": {
        "prefix": [
            "actor.attach_player_to_cover",
            "attach_player_to_cover"
        ],
        "body": [
            "actor.attach_player_to_cover(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ACTOR::ATTACH_PLAYER_TO_COVER (0x45F2A70A) function."
    },
    "actor.simulate_player_input_gait": {
        "prefix": [
            "actor.simulate_player_input_gait",
            "simulate_player_input_gait"
        ],
        "body": [
            "actor.simulate_player_input_gait(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "ACTOR::SIMULATE_PLAYER_INPUT_GAIT (0x0D77CC34) function."
    },
    "actor.actor_pop_next_gait": {
        "prefix": [
            "actor.actor_pop_next_gait",
            "actor_pop_next_gait"
        ],
        "body": [
            "actor.actor_pop_next_gait(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ACTOR::ACTOR_POP_NEXT_GAIT (0xEAE75C6F) function."
    },
    "actor.is_actor_using_cover": {
        "prefix": [
            "actor.is_actor_using_cover",
            "is_actor_using_cover"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_actor_using_cover(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_ACTOR_USING_COVER (0xD39C4A9E) function."
    },
    "actor.is_actor_using_ledge": {
        "prefix": [
            "actor.is_actor_using_ledge",
            "is_actor_using_ledge"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_actor_using_ledge(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_ACTOR_USING_LEDGE (0xEBBE1CAC) function."
    },
    "actor.set_player_deadeye_points": {
        "prefix": [
            "actor.set_player_deadeye_points",
            "set_player_deadeye_points"
        ],
        "body": [
            "actor.set_player_deadeye_points(actor --[[ integer ]], value --[[ number ]], unk --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_PLAYER_DEADEYE_POINTS (0x50D8C840) function."
    },
    "actor.add_player_deadeye_points": {
        "prefix": [
            "actor.add_player_deadeye_points",
            "add_player_deadeye_points"
        ],
        "body": [
            "actor.add_player_deadeye_points(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ACTOR::ADD_PLAYER_DEADEYE_POINTS (0xE2C4AEE7) function."
    },
    "actor.get_player_deadeye_points": {
        "prefix": [
            "actor.get_player_deadeye_points",
            "get_player_deadeye_points"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_player_deadeye_points(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_PLAYER_DEADEYE_POINTS (0x86B5C9E1) function."
    },
    "actor.set_disable_deadeye": {
        "prefix": [
            "actor.set_disable_deadeye",
            "set_disable_deadeye"
        ],
        "body": [
            "actor.set_disable_deadeye(actor --[[ integer ]], value --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_DISABLE_DEADEYE (0x09716951) function."
    },
    "actor.set_deadeye_point_modifier": {
        "prefix": [
            "actor.set_deadeye_point_modifier",
            "set_deadeye_point_modifier"
        ],
        "body": [
            "actor.set_deadeye_point_modifier(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_DEADEYE_POINT_MODIFIER (0x0486955B) function."
    },
    "actor.set_max_deadeye_points": {
        "prefix": [
            "actor.set_max_deadeye_points",
            "set_max_deadeye_points"
        ],
        "body": [
            "actor.set_max_deadeye_points(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_MAX_DEADEYE_POINTS (0x526D45B7) function."
    },
    "actor.set_deadeye_multilock_enable": {
        "prefix": [
            "actor.set_deadeye_multilock_enable",
            "set_deadeye_multilock_enable"
        ],
        "body": [
            "actor.set_deadeye_multilock_enable(actor --[[ integer ]], value --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_DEADEYE_MULTILOCK_ENABLE (0x4E6E5E78) function."
    },
    "actor.set_deadeye_targetpaint_enable": {
        "prefix": [
            "actor.set_deadeye_targetpaint_enable",
            "set_deadeye_targetpaint_enable"
        ],
        "body": [
            "actor.set_deadeye_targetpaint_enable(actor --[[ integer ]], value --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_DEADEYE_TARGETPAINT_ENABLE (0x5CD6E2C3) function."
    },
    "actor.set_deadeye_invulnerability": {
        "prefix": [
            "actor.set_deadeye_invulnerability",
            "set_deadeye_invulnerability"
        ],
        "body": [
            "actor.set_deadeye_invulnerability(actor --[[ integer ]], value --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_DEADEYE_INVULNERABILITY (0xA671FF8E) function."
    },
    "actor.set_deadeye_damage_scaling": {
        "prefix": [
            "actor.set_deadeye_damage_scaling",
            "set_deadeye_damage_scaling"
        ],
        "body": [
            "actor.set_deadeye_damage_scaling(actor --[[ integer ]], scaling --[[ number ]])"
        ],
        "description": "ACTOR::SET_DEADEYE_DAMAGE_SCALING (0x0D583DAF) function."
    },
    "actor.set_deadeye_regeneration_rate": {
        "prefix": [
            "actor.set_deadeye_regeneration_rate",
            "set_deadeye_regeneration_rate"
        ],
        "body": [
            "actor.set_deadeye_regeneration_rate(actor --[[ integer ]], rate --[[ number ]], unk --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_DEADEYE_REGENERATION_RATE (0x0415EE4C) function."
    },
    "actor.set_deadeye_regeneration_rate_multiplier": {
        "prefix": [
            "actor.set_deadeye_regeneration_rate_multiplier",
            "set_deadeye_regeneration_rate_multiplier"
        ],
        "body": [
            "actor.set_deadeye_regeneration_rate_multiplier(actor --[[ integer ]], multiplier --[[ number ]])"
        ],
        "description": "ACTOR::SET_DEADEYE_REGENERATION_RATE_MULTIPLIER (0x151741A2) function."
    },
    "actor.set_deadeye_timescale": {
        "prefix": [
            "actor.set_deadeye_timescale",
            "set_deadeye_timescale"
        ],
        "body": [
            "actor.set_deadeye_timescale(actor --[[ integer ]], timescale --[[ number ]])"
        ],
        "description": "ACTOR::SET_DEADEYE_TIMESCALE (0x5740CDC2) function."
    },
    "actor.set_infinite_deadeye": {
        "prefix": [
            "actor.set_infinite_deadeye",
            "set_infinite_deadeye"
        ],
        "body": [
            "actor.set_infinite_deadeye(actor --[[ integer ]], infinite --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_INFINITE_DEADEYE (0x0C0BC04E) function."
    },
    "actor.get_time_player_shot_close": {
        "prefix": [
            "actor.get_time_player_shot_close",
            "get_time_player_shot_close"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_time_player_shot_close(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_TIME_PLAYER_SHOT_CLOSE (0x7F454A92) function."
    },
    "actor.set_player_posture": {
        "prefix": [
            "actor.set_player_posture",
            "set_player_posture"
        ],
        "body": [
            "actor.set_player_posture(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_PLAYER_POSTURE (0x3BD4426B) function."
    },
    "actor.set_actor_allow_dismount": {
        "prefix": [
            "actor.set_actor_allow_dismount",
            "set_actor_allow_dismount"
        ],
        "body": [
            "actor.set_actor_allow_dismount(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ACTOR_ALLOW_DISMOUNT (0xC550644A) function."
    },
    "actor.set_actor_invulnerability": {
        "prefix": [
            "actor.set_actor_invulnerability",
            "set_actor_invulnerability"
        ],
        "body": [
            "actor.set_actor_invulnerability(actor --[[ integer ]], invulnerable --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_ACTOR_INVULNERABILITY (0xE38EF526) function."
    },
    "actor.get_actor_invulnerability": {
        "prefix": [
            "actor.get_actor_invulnerability",
            "get_actor_invulnerability"
        ],
        "body": [
            "local result --[[ boolean ]] = actor.get_actor_invulnerability(actor --[[ integer ]])"
        ],
        "description": "ACTOR::GET_ACTOR_INVULNERABILITY (0xDB39D992) function."
    },
    "actor.set_tough_actor": {
        "prefix": [
            "actor.set_tough_actor",
            "set_tough_actor"
        ],
        "body": [
            "actor.set_tough_actor(actor --[[ integer ]], value --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_TOUGH_ACTOR (0x2A575132) function."
    },
    "actor.set_actor_unkillable": {
        "prefix": [
            "actor.set_actor_unkillable",
            "set_actor_unkillable"
        ],
        "body": [
            "actor.set_actor_unkillable(actor --[[ integer ]], value --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_ACTOR_UNKILLABLE (0x0D9A35F6) function."
    },
    "actor.set_actor_permanent_dead": {
        "prefix": [
            "actor.set_actor_permanent_dead",
            "set_actor_permanent_dead"
        ],
        "body": [
            "actor.set_actor_permanent_dead(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ACTOR_PERMANENT_DEAD (0x731F2C21) function."
    },
    "actor.clear_actor_proof": {
        "prefix": [
            "actor.clear_actor_proof",
            "clear_actor_proof"
        ],
        "body": [
            "actor.clear_actor_proof(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::CLEAR_ACTOR_PROOF (0xF5B74E20) function."
    },
    "actor.get_actor_proof": {
        "prefix": [
            "actor.get_actor_proof",
            "get_actor_proof"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_actor_proof(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_ACTOR_PROOF (0x147EA072) function."
    },
    "actor.set_actor_proof": {
        "prefix": [
            "actor.set_actor_proof",
            "set_actor_proof"
        ],
        "body": [
            "actor.set_actor_proof(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ACTOR_PROOF (0xA5875DC8) function."
    },
    "actor.set_actor_overhealth_mode": {
        "prefix": [
            "actor.set_actor_overhealth_mode",
            "set_actor_overhealth_mode"
        ],
        "body": [
            "actor.set_actor_overhealth_mode(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ACTOR_OVERHEALTH_MODE (0xF2F77F44) function."
    },
    "actor.actor_repair_incapacitation": {
        "prefix": [
            "actor.actor_repair_incapacitation",
            "actor_repair_incapacitation"
        ],
        "body": [
            "actor.actor_repair_incapacitation(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::ACTOR_REPAIR_INCAPACITATION (0x437588E6) function."
    },
    "actor.get_actor_incapacitated": {
        "prefix": [
            "actor.get_actor_incapacitated",
            "get_actor_incapacitated"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_actor_incapacitated(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_ACTOR_INCAPACITATED (0xEE4E2461) function."
    },
    "actor.set_allow_ride_by_ai": {
        "prefix": [
            "actor.set_allow_ride_by_ai",
            "set_allow_ride_by_ai"
        ],
        "body": [
            "actor.set_allow_ride_by_ai(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ALLOW_RIDE_BY_AI (0x2D9C0C0F) function."
    },
    "actor.set_allow_ride_by_player": {
        "prefix": [
            "actor.set_allow_ride_by_player",
            "set_allow_ride_by_player"
        ],
        "body": [
            "actor.set_allow_ride_by_player(actor --[[ integer ]], ride --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_ALLOW_RIDE_BY_PLAYER (0xCF1A1BC5) function."
    },
    "actor.set_allow_ride": {
        "prefix": [
            "actor.set_allow_ride",
            "set_allow_ride"
        ],
        "body": [
            "actor.set_allow_ride(actor --[[ integer ]], ride --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_ALLOW_RIDE (0xF83A8D2B) function."
    },
    "actor.set_allow_jack": {
        "prefix": [
            "actor.set_allow_jack",
            "set_allow_jack"
        ],
        "body": [
            "actor.set_allow_jack(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ALLOW_JACK (0x5D5BD1F0) function."
    },
    "actor.set_allow_execute": {
        "prefix": [
            "actor.set_allow_execute",
            "set_allow_execute"
        ],
        "body": [
            "actor.set_allow_execute(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ALLOW_EXECUTE (0x5896817B) function."
    },
    "actor.set_allow_deadeye_locks": {
        "prefix": [
            "actor.set_allow_deadeye_locks",
            "set_allow_deadeye_locks"
        ],
        "body": [
            "actor.set_allow_deadeye_locks(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ALLOW_DEADEYE_LOCKS (0xA1BFC1A5) function."
    },
    "actor.set_deadeye_locks_on_head_only": {
        "prefix": [
            "actor.set_deadeye_locks_on_head_only",
            "set_deadeye_locks_on_head_only"
        ],
        "body": [
            "actor.set_deadeye_locks_on_head_only(actor --[[ integer ]], enabled --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_DEADEYE_LOCKS_ON_HEAD_ONLY (0x9375946B) function."
    },
    "actor.actor_dismount_now": {
        "prefix": [
            "actor.actor_dismount_now",
            "actor_dismount_now"
        ],
        "body": [
            "actor.actor_dismount_now(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::ACTOR_DISMOUNT_NOW (0x0666B436) function."
    },
    "actor.is_actor_reacting": {
        "prefix": [
            "actor.is_actor_reacting",
            "is_actor_reacting"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_actor_reacting(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_ACTOR_REACTING (0xBFD6AE3D) function."
    },
    "actor.get_actor_update_priority": {
        "prefix": [
            "actor.get_actor_update_priority",
            "get_actor_update_priority"
        ],
        "body": [
            "local result --[[ integer ]] = actor.get_actor_update_priority(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::GET_ACTOR_UPDATE_PRIORITY (0x6D322CD3) function."
    },
    "actor.set_actor_update_priority": {
        "prefix": [
            "actor.set_actor_update_priority",
            "set_actor_update_priority"
        ],
        "body": [
            "actor.set_actor_update_priority(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ACTOR_UPDATE_PRIORITY (0x44C05EF6) function."
    },
    "actor._set_actor_force_high_lod_update": {
        "prefix": [
            "actor._set_actor_force_high_lod_update",
            "_set_actor_force_high_lod_update"
        ],
        "body": [
            "actor._set_actor_force_high_lod_update(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::_SET_ACTOR_FORCE_HIGH_LOD_UPDATE (0xA4E29C31) function."
    },
    "actor.actor_force_next_update": {
        "prefix": [
            "actor.actor_force_next_update",
            "actor_force_next_update"
        ],
        "body": [
            "actor.actor_force_next_update(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::ACTOR_FORCE_NEXT_UPDATE (0x5C7F63E3) function."
    },
    "actor.is_any_actor_in_sphere": {
        "prefix": [
            "actor.is_any_actor_in_sphere",
            "is_any_actor_in_sphere"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_any_actor_in_sphere(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_ANY_ACTOR_IN_SPHERE (0x87C49DBD) function."
    },
    "actor.set_npc_to_npc_cripple_disable": {
        "prefix": [
            "actor.set_npc_to_npc_cripple_disable",
            "set_npc_to_npc_cripple_disable"
        ],
        "body": [
            "actor.set_npc_to_npc_cripple_disable(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_NPC_TO_NPC_CRIPPLE_DISABLE (0xB42EBC65) function."
    },
    "actor.set_npc_to_npc_damage_scale_factor": {
        "prefix": [
            "actor.set_npc_to_npc_damage_scale_factor",
            "set_npc_to_npc_damage_scale_factor"
        ],
        "body": [
            "actor.set_npc_to_npc_damage_scale_factor(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_NPC_TO_NPC_DAMAGE_SCALE_FACTOR (0x135EA21D) function."
    },
    "actor.set_player_to_player_damage_scale_factor": {
        "prefix": [
            "actor.set_player_to_player_damage_scale_factor",
            "set_player_to_player_damage_scale_factor"
        ],
        "body": [
            "actor.set_player_to_player_damage_scale_factor(scale --[[ number ]])"
        ],
        "description": "ACTOR::SET_PLAYER_TO_PLAYER_DAMAGE_SCALE_FACTOR (0xA393AC4E) function."
    },
    "actor.set_npc_to_actor_damage_scale_factor": {
        "prefix": [
            "actor.set_npc_to_actor_damage_scale_factor",
            "set_npc_to_actor_damage_scale_factor"
        ],
        "body": [
            "actor.set_npc_to_actor_damage_scale_factor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_NPC_TO_ACTOR_DAMAGE_SCALE_FACTOR (0x05CFE1E9) function."
    },
    "actor.set_actor_death_drop_distance": {
        "prefix": [
            "actor.set_actor_death_drop_distance",
            "set_actor_death_drop_distance"
        ],
        "body": [
            "actor.set_actor_death_drop_distance(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ACTOR_DEATH_DROP_DISTANCE (0x9F6B04C8) function."
    },
    "actor.set_damage_scale_enable": {
        "prefix": [
            "actor.set_damage_scale_enable",
            "set_damage_scale_enable"
        ],
        "body": [
            "actor.set_damage_scale_enable(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_DAMAGE_SCALE_ENABLE (0xDA0CDC91) function."
    },
    "actor.set_cripple_enable": {
        "prefix": [
            "actor.set_cripple_enable",
            "set_cripple_enable"
        ],
        "body": [
            "actor.set_cripple_enable(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_CRIPPLE_ENABLE (0x3AD31762) function."
    },
    "actor.set_cripple_flag": {
        "prefix": [
            "actor.set_cripple_flag",
            "set_cripple_flag"
        ],
        "body": [
            "actor.set_cripple_flag(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_CRIPPLE_FLAG (0x0A9A99DF) function."
    },
    "actor.is_actor_crippled": {
        "prefix": [
            "actor.is_actor_crippled",
            "is_actor_crippled"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_actor_crippled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_ACTOR_CRIPPLED (0x38C5F63F) function."
    },
    "actor.is_actor_handsup": {
        "prefix": [
            "actor.is_actor_handsup",
            "is_actor_handsup"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_actor_handsup(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_ACTOR_HANDSUP (0xA5A24484) function."
    },
    "actor.set_allow_cold_weather_breath": {
        "prefix": [
            "actor.set_allow_cold_weather_breath",
            "set_allow_cold_weather_breath"
        ],
        "body": [
            "actor.set_allow_cold_weather_breath(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ALLOW_COLD_WEATHER_BREATH (0xA4677DD2) function."
    },
    "actor.set_dlc_fallback_avatar": {
        "prefix": [
            "actor.set_dlc_fallback_avatar",
            "set_dlc_fallback_avatar"
        ],
        "body": [
            "actor.set_dlc_fallback_avatar(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_DLC_FALLBACK_AVATAR (0x1F0CD262) function."
    },
    "actor.set_emotion": {
        "prefix": [
            "actor.set_emotion",
            "set_emotion"
        ],
        "body": [
            "actor.set_emotion(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_EMOTION (0x1D1D9387) function."
    },
    "actor.set_actor_stop_update": {
        "prefix": [
            "actor.set_actor_stop_update",
            "set_actor_stop_update"
        ],
        "body": [
            "actor.set_actor_stop_update(actor --[[ integer ]], toggle --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_ACTOR_STOP_UPDATE (0xC0F77310) function."
    },
    "actor.get_actor_stop_update": {
        "prefix": [
            "actor.get_actor_stop_update",
            "get_actor_stop_update"
        ],
        "body": [
            "local result --[[ boolean ]] = actor.get_actor_stop_update(actor --[[ integer ]])"
        ],
        "description": "ACTOR::GET_ACTOR_STOP_UPDATE (0x4EFC58BC) function."
    },
    "actor.is_actor_in_room": {
        "prefix": [
            "actor.is_actor_in_room",
            "is_actor_in_room"
        ],
        "body": [
            "local result --[[ integer ]] = actor.is_actor_in_room(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::IS_ACTOR_IN_ROOM (0x22558E3F) function."
    },
    "actor.register_traffic_objectset": {
        "prefix": [
            "actor.register_traffic_objectset",
            "register_traffic_objectset"
        ],
        "body": [
            "actor.register_traffic_objectset(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::REGISTER_TRAFFIC_OBJECTSET (0x398735FA) function."
    },
    "actor.register_traffic_actor": {
        "prefix": [
            "actor.register_traffic_actor",
            "register_traffic_actor"
        ],
        "body": [
            "actor.register_traffic_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::REGISTER_TRAFFIC_ACTOR (0x67FA18A1) function."
    },
    "actor.register_gps_curve_objectset": {
        "prefix": [
            "actor.register_gps_curve_objectset",
            "register_gps_curve_objectset"
        ],
        "body": [
            "actor.register_gps_curve_objectset(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::REGISTER_GPS_CURVE_OBJECTSET (0x1444F022) function."
    },
    "actor.reset_player_target_weight": {
        "prefix": [
            "actor.reset_player_target_weight",
            "reset_player_target_weight"
        ],
        "body": [
            "actor.reset_player_target_weight()"
        ],
        "description": "ACTOR::RESET_PLAYER_TARGET_WEIGHT (0xF1779E65) function."
    },
    "actor.set_zombie_target_mode": {
        "prefix": [
            "actor.set_zombie_target_mode",
            "set_zombie_target_mode"
        ],
        "body": [
            "actor.set_zombie_target_mode(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ZOMBIE_TARGET_MODE (0x8BE2D8B0) function."
    },
    "actor.set_actor_skip_visibility_check": {
        "prefix": [
            "actor.set_actor_skip_visibility_check",
            "set_actor_skip_visibility_check"
        ],
        "body": [
            "actor.set_actor_skip_visibility_check(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTOR::SET_ACTOR_SKIP_VISIBILITY_CHECK (0x91BB8548) function."
    },
    "actor.feed_code_warp_dist": {
        "prefix": [
            "actor.feed_code_warp_dist",
            "feed_code_warp_dist"
        ],
        "body": [
            "actor.feed_code_warp_dist(unk0 --[[ integer ]])"
        ],
        "description": "ACTOR::FEED_CODE_WARP_DIST (0xDE0E96F3) function."
    },
    "actor.set_actor_streaming_high_priority": {
        "prefix": [
            "actor.set_actor_streaming_high_priority",
            "set_actor_streaming_high_priority"
        ],
        "body": [
            "actor.set_actor_streaming_high_priority(actor --[[ integer ]], toggle --[[ boolean ]])"
        ],
        "description": "ACTOR::SET_ACTOR_STREAMING_HIGH_PRIORITY (0x0911BA31) function."
    },
    "actorset.create_actorset_in_layout": {
        "prefix": [
            "actorset.create_actorset_in_layout",
            "create_actorset_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = actorset.create_actorset_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ACTORSET::CREATE_ACTORSET_IN_LAYOUT (0x009DFC82) function."
    },
    "actorset.is_actorset_valid": {
        "prefix": [
            "actorset.is_actorset_valid",
            "is_actorset_valid"
        ],
        "body": [
            "local result --[[ integer ]] = actorset.is_actorset_valid(unk0 --[[ integer ]])"
        ],
        "description": "ACTORSET::IS_ACTORSET_VALID (0x76E8975E) function."
    },
    "actorset.destroy_actorset": {
        "prefix": [
            "actorset.destroy_actorset",
            "destroy_actorset"
        ],
        "body": [
            "local result --[[ integer ]] = actorset.destroy_actorset(unk0 --[[ integer ]])"
        ],
        "description": "ACTORSET::DESTROY_ACTORSET (0x147A0BEE) function."
    },
    "actorset.disband_actorset": {
        "prefix": [
            "actorset.disband_actorset",
            "disband_actorset"
        ],
        "body": [
            "local result --[[ integer ]] = actorset.disband_actorset(unk0 --[[ integer ]])"
        ],
        "description": "ACTORSET::DISBAND_ACTORSET (0x2739F04D) function."
    },
    "actorset.add_actorset_member": {
        "prefix": [
            "actorset.add_actorset_member",
            "add_actorset_member"
        ],
        "body": [
            "local result --[[ integer ]] = actorset.add_actorset_member(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTORSET::ADD_ACTORSET_MEMBER (0xE09DB6C1) function."
    },
    "actorset.remove_actorset_member": {
        "prefix": [
            "actorset.remove_actorset_member",
            "remove_actorset_member"
        ],
        "body": [
            "local result --[[ integer ]] = actorset.remove_actorset_member(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTORSET::REMOVE_ACTORSET_MEMBER (0xD637E449) function."
    },
    "actorset.is_actor_in_actorset": {
        "prefix": [
            "actorset.is_actor_in_actorset",
            "is_actor_in_actorset"
        ],
        "body": [
            "local result --[[ integer ]] = actorset.is_actor_in_actorset(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTORSET::IS_ACTOR_IN_ACTORSET (0xC6FE68DF) function."
    },
    "actorset.get_actor_from_actorset": {
        "prefix": [
            "actorset.get_actor_from_actorset",
            "get_actor_from_actorset"
        ],
        "body": [
            "local result --[[ integer ]] = actorset.get_actor_from_actorset(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ACTORSET::GET_ACTOR_FROM_ACTORSET (0xC5202810) function."
    },
    "actorset.get_actorset_size": {
        "prefix": [
            "actorset.get_actorset_size",
            "get_actorset_size"
        ],
        "body": [
            "local result --[[ integer ]] = actorset.get_actorset_size(unk0 --[[ integer ]])"
        ],
        "description": "ACTORSET::GET_ACTORSET_SIZE (0xA24F4799) function."
    },
    "actordraw.set_draw_actor": {
        "prefix": [
            "actordraw.set_draw_actor",
            "set_draw_actor"
        ],
        "body": [
            "actordraw.set_draw_actor(actor --[[ integer ]], draw --[[ boolean ]])"
        ],
        "description": "ACTORDRAW::SET_DRAW_ACTOR (0xE6644CE5) function."
    },
    "actordraw.get_draw_actor": {
        "prefix": [
            "actordraw.get_draw_actor",
            "get_draw_actor"
        ],
        "body": [
            "local result --[[ boolean ]] = actordraw.get_draw_actor(actor --[[ integer ]])"
        ],
        "description": "ACTORDRAW::GET_DRAW_ACTOR (0x085A9CA6) function."
    },
    "ai_animal.animal_species_flock_and_tuning_clear_all": {
        "prefix": [
            "ai_animal.animal_species_flock_and_tuning_clear_all",
            "animal_species_flock_and_tuning_clear_all"
        ],
        "body": [
            "ai_animal.animal_species_flock_and_tuning_clear_all()"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_FLOCK_AND_TUNING_CLEAR_ALL (0x5EFB415E) function."
    },
    "ai_animal.animal_species_needs_domestication_levels": {
        "prefix": [
            "ai_animal.animal_species_needs_domestication_levels",
            "animal_species_needs_domestication_levels"
        ],
        "body": [
            "ai_animal.animal_species_needs_domestication_levels(unk0 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_NEEDS_DOMESTICATION_LEVELS (0x1FD8BA91) function."
    },
    "ai_animal.animal_species_set_special_use_gringo": {
        "prefix": [
            "ai_animal.animal_species_set_special_use_gringo",
            "animal_species_set_special_use_gringo"
        ],
        "body": [
            "ai_animal.animal_species_set_special_use_gringo(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_SET_SPECIAL_USE_GRINGO (0x11DCCDAA) function."
    },
    "ai_animal.animal_species_set_unalerted_behavior": {
        "prefix": [
            "ai_animal.animal_species_set_unalerted_behavior",
            "animal_species_set_unalerted_behavior"
        ],
        "body": [
            "ai_animal.animal_species_set_unalerted_behavior(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_SET_UNALERTED_BEHAVIOR (0x6B6191EE) function."
    },
    "ai_animal.animal_species_flock_set_enabled": {
        "prefix": [
            "ai_animal.animal_species_flock_set_enabled",
            "animal_species_flock_set_enabled"
        ],
        "body": [
            "ai_animal.animal_species_flock_set_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_FLOCK_SET_ENABLED (0x4DF576A7) function."
    },
    "ai_animal.animal_species_flock_set_parameter": {
        "prefix": [
            "ai_animal.animal_species_flock_set_parameter",
            "animal_species_flock_set_parameter"
        ],
        "body": [
            "ai_animal.animal_species_flock_set_parameter(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_FLOCK_SET_PARAMETER (0xBF12100D) function."
    },
    "ai_animal.animal_species_flock_set_boolean_parameter": {
        "prefix": [
            "ai_animal.animal_species_flock_set_boolean_parameter",
            "animal_species_flock_set_boolean_parameter"
        ],
        "body": [
            "ai_animal.animal_species_flock_set_boolean_parameter(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_FLOCK_SET_BOOLEAN_PARAMETER (0x7C795382) function."
    },
    "ai_animal.animal_species_add_external_random_noise": {
        "prefix": [
            "ai_animal.animal_species_add_external_random_noise",
            "animal_species_add_external_random_noise"
        ],
        "body": [
            "ai_animal.animal_species_add_external_random_noise(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_ADD_EXTERNAL_RANDOM_NOISE (0x784C514C) function."
    },
    "ai_animal.animal_species_add_external_repulsion": {
        "prefix": [
            "ai_animal.animal_species_add_external_repulsion",
            "animal_species_add_external_repulsion"
        ],
        "body": [
            "ai_animal.animal_species_add_external_repulsion(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_ADD_EXTERNAL_REPULSION (0x4217D912) function."
    },
    "ai_animal.animal_species_add_external_influence_flock_reasoner": {
        "prefix": [
            "ai_animal.animal_species_add_external_influence_flock_reasoner",
            "animal_species_add_external_influence_flock_reasoner"
        ],
        "body": [
            "ai_animal.animal_species_add_external_influence_flock_reasoner(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_ADD_EXTERNAL_INFLUENCE_FLOCK_REASONER (0x9D8C2744) function."
    },
    "ai_animal.animal_species_tuning_get_attrib_float": {
        "prefix": [
            "ai_animal.animal_species_tuning_get_attrib_float",
            "animal_species_tuning_get_attrib_float"
        ],
        "body": [
            "local result --[[ integer ]] = ai_animal.animal_species_tuning_get_attrib_float(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_TUNING_GET_ATTRIB_FLOAT (0x8020C45E) function."
    },
    "ai_animal.animal_species_tuning_set_attrib_bool": {
        "prefix": [
            "ai_animal.animal_species_tuning_set_attrib_bool",
            "animal_species_tuning_set_attrib_bool"
        ],
        "body": [
            "ai_animal.animal_species_tuning_set_attrib_bool(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_TUNING_SET_ATTRIB_BOOL (0x651ACCB1) function."
    },
    "ai_animal.animal_species_tuning_set_attrib_float": {
        "prefix": [
            "ai_animal.animal_species_tuning_set_attrib_float",
            "animal_species_tuning_set_attrib_float"
        ],
        "body": [
            "ai_animal.animal_species_tuning_set_attrib_float(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_TUNING_SET_ATTRIB_FLOAT (0x20AD711E) function."
    },
    "ai_animal.animal_species_tuning_move_set_attrib": {
        "prefix": [
            "ai_animal.animal_species_tuning_move_set_attrib",
            "animal_species_tuning_move_set_attrib"
        ],
        "body": [
            "ai_animal.animal_species_tuning_move_set_attrib(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_TUNING_MOVE_SET_ATTRIB (0x10CC05F1) function."
    },
    "ai_animal.animal_species_tuning_set_attachment_with_offset": {
        "prefix": [
            "ai_animal.animal_species_tuning_set_attachment_with_offset",
            "animal_species_tuning_set_attachment_with_offset"
        ],
        "body": [
            "ai_animal.animal_species_tuning_set_attachment_with_offset(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_TUNING_SET_ATTACHMENT_WITH_OFFSET (0xA6A4651B) function."
    },
    "ai_animal.animal_species_tuning_set_attachment_with_childbone": {
        "prefix": [
            "ai_animal.animal_species_tuning_set_attachment_with_childbone",
            "animal_species_tuning_set_attachment_with_childbone"
        ],
        "body": [
            "ai_animal.animal_species_tuning_set_attachment_with_childbone(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_TUNING_SET_ATTACHMENT_WITH_CHILDBONE (0x168AAB9B) function."
    },
    "ai_animal.animal_species_tuning_set_hunting_prey_prop": {
        "prefix": [
            "ai_animal.animal_species_tuning_set_hunting_prey_prop",
            "animal_species_tuning_set_hunting_prey_prop"
        ],
        "body": [
            "ai_animal.animal_species_tuning_set_hunting_prey_prop(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_TUNING_SET_HUNTING_PREY_PROP (0xD05DDBB6) function."
    },
    "ai_animal.animal_species_tuning_set_attrib_float_from_time": {
        "prefix": [
            "ai_animal.animal_species_tuning_set_attrib_float_from_time",
            "animal_species_tuning_set_attrib_float_from_time"
        ],
        "body": [
            "ai_animal.animal_species_tuning_set_attrib_float_from_time(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_TUNING_SET_ATTRIB_FLOAT_FROM_TIME (0x96B26945) function."
    },
    "ai_animal.animal_species_init_begin": {
        "prefix": [
            "ai_animal.animal_species_init_begin",
            "animal_species_init_begin"
        ],
        "body": [
            "ai_animal.animal_species_init_begin(unk0 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_INIT_BEGIN (0xE228CC1A) function."
    },
    "ai_animal.animal_species_init_register": {
        "prefix": [
            "ai_animal.animal_species_init_register",
            "animal_species_init_register"
        ],
        "body": [
            "ai_animal.animal_species_init_register(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_INIT_REGISTER (0xED6240F0) function."
    },
    "ai_animal.animal_species_init_end": {
        "prefix": [
            "ai_animal.animal_species_init_end",
            "animal_species_init_end"
        ],
        "body": [
            "ai_animal.animal_species_init_end()"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_INIT_END (0x00760C27) function."
    },
    "ai_animal.animal_species_gringo_clear_all": {
        "prefix": [
            "ai_animal.animal_species_gringo_clear_all",
            "animal_species_gringo_clear_all"
        ],
        "body": [
            "ai_animal.animal_species_gringo_clear_all()"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_GRINGO_CLEAR_ALL (0xD4DDC119) function."
    },
    "ai_animal.animal_species_gringo_load_all": {
        "prefix": [
            "ai_animal.animal_species_gringo_load_all",
            "animal_species_gringo_load_all"
        ],
        "body": [
            "ai_animal.animal_species_gringo_load_all()"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_GRINGO_LOAD_ALL (0xBFB65BE8) function."
    },
    "ai_animal.animal_species_rel_clear_all": {
        "prefix": [
            "ai_animal.animal_species_rel_clear_all",
            "animal_species_rel_clear_all"
        ],
        "body": [
            "ai_animal.animal_species_rel_clear_all()"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_CLEAR_ALL (0x98073A48) function."
    },
    "ai_animal.animal_species_rel_set_attack_grab_enabled": {
        "prefix": [
            "ai_animal.animal_species_rel_set_attack_grab_enabled",
            "animal_species_rel_set_attack_grab_enabled"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_attack_grab_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_ATTACK_GRAB_ENABLED (0x1E02527F) function."
    },
    "ai_animal.animal_species_rel_set_predator_and_prey": {
        "prefix": [
            "ai_animal.animal_species_rel_set_predator_and_prey",
            "animal_species_rel_set_predator_and_prey"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_predator_and_prey(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_PREDATOR_AND_PREY (0x84B474ED) function."
    },
    "ai_animal.animal_species_rel_set_threat": {
        "prefix": [
            "ai_animal.animal_species_rel_set_threat",
            "animal_species_rel_set_threat"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_threat(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_THREAT (0x9D5C43C9) function."
    },
    "ai_animal.animal_species_rel_set_avoid": {
        "prefix": [
            "ai_animal.animal_species_rel_set_avoid",
            "animal_species_rel_set_avoid"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_avoid(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_AVOID (0xBF8B1BD7) function."
    },
    "ai_animal.animal_species_rel_set_play_hunt": {
        "prefix": [
            "ai_animal.animal_species_rel_set_play_hunt",
            "animal_species_rel_set_play_hunt"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_play_hunt(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_PLAY_HUNT (0x3F747178) function."
    },
    "ai_animal.animal_species_rel_set_play_chase": {
        "prefix": [
            "ai_animal.animal_species_rel_set_play_chase",
            "animal_species_rel_set_play_chase"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_play_chase(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_PLAY_CHASE (0x586904BD) function."
    },
    "ai_animal.animal_species_rel_set_play_beg": {
        "prefix": [
            "ai_animal.animal_species_rel_set_play_beg",
            "animal_species_rel_set_play_beg"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_play_beg(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_PLAY_BEG (0x70C48A1C) function."
    },
    "ai_animal.animal_species_rel_set_play_growl": {
        "prefix": [
            "ai_animal.animal_species_rel_set_play_growl",
            "animal_species_rel_set_play_growl"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_play_growl(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_PLAY_GROWL (0x70DE500E) function."
    },
    "ai_animal.animal_species_rel_set_play_sniff": {
        "prefix": [
            "ai_animal.animal_species_rel_set_play_sniff",
            "animal_species_rel_set_play_sniff"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_play_sniff(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_PLAY_SNIFF (0x6606A669) function."
    },
    "ai_animal.animal_species_rel_get_can_attack": {
        "prefix": [
            "ai_animal.animal_species_rel_get_can_attack",
            "animal_species_rel_get_can_attack"
        ],
        "body": [
            "local result --[[ integer ]] = ai_animal.animal_species_rel_get_can_attack(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_GET_CAN_ATTACK (0x3C5700DC) function."
    },
    "ai_animal.animal_species_rel_set_can_attack": {
        "prefix": [
            "ai_animal.animal_species_rel_set_can_attack",
            "animal_species_rel_set_can_attack"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_can_attack(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_CAN_ATTACK (0xC8B4CD3F) function."
    },
    "ai_animal.animal_species_rel_set_can_warn": {
        "prefix": [
            "ai_animal.animal_species_rel_set_can_warn",
            "animal_species_rel_set_can_warn"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_can_warn(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_CAN_WARN (0x0482DD4E) function."
    },
    "ai_animal.animal_species_rel_set_eat_gringo": {
        "prefix": [
            "ai_animal.animal_species_rel_set_eat_gringo",
            "animal_species_rel_set_eat_gringo"
        ],
        "body": [
            "ai_animal.animal_species_rel_set_eat_gringo(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_SPECIES_REL_SET_EAT_GRINGO (0xB5A63B67) function."
    },
    "ai_animal.animal_actor_get_domestication": {
        "prefix": [
            "ai_animal.animal_actor_get_domestication",
            "animal_actor_get_domestication"
        ],
        "body": [
            "local result --[[ integer ]] = ai_animal.animal_actor_get_domestication(unk0 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_ACTOR_GET_DOMESTICATION (0xCE23118D) function."
    },
    "ai_animal.animal_actor_set_domestication": {
        "prefix": [
            "ai_animal.animal_actor_set_domestication",
            "animal_actor_set_domestication"
        ],
        "body": [
            "ai_animal.animal_actor_set_domestication(actor --[[ integer ]], domestication --[[ boolean ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_ACTOR_SET_DOMESTICATION (0x58C36502) function."
    },
    "ai_animal.animal_actor_get_species": {
        "prefix": [
            "ai_animal.animal_actor_get_species",
            "animal_actor_get_species"
        ],
        "body": [
            "local result --[[ integer ]] = ai_animal.animal_actor_get_species(unk0 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_ACTOR_GET_SPECIES (0x7D0E25DF) function."
    },
    "ai_animal.animal_tuning_set_attrib_bool": {
        "prefix": [
            "ai_animal.animal_tuning_set_attrib_bool",
            "animal_tuning_set_attrib_bool"
        ],
        "body": [
            "ai_animal.animal_tuning_set_attrib_bool(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_TUNING_SET_ATTRIB_BOOL (0x11150810) function."
    },
    "ai_animal.animal_tuning_set_attrib_float": {
        "prefix": [
            "ai_animal.animal_tuning_set_attrib_float",
            "animal_tuning_set_attrib_float"
        ],
        "body": [
            "ai_animal.animal_tuning_set_attrib_float(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_TUNING_SET_ATTRIB_FLOAT (0xE36EA080) function."
    },
    "ai_animal.animal_actor_set_docile": {
        "prefix": [
            "ai_animal.animal_actor_set_docile",
            "animal_actor_set_docile"
        ],
        "body": [
            "ai_animal.animal_actor_set_docile(actor --[[ integer ]], docile --[[ boolean ]])"
        ],
        "description": "AI_ANIMAL::ANIMAL_ACTOR_SET_DOCILE (0xABFCFF01) function."
    },
    "ai_attention.add_fixed_attention_target": {
        "prefix": [
            "ai_attention.add_fixed_attention_target",
            "add_fixed_attention_target"
        ],
        "body": [
            "local result --[[ integer ]] = ai_attention.add_fixed_attention_target(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "AI_ATTENTION::ADD_FIXED_ATTENTION_TARGET (0x945F518F) function."
    },
    "ai_combat.combat_class_ai_clear_all_attribs": {
        "prefix": [
            "ai_combat.combat_class_ai_clear_all_attribs",
            "combat_class_ai_clear_all_attribs"
        ],
        "body": [
            "ai_combat.combat_class_ai_clear_all_attribs(unk0 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_CLEAR_ALL_ATTRIBS (0x13FA7128) function."
    },
    "ai_combat.combat_class_ai_get_attrib_float": {
        "prefix": [
            "ai_combat.combat_class_ai_get_attrib_float",
            "combat_class_ai_get_attrib_float"
        ],
        "body": [
            "local result --[[ integer ]] = ai_combat.combat_class_ai_get_attrib_float(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_GET_ATTRIB_FLOAT (0xAAD75024) function."
    },
    "ai_combat.combat_class_ai_get_range_accuracy": {
        "prefix": [
            "ai_combat.combat_class_ai_get_range_accuracy",
            "combat_class_ai_get_range_accuracy"
        ],
        "body": [
            "local result --[[ integer ]] = ai_combat.combat_class_ai_get_range_accuracy(unk0 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_GET_RANGE_ACCURACY (0x983DB127) function."
    },
    "ai_combat.combat_class_ai_set_attrib_bool": {
        "prefix": [
            "ai_combat.combat_class_ai_set_attrib_bool",
            "combat_class_ai_set_attrib_bool"
        ],
        "body": [
            "ai_combat.combat_class_ai_set_attrib_bool(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_SET_ATTRIB_BOOL (0x69C5ADD2) function."
    },
    "ai_combat.combat_class_ai_set_attrib_float": {
        "prefix": [
            "ai_combat.combat_class_ai_set_attrib_float",
            "combat_class_ai_set_attrib_float"
        ],
        "body": [
            "ai_combat.combat_class_ai_set_attrib_float(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_SET_ATTRIB_FLOAT (0x80D51606) function."
    },
    "ai_combat.combat_class_ai_set_fight_attack_distance": {
        "prefix": [
            "ai_combat.combat_class_ai_set_fight_attack_distance",
            "combat_class_ai_set_fight_attack_distance"
        ],
        "body": [
            "ai_combat.combat_class_ai_set_fight_attack_distance(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_SET_FIGHT_ATTACK_DISTANCE (0x6389CF4B) function."
    },
    "ai_combat.combat_class_ai_set_fight_desired_distance": {
        "prefix": [
            "ai_combat.combat_class_ai_set_fight_desired_distance",
            "combat_class_ai_set_fight_desired_distance"
        ],
        "body": [
            "ai_combat.combat_class_ai_set_fight_desired_distance(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_SET_FIGHT_DESIRED_DISTANCE (0xE20587E7) function."
    },
    "ai_combat.combat_class_ai_set_fight_time_between_attacks": {
        "prefix": [
            "ai_combat.combat_class_ai_set_fight_time_between_attacks",
            "combat_class_ai_set_fight_time_between_attacks"
        ],
        "body": [
            "ai_combat.combat_class_ai_set_fight_time_between_attacks(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_SET_FIGHT_TIME_BETWEEN_ATTACKS (0x1EF0E419) function."
    },
    "ai_combat.combat_class_ai_set_friendly_fire_consideration": {
        "prefix": [
            "ai_combat.combat_class_ai_set_friendly_fire_consideration",
            "combat_class_ai_set_friendly_fire_consideration"
        ],
        "body": [
            "ai_combat.combat_class_ai_set_friendly_fire_consideration(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_SET_FRIENDLY_FIRE_CONSIDERATION (0xF1454677) function."
    },
    "ai_combat.combat_class_ai_set_range_accuracy": {
        "prefix": [
            "ai_combat.combat_class_ai_set_range_accuracy",
            "combat_class_ai_set_range_accuracy"
        ],
        "body": [
            "ai_combat.combat_class_ai_set_range_accuracy(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_SET_RANGE_ACCURACY (0x60B705A5) function."
    },
    "ai_combat.combat_class_ai_set_range_between_bursts_delay": {
        "prefix": [
            "ai_combat.combat_class_ai_set_range_between_bursts_delay",
            "combat_class_ai_set_range_between_bursts_delay"
        ],
        "body": [
            "ai_combat.combat_class_ai_set_range_between_bursts_delay(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_AI_SET_RANGE_BETWEEN_BURSTS_DELAY (0xC30DB881) function."
    },
    "ai_combat.combat_class_name_register_int": {
        "prefix": [
            "ai_combat.combat_class_name_register_int",
            "combat_class_name_register_int"
        ],
        "body": [
            "ai_combat.combat_class_name_register_int(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_NAME_REGISTER_INT (0x8DE6AF29) function."
    },
    "ai_combat.combat_class_request_exists": {
        "prefix": [
            "ai_combat.combat_class_request_exists",
            "combat_class_request_exists"
        ],
        "body": [
            "local result --[[ boolean ]] = ai_combat.combat_class_request_exists()"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_REQUEST_EXISTS (0x629E2E88) function."
    },
    "ai_combat.combat_class_request_get_actor": {
        "prefix": [
            "ai_combat.combat_class_request_get_actor",
            "combat_class_request_get_actor"
        ],
        "body": [
            "local result --[[ integer ]] = ai_combat.combat_class_request_get_actor()"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_REQUEST_GET_ACTOR (0x0EDD5D43) function."
    },
    "ai_combat.combat_class_request_get_enum_int": {
        "prefix": [
            "ai_combat.combat_class_request_get_enum_int",
            "combat_class_request_get_enum_int"
        ],
        "body": [
            "local result --[[ integer ]] = ai_combat.combat_class_request_get_enum_int()"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_REQUEST_GET_ENUM_INT (0x76478D6E) function."
    },
    "ai_combat.combat_class_request_completed": {
        "prefix": [
            "ai_combat.combat_class_request_completed",
            "combat_class_request_completed"
        ],
        "body": [
            "ai_combat.combat_class_request_completed()"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_REQUEST_COMPLETED (0xE66AD206) function."
    },
    "ai_combat.combat_class_server_set_script": {
        "prefix": [
            "ai_combat.combat_class_server_set_script",
            "combat_class_server_set_script"
        ],
        "body": [
            "ai_combat.combat_class_server_set_script(unk0 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::COMBAT_CLASS_SERVER_SET_SCRIPT (0xAD3877AF) function."
    },
    "ai_combat.ai_combat_set_new_state_machine_enabled": {
        "prefix": [
            "ai_combat.ai_combat_set_new_state_machine_enabled",
            "ai_combat_set_new_state_machine_enabled"
        ],
        "body": [
            "ai_combat.ai_combat_set_new_state_machine_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_COMBAT::AI_COMBAT_SET_NEW_STATE_MACHINE_ENABLED (0x7F73E1E8) function."
    },
    "ai_converse.ai_converse_set_greeting_context": {
        "prefix": [
            "ai_converse.ai_converse_set_greeting_context",
            "ai_converse_set_greeting_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_greeting_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_GREETING_CONTEXT (0x30402375) function."
    },
    "ai_converse.ai_converse_set_gossip_ambient_context": {
        "prefix": [
            "ai_converse.ai_converse_set_gossip_ambient_context",
            "ai_converse_set_gossip_ambient_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_gossip_ambient_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_GOSSIP_AMBIENT_CONTEXT (0x7922F870) function."
    },
    "ai_converse.ai_converse_set_gossip_reply_context": {
        "prefix": [
            "ai_converse.ai_converse_set_gossip_reply_context",
            "ai_converse_set_gossip_reply_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_gossip_reply_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_GOSSIP_REPLY_CONTEXT (0x663723A0) function."
    },
    "ai_converse.ai_converse_set_goodbye_start_context": {
        "prefix": [
            "ai_converse.ai_converse_set_goodbye_start_context",
            "ai_converse_set_goodbye_start_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_goodbye_start_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_GOODBYE_START_CONTEXT (0x93CFB180) function."
    },
    "ai_converse.ai_converse_set_goodbye_context": {
        "prefix": [
            "ai_converse.ai_converse_set_goodbye_context",
            "ai_converse_set_goodbye_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_goodbye_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_GOODBYE_CONTEXT (0xA1FCBA24) function."
    },
    "ai_converse.ai_converse_init_campfire_context_storage": {
        "prefix": [
            "ai_converse.ai_converse_init_campfire_context_storage",
            "ai_converse_init_campfire_context_storage"
        ],
        "body": [
            "ai_converse.ai_converse_init_campfire_context_storage()"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_INIT_CAMPFIRE_CONTEXT_STORAGE (0x7ED8B78C) function."
    },
    "ai_converse.ai_converse_set_campfire_invite_context": {
        "prefix": [
            "ai_converse.ai_converse_set_campfire_invite_context",
            "ai_converse_set_campfire_invite_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_campfire_invite_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_CAMPFIRE_INVITE_CONTEXT (0xD4871BDB) function."
    },
    "ai_converse.ai_converse_set_campfire_context": {
        "prefix": [
            "ai_converse.ai_converse_set_campfire_context",
            "ai_converse_set_campfire_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_campfire_context(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_CAMPFIRE_CONTEXT (0xA88359B9) function."
    },
    "ai_converse.ai_converse_set_campfire_story_context": {
        "prefix": [
            "ai_converse.ai_converse_set_campfire_story_context",
            "ai_converse_set_campfire_story_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_campfire_story_context(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_CAMPFIRE_STORY_CONTEXT (0xAD42EABC) function."
    },
    "ai_converse.ai_converse_set_campfire_story_done_context": {
        "prefix": [
            "ai_converse.ai_converse_set_campfire_story_done_context",
            "ai_converse_set_campfire_story_done_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_campfire_story_done_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_CAMPFIRE_STORY_DONE_CONTEXT (0xC65F6751) function."
    },
    "ai_converse.ai_converse_set_campfire_story_leave_context": {
        "prefix": [
            "ai_converse.ai_converse_set_campfire_story_leave_context",
            "ai_converse_set_campfire_story_leave_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_campfire_story_leave_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_CAMPFIRE_STORY_LEAVE_CONTEXT (0x83CBD612) function."
    },
    "ai_converse.ai_converse_set_campfire_response_context": {
        "prefix": [
            "ai_converse.ai_converse_set_campfire_response_context",
            "ai_converse_set_campfire_response_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_campfire_response_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_CAMPFIRE_RESPONSE_CONTEXT (0x4AD2BC30) function."
    },
    "ai_converse.ai_set_campfire_story_enabled": {
        "prefix": [
            "ai_converse.ai_set_campfire_story_enabled",
            "ai_set_campfire_story_enabled"
        ],
        "body": [
            "ai_converse.ai_set_campfire_story_enabled(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_SET_CAMPFIRE_STORY_ENABLED (0xC1F9A360) function."
    },
    "ai_converse.ai_converse_set_giddyup_context": {
        "prefix": [
            "ai_converse.ai_converse_set_giddyup_context",
            "ai_converse_set_giddyup_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_giddyup_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_GIDDYUP_CONTEXT (0xFCD2DE48) function."
    },
    "ai_converse.ai_converse_set_woah_context": {
        "prefix": [
            "ai_converse.ai_converse_set_woah_context",
            "ai_converse_set_woah_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_woah_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_WOAH_CONTEXT (0xB8F1D736) function."
    },
    "ai_converse.ai_converse_disable": {
        "prefix": [
            "ai_converse.ai_converse_disable",
            "ai_converse_disable"
        ],
        "body": [
            "ai_converse.ai_converse_disable(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_DISABLE (0xEA86A817) function."
    },
    "ai_converse.ai_converse_enable": {
        "prefix": [
            "ai_converse.ai_converse_enable",
            "ai_converse_enable"
        ],
        "body": [
            "ai_converse.ai_converse_enable(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_ENABLE (0x43F59172) function."
    },
    "ai_converse.ai_converse_add_campfire_converser": {
        "prefix": [
            "ai_converse.ai_converse_add_campfire_converser",
            "ai_converse_add_campfire_converser"
        ],
        "body": [
            "ai_converse.ai_converse_add_campfire_converser(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_ADD_CAMPFIRE_CONVERSER (0x52D984AF) function."
    },
    "ai_converse.ai_converse_remove_campfire_converser": {
        "prefix": [
            "ai_converse.ai_converse_remove_campfire_converser",
            "ai_converse_remove_campfire_converser"
        ],
        "body": [
            "ai_converse.ai_converse_remove_campfire_converser(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_REMOVE_CAMPFIRE_CONVERSER (0x1D4786CF) function."
    },
    "ai_converse.ai_converse_set_greet_saucy_context": {
        "prefix": [
            "ai_converse.ai_converse_set_greet_saucy_context",
            "ai_converse_set_greet_saucy_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_greet_saucy_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_GREET_SAUCY_CONTEXT (0x375BBD85) function."
    },
    "ai_converse.ai_converse_set_solicit_context": {
        "prefix": [
            "ai_converse.ai_converse_set_solicit_context",
            "ai_converse_set_solicit_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_solicit_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_SOLICIT_CONTEXT (0x4819FB7C) function."
    },
    "ai_converse.ai_converse_set_rejection_context": {
        "prefix": [
            "ai_converse.ai_converse_set_rejection_context",
            "ai_converse_set_rejection_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_rejection_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_REJECTION_CONTEXT (0xC4F468AA) function."
    },
    "ai_converse.game_estimate_mount": {
        "prefix": [
            "ai_converse.game_estimate_mount",
            "game_estimate_mount"
        ],
        "body": [
            "ai_converse.game_estimate_mount(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::GAME_ESTIMATE_MOUNT (0xBD3A0E6D) function."
    },
    "ai_converse.ai_converse_set_greet_player_context": {
        "prefix": [
            "ai_converse.ai_converse_set_greet_player_context",
            "ai_converse_set_greet_player_context"
        ],
        "body": [
            "ai_converse.ai_converse_set_greet_player_context(unk0 --[[ integer ]])"
        ],
        "description": "AI_CONVERSE::AI_CONVERSE_SET_GREET_PLAYER_CONTEXT (0xD6BBC8AA) function."
    },
    "ai_memory.memory_clear_events": {
        "prefix": [
            "ai_memory.memory_clear_events",
            "memory_clear_events"
        ],
        "body": [
            "ai_memory.memory_clear_events(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_CLEAR_EVENTS (0x8CD37E9E) function."
    },
    "ai_memory.memory_clear_all": {
        "prefix": [
            "ai_memory.memory_clear_all",
            "memory_clear_all"
        ],
        "body": [
            "ai_memory.memory_clear_all(unk0 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_CLEAR_ALL (0x4485B246) function."
    },
    "ai_memory.memory_consider_according_to_faction": {
        "prefix": [
            "ai_memory.memory_consider_according_to_faction",
            "memory_consider_according_to_faction"
        ],
        "body": [
            "ai_memory.memory_consider_according_to_faction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_CONSIDER_ACCORDING_TO_FACTION (0xACD4084D) function."
    },
    "ai_memory.memory_consider_as": {
        "prefix": [
            "ai_memory.memory_consider_as",
            "memory_consider_as"
        ],
        "body": [
            "ai_memory.memory_consider_as(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_CONSIDER_AS (0x296C01A4) function."
    },
    "ai_memory.memory_consider_as_enemy": {
        "prefix": [
            "ai_memory.memory_consider_as_enemy",
            "memory_consider_as_enemy"
        ],
        "body": [
            "ai_memory.memory_consider_as_enemy(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_CONSIDER_AS_ENEMY (0x745A1BA3) function."
    },
    "ai_memory.memory_get_is_identified": {
        "prefix": [
            "ai_memory.memory_get_is_identified",
            "memory_get_is_identified"
        ],
        "body": [
            "local result --[[ integer ]] = ai_memory.memory_get_is_identified(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_GET_IS_IDENTIFIED (0x0810A7BA) function."
    },
    "ai_memory.memory_get_is_visible": {
        "prefix": [
            "ai_memory.memory_get_is_visible",
            "memory_get_is_visible"
        ],
        "body": [
            "local result --[[ integer ]] = ai_memory.memory_get_is_visible(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_GET_IS_VISIBLE (0x45CE40FD) function."
    },
    "ai_memory.memory_get_was_visible_within_time": {
        "prefix": [
            "ai_memory.memory_get_was_visible_within_time",
            "memory_get_was_visible_within_time"
        ],
        "body": [
            "local result --[[ integer ]] = ai_memory.memory_get_was_visible_within_time(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_GET_WAS_VISIBLE_WITHIN_TIME (0xC407497F) function."
    },
    "ai_memory.memory_identify": {
        "prefix": [
            "ai_memory.memory_identify",
            "memory_identify"
        ],
        "body": [
            "ai_memory.memory_identify(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_IDENTIFY (0xBA09085C) function."
    },
    "ai_memory.memory_report_position": {
        "prefix": [
            "ai_memory.memory_report_position",
            "memory_report_position"
        ],
        "body": [
            "ai_memory.memory_report_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_REPORT_POSITION (0x052CC7CE) function."
    },
    "ai_memory.memory_report_position_auto": {
        "prefix": [
            "ai_memory.memory_report_position_auto",
            "memory_report_position_auto"
        ],
        "body": [
            "ai_memory.memory_report_position_auto(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_REPORT_POSITION_AUTO (0x2F589CDF) function."
    },
    "ai_memory.memory_get_must_identify": {
        "prefix": [
            "ai_memory.memory_get_must_identify",
            "memory_get_must_identify"
        ],
        "body": [
            "local result --[[ integer ]] = ai_memory.memory_get_must_identify(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_GET_MUST_IDENTIFY (0x05B3D34F) function."
    },
    "ai_memory.memory_attack_on_sight": {
        "prefix": [
            "ai_memory.memory_attack_on_sight",
            "memory_attack_on_sight"
        ],
        "body": [
            "ai_memory.memory_attack_on_sight(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_ATTACK_ON_SIGHT (0x5A83A1EA) function."
    },
    "ai_memory.memory_clear_riding_preference": {
        "prefix": [
            "ai_memory.memory_clear_riding_preference",
            "memory_clear_riding_preference"
        ],
        "body": [
            "ai_memory.memory_clear_riding_preference(unk0 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_CLEAR_RIDING_PREFERENCE (0x48AA959E) function."
    },
    "ai_memory.memory_prefer_riding": {
        "prefix": [
            "ai_memory.memory_prefer_riding",
            "memory_prefer_riding"
        ],
        "body": [
            "ai_memory.memory_prefer_riding(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_PREFER_RIDING (0x1B72B0DD) function."
    },
    "ai_memory.memory_prefer_walking": {
        "prefix": [
            "ai_memory.memory_prefer_walking",
            "memory_prefer_walking"
        ],
        "body": [
            "ai_memory.memory_prefer_walking(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_PREFER_WALKING (0x2F7B60A4) function."
    },
    "ai_memory.memory_prefer_melee": {
        "prefix": [
            "ai_memory.memory_prefer_melee",
            "memory_prefer_melee"
        ],
        "body": [
            "ai_memory.memory_prefer_melee(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_PREFER_MELEE (0x2F929ECD) function."
    },
    "ai_memory.memory_force_melee": {
        "prefix": [
            "ai_memory.memory_force_melee",
            "memory_force_melee"
        ],
        "body": [
            "ai_memory.memory_force_melee(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_FORCE_MELEE (0xC175F2B5) function."
    },
    "ai_memory.memory_allow_shooting": {
        "prefix": [
            "ai_memory.memory_allow_shooting",
            "memory_allow_shooting"
        ],
        "body": [
            "ai_memory.memory_allow_shooting(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_ALLOW_SHOOTING (0x937E1760) function."
    },
    "ai_memory.memory_allow_take_cover": {
        "prefix": [
            "ai_memory.memory_allow_take_cover",
            "memory_allow_take_cover"
        ],
        "body": [
            "ai_memory.memory_allow_take_cover(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_ALLOW_TAKE_COVER (0xE944E5F8) function."
    },
    "ai_memory.memory_allow_throwing_explosives": {
        "prefix": [
            "ai_memory.memory_allow_throwing_explosives",
            "memory_allow_throwing_explosives"
        ],
        "body": [
            "ai_memory.memory_allow_throwing_explosives(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_ALLOW_THROWING_EXPLOSIVES (0xDBDB57D0) function."
    },
    "ai_memory.memory_clear_weapon_draw_preference": {
        "prefix": [
            "ai_memory.memory_clear_weapon_draw_preference",
            "memory_clear_weapon_draw_preference"
        ],
        "body": [
            "ai_memory.memory_clear_weapon_draw_preference(unk0 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_CLEAR_WEAPON_DRAW_PREFERENCE (0xDD965D74) function."
    },
    "ai_memory.memory_set_weapon_draw_preference": {
        "prefix": [
            "ai_memory.memory_set_weapon_draw_preference",
            "memory_set_weapon_draw_preference"
        ],
        "body": [
            "ai_memory.memory_set_weapon_draw_preference(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_SET_WEAPON_DRAW_PREFERENCE (0xF8CB6260) function."
    },
    "ai_memory.memory_get_position_last_known_time": {
        "prefix": [
            "ai_memory.memory_get_position_last_known_time",
            "memory_get_position_last_known_time"
        ],
        "body": [
            "local result --[[ integer ]] = ai_memory.memory_get_position_last_known_time(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_GET_POSITION_LAST_KNOWN_TIME (0x7E77DD6C) function."
    },
    "ai_memory.memory_everybody_forget_about": {
        "prefix": [
            "ai_memory.memory_everybody_forget_about",
            "memory_everybody_forget_about"
        ],
        "body": [
            "ai_memory.memory_everybody_forget_about(unk0 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_EVERYBODY_FORGET_ABOUT (0x7EDD316C) function."
    },
    "ai_memory.memory_everybody_forget_about_everything": {
        "prefix": [
            "ai_memory.memory_everybody_forget_about_everything",
            "memory_everybody_forget_about_everything"
        ],
        "body": [
            "ai_memory.memory_everybody_forget_about_everything()"
        ],
        "description": "AI_MEMORY::MEMORY_EVERYBODY_FORGET_ABOUT_EVERYTHING (0xD1628C57) function."
    },
    "ai_memory.memory_should_always_pathfind_in_formation": {
        "prefix": [
            "ai_memory.memory_should_always_pathfind_in_formation",
            "memory_should_always_pathfind_in_formation"
        ],
        "body": [
            "ai_memory.memory_should_always_pathfind_in_formation(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::MEMORY_SHOULD_ALWAYS_PATHFIND_IN_FORMATION (0x052E865C) function."
    },
    "ai_memory.ai_global_clear_all_danger": {
        "prefix": [
            "ai_memory.ai_global_clear_all_danger",
            "ai_global_clear_all_danger"
        ],
        "body": [
            "ai_memory.ai_global_clear_all_danger()"
        ],
        "description": "AI_MEMORY::AI_GLOBAL_CLEAR_ALL_DANGER (0xAF94B7D9) function."
    },
    "ai_memory.ai_global_clear_danger": {
        "prefix": [
            "ai_memory.ai_global_clear_danger",
            "ai_global_clear_danger"
        ],
        "body": [
            "ai_memory.ai_global_clear_danger(unk0 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::AI_GLOBAL_CLEAR_DANGER (0xB6FCFFAA) function."
    },
    "ai_memory.ai_global_get_permanent_danger": {
        "prefix": [
            "ai_memory.ai_global_get_permanent_danger",
            "ai_global_get_permanent_danger"
        ],
        "body": [
            "local result --[[ integer ]] = ai_memory.ai_global_get_permanent_danger(unk0 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::AI_GLOBAL_GET_PERMANENT_DANGER (0xFF00B4E6) function."
    },
    "ai_memory.ai_global_is_danger": {
        "prefix": [
            "ai_memory.ai_global_is_danger",
            "ai_global_is_danger"
        ],
        "body": [
            "local result --[[ integer ]] = ai_memory.ai_global_is_danger(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::AI_GLOBAL_IS_DANGER (0x5EC098F2) function."
    },
    "ai_memory.ai_global_set_permanent_danger": {
        "prefix": [
            "ai_memory.ai_global_set_permanent_danger",
            "ai_global_set_permanent_danger"
        ],
        "body": [
            "ai_memory.ai_global_set_permanent_danger(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::AI_GLOBAL_SET_PERMANENT_DANGER (0x64C177FB) function."
    },
    "ai_memory.ai_global_report_danger": {
        "prefix": [
            "ai_memory.ai_global_report_danger",
            "ai_global_report_danger"
        ],
        "body": [
            "ai_memory.ai_global_report_danger(unk0 --[[ integer ]])"
        ],
        "description": "AI_MEMORY::AI_GLOBAL_REPORT_DANGER (0xCF70330C) function."
    },
    "ai_misc.ai_behavior_set_allow": {
        "prefix": [
            "ai_misc.ai_behavior_set_allow",
            "ai_behavior_set_allow"
        ],
        "body": [
            "ai_misc.ai_behavior_set_allow(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_BEHAVIOR_SET_ALLOW (0x4A69F264) function."
    },
    "ai_misc.ai_goal_aim_at_object": {
        "prefix": [
            "ai_misc.ai_goal_aim_at_object",
            "ai_goal_aim_at_object"
        ],
        "body": [
            "ai_misc.ai_goal_aim_at_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_AIM_AT_OBJECT (0x3CD232B2) function."
    },
    "ai_misc.ai_goal_aim_clear": {
        "prefix": [
            "ai_misc.ai_goal_aim_clear",
            "ai_goal_aim_clear"
        ],
        "body": [
            "ai_misc.ai_goal_aim_clear(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_AIM_CLEAR (0xD5100DC2) function."
    },
    "ai_misc.ai_goal_look_at_actor": {
        "prefix": [
            "ai_misc.ai_goal_look_at_actor",
            "ai_goal_look_at_actor"
        ],
        "body": [
            "ai_misc.ai_goal_look_at_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_LOOK_AT_ACTOR (0x96928D25) function."
    },
    "ai_misc.ai_goal_look_at_coord": {
        "prefix": [
            "ai_misc.ai_goal_look_at_coord",
            "ai_goal_look_at_coord"
        ],
        "body": [
            "ai_misc.ai_goal_look_at_coord(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_LOOK_AT_COORD (0xB162690D) function."
    },
    "ai_misc.ai_goal_look_at_actor_new": {
        "prefix": [
            "ai_misc.ai_goal_look_at_actor_new",
            "ai_goal_look_at_actor_new"
        ],
        "body": [
            "ai_misc.ai_goal_look_at_actor_new(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_LOOK_AT_ACTOR_NEW (0x15B7044B) function."
    },
    "ai_misc.ai_goal_look_at_neutral": {
        "prefix": [
            "ai_misc.ai_goal_look_at_neutral",
            "ai_goal_look_at_neutral"
        ],
        "body": [
            "ai_misc.ai_goal_look_at_neutral(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_LOOK_AT_NEUTRAL (0x8456676E) function."
    },
    "ai_misc.ai_goal_look_clear": {
        "prefix": [
            "ai_misc.ai_goal_look_clear",
            "ai_goal_look_clear"
        ],
        "body": [
            "ai_misc.ai_goal_look_clear(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_LOOK_CLEAR (0x6AF3E54E) function."
    },
    "ai_misc.ai_goal_shoot_at_coord": {
        "prefix": [
            "ai_misc.ai_goal_shoot_at_coord",
            "ai_goal_shoot_at_coord"
        ],
        "body": [
            "ai_misc.ai_goal_shoot_at_coord(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_SHOOT_AT_COORD (0x6C65E46E) function."
    },
    "ai_misc.ai_goal_shoot_clear": {
        "prefix": [
            "ai_misc.ai_goal_shoot_clear",
            "ai_goal_shoot_clear"
        ],
        "body": [
            "ai_misc.ai_goal_shoot_clear(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_SHOOT_CLEAR (0xC43A9268) function."
    },
    "ai_misc.ai_predicate_find_named": {
        "prefix": [
            "ai_misc.ai_predicate_find_named",
            "ai_predicate_find_named"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_predicate_find_named(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_PREDICATE_FIND_NAMED (0x31D76951) function."
    },
    "ai_misc.ai_predicate_is_valid": {
        "prefix": [
            "ai_misc.ai_predicate_is_valid",
            "ai_predicate_is_valid"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_predicate_is_valid(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_PREDICATE_IS_VALID (0x1FEECD4C) function."
    },
    "ai_misc.ai_predicate_override_clear": {
        "prefix": [
            "ai_misc.ai_predicate_override_clear",
            "ai_predicate_override_clear"
        ],
        "body": [
            "ai_misc.ai_predicate_override_clear(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_PREDICATE_OVERRIDE_CLEAR (0x1A137442) function."
    },
    "ai_misc.ai_predicate_override_clear_all": {
        "prefix": [
            "ai_misc.ai_predicate_override_clear_all",
            "ai_predicate_override_clear_all"
        ],
        "body": [
            "ai_misc.ai_predicate_override_clear_all(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_PREDICATE_OVERRIDE_CLEAR_ALL (0x3CAC2441) function."
    },
    "ai_misc.ai_predicate_override_set_bool": {
        "prefix": [
            "ai_misc.ai_predicate_override_set_bool",
            "ai_predicate_override_set_bool"
        ],
        "body": [
            "ai_misc.ai_predicate_override_set_bool(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_PREDICATE_OVERRIDE_SET_BOOL (0x1117C85A) function."
    },
    "ai_misc.ai_ignore_actor": {
        "prefix": [
            "ai_misc.ai_ignore_actor",
            "ai_ignore_actor"
        ],
        "body": [
            "local result --[[ boolean ]] = ai_misc.ai_ignore_actor(actor --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_IGNORE_ACTOR (0x8D1FC73C) function."
    },
    "ai_misc.ai_stop_ignoring_actor": {
        "prefix": [
            "ai_misc.ai_stop_ignoring_actor",
            "ai_stop_ignoring_actor"
        ],
        "body": [
            "local result --[[ boolean ]] = ai_misc.ai_stop_ignoring_actor(actor --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_STOP_IGNORING_ACTOR (0x98790639) function."
    },
    "ai_misc.ai_stop_ignoring_actors": {
        "prefix": [
            "ai_misc.ai_stop_ignoring_actors",
            "ai_stop_ignoring_actors"
        ],
        "body": [
            "ai_misc.ai_stop_ignoring_actors()"
        ],
        "description": "AI_MISC::AI_STOP_IGNORING_ACTORS (0x4DF3C5D1) function."
    },
    "ai_misc.ai_dont_harm_actor": {
        "prefix": [
            "ai_misc.ai_dont_harm_actor",
            "ai_dont_harm_actor"
        ],
        "body": [
            "ai_misc.ai_dont_harm_actor(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_DONT_HARM_ACTOR (0xB421AFCA) function."
    },
    "ai_misc.ai_clear_dont_harm_actor": {
        "prefix": [
            "ai_misc.ai_clear_dont_harm_actor",
            "ai_clear_dont_harm_actor"
        ],
        "body": [
            "ai_misc.ai_clear_dont_harm_actor(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_CLEAR_DONT_HARM_ACTOR (0xA737CCAC) function."
    },
    "ai_misc.ai_set_allow_hostile_attack_ai": {
        "prefix": [
            "ai_misc.ai_set_allow_hostile_attack_ai",
            "ai_set_allow_hostile_attack_ai"
        ],
        "body": [
            "ai_misc.ai_set_allow_hostile_attack_ai(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_ALLOW_HOSTILE_ATTACK_AI (0xBE17EB88) function."
    },
    "ai_misc.ai_set_allow_hostile_attack_player": {
        "prefix": [
            "ai_misc.ai_set_allow_hostile_attack_player",
            "ai_set_allow_hostile_attack_player"
        ],
        "body": [
            "ai_misc.ai_set_allow_hostile_attack_player(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_ALLOW_HOSTILE_ATTACK_PLAYER (0xABC78721) function."
    },
    "ai_misc.ai_shoot_target_set_bone": {
        "prefix": [
            "ai_misc.ai_shoot_target_set_bone",
            "ai_shoot_target_set_bone"
        ],
        "body": [
            "ai_misc.ai_shoot_target_set_bone(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SHOOT_TARGET_SET_BONE (0x47C2C7B0) function."
    },
    "ai_misc.set_forced_look_enable": {
        "prefix": [
            "ai_misc.set_forced_look_enable",
            "set_forced_look_enable"
        ],
        "body": [
            "ai_misc.set_forced_look_enable(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::SET_FORCED_LOOK_ENABLE (0xA90A13A5) function."
    },
    "ai_misc.stop_force_look_at_coord": {
        "prefix": [
            "ai_misc.stop_force_look_at_coord",
            "stop_force_look_at_coord"
        ],
        "body": [
            "ai_misc.stop_force_look_at_coord(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::STOP_FORCE_LOOK_AT_COORD (0x6C194C1F) function."
    },
    "ai_misc.force_look_at_actor": {
        "prefix": [
            "ai_misc.force_look_at_actor",
            "force_look_at_actor"
        ],
        "body": [
            "ai_misc.force_look_at_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ number ]])"
        ],
        "description": "AI_MISC::FORCE_LOOK_AT_ACTOR (0xFE5715A1) function."
    },
    "ai_misc.set_auto_conversation_look": {
        "prefix": [
            "ai_misc.set_auto_conversation_look",
            "set_auto_conversation_look"
        ],
        "body": [
            "ai_misc.set_auto_conversation_look(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::SET_AUTO_CONVERSATION_LOOK (0xA29B9458) function."
    },
    "ai_misc.ai_goal_look_at_player_when_within": {
        "prefix": [
            "ai_misc.ai_goal_look_at_player_when_within",
            "ai_goal_look_at_player_when_within"
        ],
        "body": [
            "ai_misc.ai_goal_look_at_player_when_within(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GOAL_LOOK_AT_PLAYER_WHEN_WITHIN (0x1F07FC4C) function."
    },
    "ai_misc.clear_actors_horse": {
        "prefix": [
            "ai_misc.clear_actors_horse",
            "clear_actors_horse"
        ],
        "body": [
            "ai_misc.clear_actors_horse(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::CLEAR_ACTORS_HORSE (0xFEB74094) function."
    },
    "ai_misc.get_actors_horse": {
        "prefix": [
            "ai_misc.get_actors_horse",
            "get_actors_horse"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.get_actors_horse(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::GET_ACTORS_HORSE (0x8DDE894F) function."
    },
    "ai_misc.set_actors_horse": {
        "prefix": [
            "ai_misc.set_actors_horse",
            "set_actors_horse"
        ],
        "body": [
            "ai_misc.set_actors_horse(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::SET_ACTORS_HORSE (0xCFFDF09D) function."
    },
    "ai_misc.is_ai_actor_in_combat": {
        "prefix": [
            "ai_misc.is_ai_actor_in_combat",
            "is_ai_actor_in_combat"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.is_ai_actor_in_combat(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::IS_AI_ACTOR_IN_COMBAT (0x08D3CDF9) function."
    },
    "ai_misc.is_ai_actor_unalerted": {
        "prefix": [
            "ai_misc.is_ai_actor_unalerted",
            "is_ai_actor_unalerted"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.is_ai_actor_unalerted(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::IS_AI_ACTOR_UNALERTED (0xC4D114A6) function."
    },
    "ai_misc.ai_set_range_accuracy_modifier": {
        "prefix": [
            "ai_misc.ai_set_range_accuracy_modifier",
            "ai_set_range_accuracy_modifier"
        ],
        "body": [
            "ai_misc.ai_set_range_accuracy_modifier(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_RANGE_ACCURACY_MODIFIER (0x57F96655) function."
    },
    "ai_misc.ai_set_disarmed": {
        "prefix": [
            "ai_misc.ai_set_disarmed",
            "ai_set_disarmed"
        ],
        "body": [
            "ai_misc.ai_set_disarmed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_DISARMED (0x2444577C) function."
    },
    "ai_misc.ai_impairment_mask_get_current_for_actor": {
        "prefix": [
            "ai_misc.ai_impairment_mask_get_current_for_actor",
            "ai_impairment_mask_get_current_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_impairment_mask_get_current_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_IMPAIRMENT_MASK_GET_CURRENT_FOR_ACTOR (0xAFB1CC55) function."
    },
    "ai_misc.ai_impairment_mask_matches": {
        "prefix": [
            "ai_misc.ai_impairment_mask_matches",
            "ai_impairment_mask_matches"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_impairment_mask_matches(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_IMPAIRMENT_MASK_MATCHES (0xB4A15D17) function."
    },
    "ai_misc.ai_actor_force_speed": {
        "prefix": [
            "ai_misc.ai_actor_force_speed",
            "ai_actor_force_speed"
        ],
        "body": [
            "ai_misc.ai_actor_force_speed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_ACTOR_FORCE_SPEED (0x70B409D5) function."
    },
    "ai_misc.ai_actor_set_match_walk_speed_enabled": {
        "prefix": [
            "ai_misc.ai_actor_set_match_walk_speed_enabled",
            "ai_actor_set_match_walk_speed_enabled"
        ],
        "body": [
            "ai_misc.ai_actor_set_match_walk_speed_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_ACTOR_SET_MATCH_WALK_SPEED_ENABLED (0x7387772C) function."
    },
    "ai_misc.ai_set_weapon_max_range": {
        "prefix": [
            "ai_misc.ai_set_weapon_max_range",
            "ai_set_weapon_max_range"
        ],
        "body": [
            "ai_misc.ai_set_weapon_max_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_WEAPON_MAX_RANGE (0xD2BFA6E4) function."
    },
    "ai_misc.ai_set_weapon_min_range": {
        "prefix": [
            "ai_misc.ai_set_weapon_min_range",
            "ai_set_weapon_min_range"
        ],
        "body": [
            "ai_misc.ai_set_weapon_min_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_WEAPON_MIN_RANGE (0xE067A925) function."
    },
    "ai_misc.ai_set_weapon_desired_range": {
        "prefix": [
            "ai_misc.ai_set_weapon_desired_range",
            "ai_set_weapon_desired_range"
        ],
        "body": [
            "ai_misc.ai_set_weapon_desired_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_WEAPON_DESIRED_RANGE (0xDA005857) function."
    },
    "ai_misc.ai_set_burst_duration": {
        "prefix": [
            "ai_misc.ai_set_burst_duration",
            "ai_set_burst_duration"
        ],
        "body": [
            "ai_misc.ai_set_burst_duration(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_BURST_DURATION (0x85F2DF87) function."
    },
    "ai_misc.ai_set_burst_duration_randomness": {
        "prefix": [
            "ai_misc.ai_set_burst_duration_randomness",
            "ai_set_burst_duration_randomness"
        ],
        "body": [
            "ai_misc.ai_set_burst_duration_randomness(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_BURST_DURATION_RANDOMNESS (0x9E164C44) function."
    },
    "ai_misc.ai_set_fire_delay": {
        "prefix": [
            "ai_misc.ai_set_fire_delay",
            "ai_set_fire_delay"
        ],
        "body": [
            "ai_misc.ai_set_fire_delay(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_FIRE_DELAY (0x05861CF4) function."
    },
    "ai_misc.ai_set_fire_delay_randomness": {
        "prefix": [
            "ai_misc.ai_set_fire_delay_randomness",
            "ai_set_fire_delay_randomness"
        ],
        "body": [
            "ai_misc.ai_set_fire_delay_randomness(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_FIRE_DELAY_RANDOMNESS (0xC5873149) function."
    },
    "ai_misc.ai_set_shots_per_burst": {
        "prefix": [
            "ai_misc.ai_set_shots_per_burst",
            "ai_set_shots_per_burst"
        ],
        "body": [
            "ai_misc.ai_set_shots_per_burst(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_SHOTS_PER_BURST (0xE0172E2D) function."
    },
    "ai_misc.ai_clear_burst_duration": {
        "prefix": [
            "ai_misc.ai_clear_burst_duration",
            "ai_clear_burst_duration"
        ],
        "body": [
            "ai_misc.ai_clear_burst_duration(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_CLEAR_BURST_DURATION (0x01FD4402) function."
    },
    "ai_misc.ai_clear_burst_duration_randomness": {
        "prefix": [
            "ai_misc.ai_clear_burst_duration_randomness",
            "ai_clear_burst_duration_randomness"
        ],
        "body": [
            "ai_misc.ai_clear_burst_duration_randomness(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_CLEAR_BURST_DURATION_RANDOMNESS (0xCA8EE2A4) function."
    },
    "ai_misc.ai_clear_fire_delay": {
        "prefix": [
            "ai_misc.ai_clear_fire_delay",
            "ai_clear_fire_delay"
        ],
        "body": [
            "ai_misc.ai_clear_fire_delay(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_CLEAR_FIRE_DELAY (0xD6886191) function."
    },
    "ai_misc.ai_clear_fire_delay_randomness": {
        "prefix": [
            "ai_misc.ai_clear_fire_delay_randomness",
            "ai_clear_fire_delay_randomness"
        ],
        "body": [
            "ai_misc.ai_clear_fire_delay_randomness(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_CLEAR_FIRE_DELAY_RANDOMNESS (0xE8511960) function."
    },
    "ai_misc.ai_clear_shots_per_burst": {
        "prefix": [
            "ai_misc.ai_clear_shots_per_burst",
            "ai_clear_shots_per_burst"
        ],
        "body": [
            "ai_misc.ai_clear_shots_per_burst(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_CLEAR_SHOTS_PER_BURST (0x58A7B2A1) function."
    },
    "ai_misc.ai_reset_firing_fsm": {
        "prefix": [
            "ai_misc.ai_reset_firing_fsm",
            "ai_reset_firing_fsm"
        ],
        "body": [
            "ai_misc.ai_reset_firing_fsm(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_RESET_FIRING_FSM (0x46F51754) function."
    },
    "ai_misc.ai_set_gatling_max_horizontal_degrees": {
        "prefix": [
            "ai_misc.ai_set_gatling_max_horizontal_degrees",
            "ai_set_gatling_max_horizontal_degrees"
        ],
        "body": [
            "ai_misc.ai_set_gatling_max_horizontal_degrees(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_GATLING_MAX_HORIZONTAL_DEGREES (0xEA2A40BC) function."
    },
    "ai_misc.ai_is_hostile_or_enemy": {
        "prefix": [
            "ai_misc.ai_is_hostile_or_enemy",
            "ai_is_hostile_or_enemy"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_is_hostile_or_enemy(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_IS_HOSTILE_OR_ENEMY (0x9AB964F4) function."
    },
    "ai_misc.ai_quick_exit_gringo": {
        "prefix": [
            "ai_misc.ai_quick_exit_gringo",
            "ai_quick_exit_gringo"
        ],
        "body": [
            "ai_misc.ai_quick_exit_gringo(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_QUICK_EXIT_GRINGO (0x6FAF13C2) function."
    },
    "ai_misc.ai_is_aggroing": {
        "prefix": [
            "ai_misc.ai_is_aggroing",
            "ai_is_aggroing"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_is_aggroing(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_IS_AGGROING (0xC94F9499) function."
    },
    "ai_misc.ai_set_allowed_mount_directions": {
        "prefix": [
            "ai_misc.ai_set_allowed_mount_directions",
            "ai_set_allowed_mount_directions"
        ],
        "body": [
            "ai_misc.ai_set_allowed_mount_directions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_ALLOWED_MOUNT_DIRECTIONS (0x7F07210F) function."
    },
    "ai_misc.ai_avoid_ignore_actor": {
        "prefix": [
            "ai_misc.ai_avoid_ignore_actor",
            "ai_avoid_ignore_actor"
        ],
        "body": [
            "ai_misc.ai_avoid_ignore_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_AVOID_IGNORE_ACTOR (0x68B268BE) function."
    },
    "ai_misc.is_ai_actor_engaged_in_combat": {
        "prefix": [
            "ai_misc.is_ai_actor_engaged_in_combat",
            "is_ai_actor_engaged_in_combat"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.is_ai_actor_engaged_in_combat(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::IS_AI_ACTOR_ENGAGED_IN_COMBAT (0x2DBCB78A) function."
    },
    "ai_misc.was_ai_actor_player_weapon_threatened_by": {
        "prefix": [
            "ai_misc.was_ai_actor_player_weapon_threatened_by",
            "was_ai_actor_player_weapon_threatened_by"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.was_ai_actor_player_weapon_threatened_by(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MISC::WAS_AI_ACTOR_PLAYER_WEAPON_THREATENED_BY (0xF5752F72) function."
    },
    "ai_misc.ai_set_allow_attack_hogtied_actors": {
        "prefix": [
            "ai_misc.ai_set_allow_attack_hogtied_actors",
            "ai_set_allow_attack_hogtied_actors"
        ],
        "body": [
            "ai_misc.ai_set_allow_attack_hogtied_actors(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_ALLOW_ATTACK_HOGTIED_ACTORS (0x2EBE540D) function."
    },
    "ai_misc.ai_get_is_retreating": {
        "prefix": [
            "ai_misc.ai_get_is_retreating",
            "ai_get_is_retreating"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_get_is_retreating(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GET_IS_RETREATING (0x2FABB559) function."
    },
    "ai_misc.ai_has_player_projectile_impacted_within": {
        "prefix": [
            "ai_misc.ai_has_player_projectile_impacted_within",
            "ai_has_player_projectile_impacted_within"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_has_player_projectile_impacted_within(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_HAS_PLAYER_PROJECTILE_IMPACTED_WITHIN (0x059F64B8) function."
    },
    "ai_misc.ai_has_player_projectile_near_missed_within": {
        "prefix": [
            "ai_misc.ai_has_player_projectile_near_missed_within",
            "ai_has_player_projectile_near_missed_within"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_has_player_projectile_near_missed_within(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_HAS_PLAYER_PROJECTILE_NEAR_MISSED_WITHIN (0xD8574E09) function."
    },
    "ai_misc.ai_set_player_projectile_impact_hear_range": {
        "prefix": [
            "ai_misc.ai_set_player_projectile_impact_hear_range",
            "ai_set_player_projectile_impact_hear_range"
        ],
        "body": [
            "ai_misc.ai_set_player_projectile_impact_hear_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_PLAYER_PROJECTILE_IMPACT_HEAR_RANGE (0xDCD2FC0F) function."
    },
    "ai_misc.ai_has_actor_bumped_into_me": {
        "prefix": [
            "ai_misc.ai_has_actor_bumped_into_me",
            "ai_has_actor_bumped_into_me"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_has_actor_bumped_into_me(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_HAS_ACTOR_BUMPED_INTO_ME (0x6BCC744A) function."
    },
    "ai_misc.ai_was_pushed_over": {
        "prefix": [
            "ai_misc.ai_was_pushed_over",
            "ai_was_pushed_over"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_was_pushed_over(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_WAS_PUSHED_OVER (0x09493438) function."
    },
    "ai_misc.ai_self_defense_get_attacked_player_first": {
        "prefix": [
            "ai_misc.ai_self_defense_get_attacked_player_first",
            "ai_self_defense_get_attacked_player_first"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_self_defense_get_attacked_player_first(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SELF_DEFENSE_GET_ATTACKED_PLAYER_FIRST (0x68C50F50) function."
    },
    "ai_misc.ai_get_task_retreat_flag": {
        "prefix": [
            "ai_misc.ai_get_task_retreat_flag",
            "ai_get_task_retreat_flag"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_get_task_retreat_flag(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_GET_TASK_RETREAT_FLAG (0x9B742D25) function."
    },
    "ai_misc.prevent_despawn_clear": {
        "prefix": [
            "ai_misc.prevent_despawn_clear",
            "prevent_despawn_clear"
        ],
        "body": [
            "ai_misc.prevent_despawn_clear()"
        ],
        "description": "AI_MISC::PREVENT_DESPAWN_CLEAR (0x2E5F186B) function."
    },
    "ai_misc.prevent_despawn_set_sphere": {
        "prefix": [
            "ai_misc.prevent_despawn_set_sphere",
            "prevent_despawn_set_sphere"
        ],
        "body": [
            "ai_misc.prevent_despawn_set_sphere(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AI_MISC::PREVENT_DESPAWN_SET_SPHERE (0x5C94F6EC) function."
    },
    "ai_misc.ai_has_actor_threatened_recently": {
        "prefix": [
            "ai_misc.ai_has_actor_threatened_recently",
            "ai_has_actor_threatened_recently"
        ],
        "body": [
            "local result --[[ integer ]] = ai_misc.ai_has_actor_threatened_recently(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_HAS_ACTOR_THREATENED_RECENTLY (0x5D72FDB6) function."
    },
    "ai_misc.ai_replace_all_tr": {
        "prefix": [
            "ai_misc.ai_replace_all_tr",
            "ai_replace_all_tr"
        ],
        "body": [
            "ai_misc.ai_replace_all_tr(unk0 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_REPLACE_ALL_TR (0x06B4A139) function."
    },
    "ai_misc.ai_set_tr_program_for_actor": {
        "prefix": [
            "ai_misc.ai_set_tr_program_for_actor",
            "ai_set_tr_program_for_actor"
        ],
        "body": [
            "ai_misc.ai_set_tr_program_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_MISC::AI_SET_TR_PROGRAM_FOR_ACTOR (0x4D53AC21) function."
    },
    "ai_nav.ai_clear_nav_material_usage": {
        "prefix": [
            "ai_nav.ai_clear_nav_material_usage",
            "ai_clear_nav_material_usage"
        ],
        "body": [
            "ai_nav.ai_clear_nav_material_usage(unk0 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_CLEAR_NAV_MATERIAL_USAGE (0x6ADF2927) function."
    },
    "ai_nav.ai_set_nav_actor_width": {
        "prefix": [
            "ai_nav.ai_set_nav_actor_width",
            "ai_set_nav_actor_width"
        ],
        "body": [
            "ai_nav.ai_set_nav_actor_width(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_ACTOR_WIDTH (0x8404592D) function."
    },
    "ai_nav.ai_set_nav_hazard_avoidance_enabled": {
        "prefix": [
            "ai_nav.ai_set_nav_hazard_avoidance_enabled",
            "ai_set_nav_hazard_avoidance_enabled"
        ],
        "body": [
            "ai_nav.ai_set_nav_hazard_avoidance_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_HAZARD_AVOIDANCE_ENABLED (0x5D752432) function."
    },
    "ai_nav.ai_set_nav_material_usage": {
        "prefix": [
            "ai_nav.ai_set_nav_material_usage",
            "ai_set_nav_material_usage"
        ],
        "body": [
            "ai_nav.ai_set_nav_material_usage(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_MATERIAL_USAGE (0x7B00615F) function."
    },
    "ai_nav.ai_set_nav_pathfinding_enabled": {
        "prefix": [
            "ai_nav.ai_set_nav_pathfinding_enabled",
            "ai_set_nav_pathfinding_enabled"
        ],
        "body": [
            "ai_nav.ai_set_nav_pathfinding_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_PATHFINDING_ENABLED (0x4495F5FC) function."
    },
    "ai_nav.ai_set_nav_pathfinding_enabled_when_driving": {
        "prefix": [
            "ai_nav.ai_set_nav_pathfinding_enabled_when_driving",
            "ai_set_nav_pathfinding_enabled_when_driving"
        ],
        "body": [
            "ai_nav.ai_set_nav_pathfinding_enabled_when_driving(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_PATHFINDING_ENABLED_WHEN_DRIVING (0x98966941) function."
    },
    "ai_nav.ai_set_nav_max_water_depth_level": {
        "prefix": [
            "ai_nav.ai_set_nav_max_water_depth_level",
            "ai_set_nav_max_water_depth_level"
        ],
        "body": [
            "ai_nav.ai_set_nav_max_water_depth_level(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_MAX_WATER_DEPTH_LEVEL (0x29D07F70) function."
    },
    "ai_nav.ai_set_nav_actor_avoidance_mode": {
        "prefix": [
            "ai_nav.ai_set_nav_actor_avoidance_mode",
            "ai_set_nav_actor_avoidance_mode"
        ],
        "body": [
            "ai_nav.ai_set_nav_actor_avoidance_mode(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_ACTOR_AVOIDANCE_MODE (0x5B483036) function."
    },
    "ai_nav.ai_set_nav_actor_avoidance_allow_turns": {
        "prefix": [
            "ai_nav.ai_set_nav_actor_avoidance_allow_turns",
            "ai_set_nav_actor_avoidance_allow_turns"
        ],
        "body": [
            "ai_nav.ai_set_nav_actor_avoidance_allow_turns(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_ACTOR_AVOIDANCE_ALLOW_TURNS (0xFCB31704) function."
    },
    "ai_nav.ai_reset_nav_subgrid_cell_size": {
        "prefix": [
            "ai_nav.ai_reset_nav_subgrid_cell_size",
            "ai_reset_nav_subgrid_cell_size"
        ],
        "body": [
            "ai_nav.ai_reset_nav_subgrid_cell_size(unk0 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_RESET_NAV_SUBGRID_CELL_SIZE (0x750A1EF6) function."
    },
    "ai_nav.ai_set_nav_subgrid_cell_size": {
        "prefix": [
            "ai_nav.ai_set_nav_subgrid_cell_size",
            "ai_set_nav_subgrid_cell_size"
        ],
        "body": [
            "ai_nav.ai_set_nav_subgrid_cell_size(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_SUBGRID_CELL_SIZE (0xFF3CEFE2) function."
    },
    "ai_nav.ai_set_nav_failsafe_movement_enabled": {
        "prefix": [
            "ai_nav.ai_set_nav_failsafe_movement_enabled",
            "ai_set_nav_failsafe_movement_enabled"
        ],
        "body": [
            "ai_nav.ai_set_nav_failsafe_movement_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SET_NAV_FAILSAFE_MOVEMENT_ENABLED (0xC900F0E8) function."
    },
    "ai_nav.ai_get_nav_failsafe_movement_enabled": {
        "prefix": [
            "ai_nav.ai_get_nav_failsafe_movement_enabled",
            "ai_get_nav_failsafe_movement_enabled"
        ],
        "body": [
            "local result --[[ integer ]] = ai_nav.ai_get_nav_failsafe_movement_enabled(unk0 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_GET_NAV_FAILSAFE_MOVEMENT_ENABLED (0xD6F4FDAD) function."
    },
    "ai_nav.ai_swap_nav_data": {
        "prefix": [
            "ai_nav.ai_swap_nav_data",
            "ai_swap_nav_data"
        ],
        "body": [
            "ai_nav.ai_swap_nav_data(unk0 --[[ integer ]])"
        ],
        "description": "AI_NAV::AI_SWAP_NAV_DATA (0xF435CCDE) function."
    },
    "ai_perception.disable_verify_ss": {
        "prefix": [
            "ai_perception.disable_verify_ss",
            "disable_verify_ss"
        ],
        "body": [
            "ai_perception.disable_verify_ss(unk0 --[[ integer ]])"
        ],
        "description": "AI_PERCEPTION::DISABLE_VERIFY_SS (0x5C580036) function."
    },
    "ai_perception.ai_perception_set_visual_id_distance": {
        "prefix": [
            "ai_perception.ai_perception_set_visual_id_distance",
            "ai_perception_set_visual_id_distance"
        ],
        "body": [
            "ai_perception.ai_perception_set_visual_id_distance(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_PERCEPTION::AI_PERCEPTION_SET_VISUAL_ID_DISTANCE (0x66064774) function."
    },
    "ai_perception.ai_perception_set_visual_id_time": {
        "prefix": [
            "ai_perception.ai_perception_set_visual_id_time",
            "ai_perception_set_visual_id_time"
        ],
        "body": [
            "ai_perception.ai_perception_set_visual_id_time(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_PERCEPTION::AI_PERCEPTION_SET_VISUAL_ID_TIME (0xD786E8C7) function."
    },
    "ai_perception.ai_disable_perception": {
        "prefix": [
            "ai_perception.ai_disable_perception",
            "ai_disable_perception"
        ],
        "body": [
            "ai_perception.ai_disable_perception(unk0 --[[ integer ]])"
        ],
        "description": "AI_PERCEPTION::AI_DISABLE_PERCEPTION (0x8BBB7B12) function."
    },
    "ai_perception.ai_enable_perception": {
        "prefix": [
            "ai_perception.ai_enable_perception",
            "ai_enable_perception"
        ],
        "body": [
            "ai_perception.ai_enable_perception(unk0 --[[ integer ]])"
        ],
        "description": "AI_PERCEPTION::AI_ENABLE_PERCEPTION (0xAF77C42E) function."
    },
    "ai_ride.ai_riding_set_attribute": {
        "prefix": [
            "ai_ride.ai_riding_set_attribute",
            "ai_riding_set_attribute"
        ],
        "body": [
            "local result --[[ integer ]] = ai_ride.ai_riding_set_attribute(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ number ]])"
        ],
        "description": "AI_RIDE::AI_RIDING_SET_ATTRIBUTE (0x9DDFA9CA) function."
    },
    "ai_ride.ai_riding_set_enabled": {
        "prefix": [
            "ai_ride.ai_riding_set_enabled",
            "ai_riding_set_enabled"
        ],
        "body": [
            "local result --[[ integer ]] = ai_ride.ai_riding_set_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_RIDE::AI_RIDING_SET_ENABLED (0xF8AFEFA1) function."
    },
    "ai_speech.ai_speech_add_phrase": {
        "prefix": [
            "ai_speech.ai_speech_add_phrase",
            "ai_speech_add_phrase"
        ],
        "body": [
            "local result --[[ integer ]] = ai_speech.ai_speech_add_phrase(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_ADD_PHRASE (0xD269F20B) function."
    },
    "ai_speech.ai_speech_add_tag_for_phrase": {
        "prefix": [
            "ai_speech.ai_speech_add_tag_for_phrase",
            "ai_speech_add_tag_for_phrase"
        ],
        "body": [
            "ai_speech.ai_speech_add_tag_for_phrase(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_ADD_TAG_FOR_PHRASE (0x15CFAB4C) function."
    },
    "ai_speech.ai_speech_register_event": {
        "prefix": [
            "ai_speech.ai_speech_register_event",
            "ai_speech_register_event"
        ],
        "body": [
            "ai_speech.ai_speech_register_event(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_REGISTER_EVENT (0xDD925074) function."
    },
    "ai_speech.ai_speech_register_tag": {
        "prefix": [
            "ai_speech.ai_speech_register_tag",
            "ai_speech_register_tag"
        ],
        "body": [
            "ai_speech.ai_speech_register_tag(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_REGISTER_TAG (0xA08B3E4B) function."
    },
    "ai_speech.ai_speech_register_tags_begin": {
        "prefix": [
            "ai_speech.ai_speech_register_tags_begin",
            "ai_speech_register_tags_begin"
        ],
        "body": [
            "ai_speech.ai_speech_register_tags_begin(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_REGISTER_TAGS_BEGIN (0xAB297CCB) function."
    },
    "ai_speech.ai_speech_register_tags_end": {
        "prefix": [
            "ai_speech.ai_speech_register_tags_end",
            "ai_speech_register_tags_end"
        ],
        "body": [
            "ai_speech.ai_speech_register_tags_end()"
        ],
        "description": "AI_SPEECH::AI_SPEECH_REGISTER_TAGS_END (0x90B577F5) function."
    },
    "ai_speech.ai_speech_get_allow_for_actor": {
        "prefix": [
            "ai_speech.ai_speech_get_allow_for_actor",
            "ai_speech_get_allow_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = ai_speech.ai_speech_get_allow_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_GET_ALLOW_FOR_ACTOR (0xFF0BF292) function."
    },
    "ai_speech.ai_speech_set_allow_context_for_actor": {
        "prefix": [
            "ai_speech.ai_speech_set_allow_context_for_actor",
            "ai_speech_set_allow_context_for_actor"
        ],
        "body": [
            "ai_speech.ai_speech_set_allow_context_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_SET_ALLOW_CONTEXT_FOR_ACTOR (0x6AAB4CD0) function."
    },
    "ai_speech.ai_speech_set_allow_context_global": {
        "prefix": [
            "ai_speech.ai_speech_set_allow_context_global",
            "ai_speech_set_allow_context_global"
        ],
        "body": [
            "ai_speech.ai_speech_set_allow_context_global(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_SET_ALLOW_CONTEXT_GLOBAL (0x10DDB016) function."
    },
    "ai_speech.ai_speech_set_allow_for_actor": {
        "prefix": [
            "ai_speech.ai_speech_set_allow_for_actor",
            "ai_speech_set_allow_for_actor"
        ],
        "body": [
            "ai_speech.ai_speech_set_allow_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_SET_ALLOW_FOR_ACTOR (0x56421F1A) function."
    },
    "ai_speech.ai_speech_set_default_package": {
        "prefix": [
            "ai_speech.ai_speech_set_default_package",
            "ai_speech_set_default_package"
        ],
        "body": [
            "ai_speech.ai_speech_set_default_package(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_SPEECH_SET_DEFAULT_PACKAGE (0x829F3E70) function."
    },
    "ai_speech.ai_get_actor_conversation_target": {
        "prefix": [
            "ai_speech.ai_get_actor_conversation_target",
            "ai_get_actor_conversation_target"
        ],
        "body": [
            "local result --[[ integer ]] = ai_speech.ai_get_actor_conversation_target(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_GET_ACTOR_CONVERSATION_TARGET (0xD8C8BEA1) function."
    },
    "ai_speech.ai_is_actor_socializing": {
        "prefix": [
            "ai_speech.ai_is_actor_socializing",
            "ai_is_actor_socializing"
        ],
        "body": [
            "local result --[[ integer ]] = ai_speech.ai_is_actor_socializing(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH::AI_IS_ACTOR_SOCIALIZING (0x679C5955) function."
    },
    "ai_speech_context.speech_context_init_data": {
        "prefix": [
            "ai_speech_context.speech_context_init_data",
            "speech_context_init_data"
        ],
        "body": [
            "ai_speech_context.speech_context_init_data(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_INIT_DATA (0xD85BAFA8) function."
    },
    "ai_speech_context.speech_context_add_child": {
        "prefix": [
            "ai_speech_context.speech_context_add_child",
            "speech_context_add_child"
        ],
        "body": [
            "ai_speech_context.speech_context_add_child(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_ADD_CHILD (0xEB99D1A9) function."
    },
    "ai_speech_context.speech_context_set_time_restriction": {
        "prefix": [
            "ai_speech_context.speech_context_set_time_restriction",
            "speech_context_set_time_restriction"
        ],
        "body": [
            "ai_speech_context.speech_context_set_time_restriction(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_TIME_RESTRICTION (0x0386C556) function."
    },
    "ai_speech_context.speech_context_set_opposite_gender_restriction": {
        "prefix": [
            "ai_speech_context.speech_context_set_opposite_gender_restriction",
            "speech_context_set_opposite_gender_restriction"
        ],
        "body": [
            "ai_speech_context.speech_context_set_opposite_gender_restriction(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_OPPOSITE_GENDER_RESTRICTION (0xF63FA0A1) function."
    },
    "ai_speech_context.speech_context_set_ethnicity_restriction": {
        "prefix": [
            "ai_speech_context.speech_context_set_ethnicity_restriction",
            "speech_context_set_ethnicity_restriction"
        ],
        "body": [
            "ai_speech_context.speech_context_set_ethnicity_restriction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_ETHNICITY_RESTRICTION (0xB59AD5B1) function."
    },
    "ai_speech_context.speech_context_set_restriction_is_law": {
        "prefix": [
            "ai_speech_context.speech_context_set_restriction_is_law",
            "speech_context_set_restriction_is_law"
        ],
        "body": [
            "ai_speech_context.speech_context_set_restriction_is_law(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_RESTRICTION_IS_LAW (0x4F64116B) function."
    },
    "ai_speech_context.speech_context_set_weather_restriction_good": {
        "prefix": [
            "ai_speech_context.speech_context_set_weather_restriction_good",
            "speech_context_set_weather_restriction_good"
        ],
        "body": [
            "ai_speech_context.speech_context_set_weather_restriction_good(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_WEATHER_RESTRICTION_GOOD (0xBAD8B9A8) function."
    },
    "ai_speech_context.speech_context_set_weather_restriction_rainy": {
        "prefix": [
            "ai_speech_context.speech_context_set_weather_restriction_rainy",
            "speech_context_set_weather_restriction_rainy"
        ],
        "body": [
            "ai_speech_context.speech_context_set_weather_restriction_rainy(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_WEATHER_RESTRICTION_RAINY (0x6CBF76AB) function."
    },
    "ai_speech_context.speech_context_set_target_player": {
        "prefix": [
            "ai_speech_context.speech_context_set_target_player",
            "speech_context_set_target_player"
        ],
        "body": [
            "ai_speech_context.speech_context_set_target_player(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_TARGET_PLAYER (0xE0DD373F) function."
    },
    "ai_speech_context.speech_context_set_target_initial_faction": {
        "prefix": [
            "ai_speech_context.speech_context_set_target_initial_faction",
            "speech_context_set_target_initial_faction"
        ],
        "body": [
            "ai_speech_context.speech_context_set_target_initial_faction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_TARGET_INITIAL_FACTION (0x3C6FE75D) function."
    },
    "ai_speech_context.speech_context_set_player_identity_restriction": {
        "prefix": [
            "ai_speech_context.speech_context_set_player_identity_restriction",
            "speech_context_set_player_identity_restriction"
        ],
        "body": [
            "ai_speech_context.speech_context_set_player_identity_restriction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_PLAYER_IDENTITY_RESTRICTION (0x74E7F898) function."
    },
    "ai_speech_context.speech_context_set_allow_phrase_reuse": {
        "prefix": [
            "ai_speech_context.speech_context_set_allow_phrase_reuse",
            "speech_context_set_allow_phrase_reuse"
        ],
        "body": [
            "ai_speech_context.speech_context_set_allow_phrase_reuse(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::SPEECH_CONTEXT_SET_ALLOW_PHRASE_REUSE (0xA13D379B) function."
    },
    "ai_speech_context.disable_noncombat_speech_universal": {
        "prefix": [
            "ai_speech_context.disable_noncombat_speech_universal",
            "disable_noncombat_speech_universal"
        ],
        "body": [
            "ai_speech_context.disable_noncombat_speech_universal(unk0 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::DISABLE_NONCOMBAT_SPEECH_UNIVERSAL (0xAC72E757) function."
    },
    "ai_speech_context.disable_noncombat_speech_individual": {
        "prefix": [
            "ai_speech_context.disable_noncombat_speech_individual",
            "disable_noncombat_speech_individual"
        ],
        "body": [
            "ai_speech_context.disable_noncombat_speech_individual(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_SPEECH_CONTEXT::DISABLE_NONCOMBAT_SPEECH_INDIVIDUAL (0x99AFD2D1) function."
    },
    "ai_vision.can_anyone_of_faction_see_object": {
        "prefix": [
            "ai_vision.can_anyone_of_faction_see_object",
            "can_anyone_of_faction_see_object"
        ],
        "body": [
            "local result --[[ boolean ]] = ai_vision.can_anyone_of_faction_see_object(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_VISION::CAN_ANYONE_OF_FACTION_SEE_OBJECT (0x656D3D26) function."
    },
    "ai_world.enable_ambient_spawning": {
        "prefix": [
            "ai_world.enable_ambient_spawning",
            "enable_ambient_spawning"
        ],
        "body": [
            "ai_world.enable_ambient_spawning(enable --[[ boolean ]])"
        ],
        "description": "AI_WORLD::ENABLE_AMBIENT_SPAWNING (0xA8ADCAEB) function."
    },
    "ai_world.set_ambient_force_wait_state": {
        "prefix": [
            "ai_world.set_ambient_force_wait_state",
            "set_ambient_force_wait_state"
        ],
        "body": [
            "ai_world.set_ambient_force_wait_state(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::SET_AMBIENT_FORCE_WAIT_STATE (0xB35C0660) function."
    },
    "ai_world.set_pop_density_multiplier": {
        "prefix": [
            "ai_world.set_pop_density_multiplier",
            "set_pop_density_multiplier"
        ],
        "body": [
            "ai_world.set_pop_density_multiplier(multiplier --[[ number ]])"
        ],
        "description": "AI_WORLD::SET_POP_DENSITY_MULTIPLIER (0xE9C41DFE) function."
    },
    "ai_world.destroy_ambient_actors_if_possible": {
        "prefix": [
            "ai_world.destroy_ambient_actors_if_possible",
            "destroy_ambient_actors_if_possible"
        ],
        "body": [
            "ai_world.destroy_ambient_actors_if_possible()"
        ],
        "description": "AI_WORLD::DESTROY_AMBIENT_ACTORS_IF_POSSIBLE (0xB09D5B43) function."
    },
    "ai_world.force_ambient_num_actors_requested_for_missions": {
        "prefix": [
            "ai_world.force_ambient_num_actors_requested_for_missions",
            "force_ambient_num_actors_requested_for_missions"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.force_ambient_num_actors_requested_for_missions()"
        ],
        "description": "AI_WORLD::FORCE_AMBIENT_NUM_ACTORS_REQUESTED_FOR_MISSIONS (0x5831679F) function."
    },
    "ai_world.set_ambient_num_actors_requested_for_missions": {
        "prefix": [
            "ai_world.set_ambient_num_actors_requested_for_missions",
            "set_ambient_num_actors_requested_for_missions"
        ],
        "body": [
            "ai_world.set_ambient_num_actors_requested_for_missions(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::SET_AMBIENT_NUM_ACTORS_REQUESTED_FOR_MISSIONS (0x2CCEA76C) function."
    },
    "ai_world.get_ambient_num_actors_granted_for_missions": {
        "prefix": [
            "ai_world.get_ambient_num_actors_granted_for_missions",
            "get_ambient_num_actors_granted_for_missions"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.get_ambient_num_actors_granted_for_missions()"
        ],
        "description": "AI_WORLD::GET_AMBIENT_NUM_ACTORS_GRANTED_FOR_MISSIONS (0xA607D290) function."
    },
    "ai_world.get_ambient_max_num_total_actors": {
        "prefix": [
            "ai_world.get_ambient_max_num_total_actors",
            "get_ambient_max_num_total_actors"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.get_ambient_max_num_total_actors()"
        ],
        "description": "AI_WORLD::GET_AMBIENT_MAX_NUM_TOTAL_ACTORS (0xC1A30BB5) function."
    },
    "ai_world.set_ambient_max_num_total_actors": {
        "prefix": [
            "ai_world.set_ambient_max_num_total_actors",
            "set_ambient_max_num_total_actors"
        ],
        "body": [
            "ai_world.set_ambient_max_num_total_actors(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::SET_AMBIENT_MAX_NUM_TOTAL_ACTORS (0x2C4CBC25) function."
    },
    "ai_world.set_ambient_actor_speed_scale_range": {
        "prefix": [
            "ai_world.set_ambient_actor_speed_scale_range",
            "set_ambient_actor_speed_scale_range"
        ],
        "body": [
            "ai_world.set_ambient_actor_speed_scale_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_WORLD::SET_AMBIENT_ACTOR_SPEED_SCALE_RANGE (0x1C8CA53C) function."
    },
    "ai_world.set_ambient_tuning_max_visible_range": {
        "prefix": [
            "ai_world.set_ambient_tuning_max_visible_range",
            "set_ambient_tuning_max_visible_range"
        ],
        "body": [
            "ai_world.set_ambient_tuning_max_visible_range(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::SET_AMBIENT_TUNING_MAX_VISIBLE_RANGE (0xE8960298) function."
    },
    "ai_world.clear_ambient_all_restrictions": {
        "prefix": [
            "ai_world.clear_ambient_all_restrictions",
            "clear_ambient_all_restrictions"
        ],
        "body": [
            "ai_world.clear_ambient_all_restrictions()"
        ],
        "description": "AI_WORLD::CLEAR_AMBIENT_ALL_RESTRICTIONS (0xC78B7436) function."
    },
    "ai_world.add_ambient_spawn_type_restriction": {
        "prefix": [
            "ai_world.add_ambient_spawn_type_restriction",
            "add_ambient_spawn_type_restriction"
        ],
        "body": [
            "ai_world.add_ambient_spawn_type_restriction(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::ADD_AMBIENT_SPAWN_TYPE_RESTRICTION (0xD1CF9793) function."
    },
    "ai_world.clear_ambient_spawn_type_restriction": {
        "prefix": [
            "ai_world.clear_ambient_spawn_type_restriction",
            "clear_ambient_spawn_type_restriction"
        ],
        "body": [
            "ai_world.clear_ambient_spawn_type_restriction(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::CLEAR_AMBIENT_SPAWN_TYPE_RESTRICTION (0xA8BD64D1) function."
    },
    "ai_world.clear_all_ambient_spawn_type_restrictions": {
        "prefix": [
            "ai_world.clear_all_ambient_spawn_type_restrictions",
            "clear_all_ambient_spawn_type_restrictions"
        ],
        "body": [
            "ai_world.clear_all_ambient_spawn_type_restrictions()"
        ],
        "description": "AI_WORLD::CLEAR_ALL_AMBIENT_SPAWN_TYPE_RESTRICTIONS (0x6C7A3CE6) function."
    },
    "ai_world.set_ambient_streaming_required_pop_actor_scale": {
        "prefix": [
            "ai_world.set_ambient_streaming_required_pop_actor_scale",
            "set_ambient_streaming_required_pop_actor_scale"
        ],
        "body": [
            "ai_world.set_ambient_streaming_required_pop_actor_scale(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::SET_AMBIENT_STREAMING_REQUIRED_POP_ACTOR_SCALE (0x95D0FC79) function."
    },
    "ai_world.add_ai_move_restriction_stay_outside_of_volume_set": {
        "prefix": [
            "ai_world.add_ai_move_restriction_stay_outside_of_volume_set",
            "add_ai_move_restriction_stay_outside_of_volume_set"
        ],
        "body": [
            "ai_world.add_ai_move_restriction_stay_outside_of_volume_set(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_WORLD::ADD_AI_MOVE_RESTRICTION_STAY_OUTSIDE_OF_VOLUME_SET (0xEBE88626) function."
    },
    "ai_world.remove_ai_move_restriction_stay_outside_of_volume_set": {
        "prefix": [
            "ai_world.remove_ai_move_restriction_stay_outside_of_volume_set",
            "remove_ai_move_restriction_stay_outside_of_volume_set"
        ],
        "body": [
            "ai_world.remove_ai_move_restriction_stay_outside_of_volume_set(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_WORLD::REMOVE_AI_MOVE_RESTRICTION_STAY_OUTSIDE_OF_VOLUME_SET (0x1AED34CA) function."
    },
    "ai_world.add_ambient_move_restriction_stay_outside_of_volume": {
        "prefix": [
            "ai_world.add_ambient_move_restriction_stay_outside_of_volume",
            "add_ambient_move_restriction_stay_outside_of_volume"
        ],
        "body": [
            "ai_world.add_ambient_move_restriction_stay_outside_of_volume(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::ADD_AMBIENT_MOVE_RESTRICTION_STAY_OUTSIDE_OF_VOLUME (0xCF50D509) function."
    },
    "ai_world.add_ambient_spawn_restriction_stay_outside_of_volume": {
        "prefix": [
            "ai_world.add_ambient_spawn_restriction_stay_outside_of_volume",
            "add_ambient_spawn_restriction_stay_outside_of_volume"
        ],
        "body": [
            "ai_world.add_ambient_spawn_restriction_stay_outside_of_volume(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::ADD_AMBIENT_SPAWN_RESTRICTION_STAY_OUTSIDE_OF_VOLUME (0xD1C09A22) function."
    },
    "ai_world.remove_ambient_move_restriction_stay_outside_of_volume": {
        "prefix": [
            "ai_world.remove_ambient_move_restriction_stay_outside_of_volume",
            "remove_ambient_move_restriction_stay_outside_of_volume"
        ],
        "body": [
            "ai_world.remove_ambient_move_restriction_stay_outside_of_volume(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::REMOVE_AMBIENT_MOVE_RESTRICTION_STAY_OUTSIDE_OF_VOLUME (0x515AC319) function."
    },
    "ai_world.remove_ambient_spawn_restriction_stay_outside_of_volume": {
        "prefix": [
            "ai_world.remove_ambient_spawn_restriction_stay_outside_of_volume",
            "remove_ambient_spawn_restriction_stay_outside_of_volume"
        ],
        "body": [
            "ai_world.remove_ambient_spawn_restriction_stay_outside_of_volume(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::REMOVE_AMBIENT_SPAWN_RESTRICTION_STAY_OUTSIDE_OF_VOLUME (0xD65BAA71) function."
    },
    "ai_world.does_ambient_move_restriction_volume_exist": {
        "prefix": [
            "ai_world.does_ambient_move_restriction_volume_exist",
            "does_ambient_move_restriction_volume_exist"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.does_ambient_move_restriction_volume_exist(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::DOES_AMBIENT_MOVE_RESTRICTION_VOLUME_EXIST (0x21C59F4C) function."
    },
    "ai_world.does_ambient_spawn_restriction_volume_exist": {
        "prefix": [
            "ai_world.does_ambient_spawn_restriction_volume_exist",
            "does_ambient_spawn_restriction_volume_exist"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.does_ambient_spawn_restriction_volume_exist(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::DOES_AMBIENT_SPAWN_RESTRICTION_VOLUME_EXIST (0x02E15363) function."
    },
    "ai_world.release_actor_as_ambient": {
        "prefix": [
            "ai_world.release_actor_as_ambient",
            "release_actor_as_ambient"
        ],
        "body": [
            "ai_world.release_actor_as_ambient(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::RELEASE_ACTOR_AS_AMBIENT (0xC8AD4A8C) function."
    },
    "ai_world.would_actor_be_visible": {
        "prefix": [
            "ai_world.would_actor_be_visible",
            "would_actor_be_visible"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.would_actor_be_visible(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AI_WORLD::WOULD_ACTOR_BE_VISIBLE (0xD8BE8E0C) function."
    },
    "ai_world.activate_emergency_teleport_for_actor": {
        "prefix": [
            "ai_world.activate_emergency_teleport_for_actor",
            "activate_emergency_teleport_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.activate_emergency_teleport_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "AI_WORLD::ACTIVATE_EMERGENCY_TELEPORT_FOR_ACTOR (0x8ED2B0BC) function."
    },
    "ai_world.deactivate_emergency_teleport_for_actor": {
        "prefix": [
            "ai_world.deactivate_emergency_teleport_for_actor",
            "deactivate_emergency_teleport_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.deactivate_emergency_teleport_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::DEACTIVATE_EMERGENCY_TELEPORT_FOR_ACTOR (0x08FD1D81) function."
    },
    "ai_world.is_point_in_ambient_move_restriction_volume": {
        "prefix": [
            "ai_world.is_point_in_ambient_move_restriction_volume",
            "is_point_in_ambient_move_restriction_volume"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.is_point_in_ambient_move_restriction_volume(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::IS_POINT_IN_AMBIENT_MOVE_RESTRICTION_VOLUME (0x257C73C5) function."
    },
    "ai_world.set_actor_obey_ambient_move_restrictions": {
        "prefix": [
            "ai_world.set_actor_obey_ambient_move_restrictions",
            "set_actor_obey_ambient_move_restrictions"
        ],
        "body": [
            "ai_world.set_actor_obey_ambient_move_restrictions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AI_WORLD::SET_ACTOR_OBEY_AMBIENT_MOVE_RESTRICTIONS (0xED3071A5) function."
    },
    "ai_world.does_actor_obey_ambient_move_restrictions": {
        "prefix": [
            "ai_world.does_actor_obey_ambient_move_restrictions",
            "does_actor_obey_ambient_move_restrictions"
        ],
        "body": [
            "local result --[[ integer ]] = ai_world.does_actor_obey_ambient_move_restrictions(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::DOES_ACTOR_OBEY_AMBIENT_MOVE_RESTRICTIONS (0xFF642652) function."
    },
    "ai_world.set_ambient_dead_count_decay_rate": {
        "prefix": [
            "ai_world.set_ambient_dead_count_decay_rate",
            "set_ambient_dead_count_decay_rate"
        ],
        "body": [
            "ai_world.set_ambient_dead_count_decay_rate(unk0 --[[ integer ]])"
        ],
        "description": "AI_WORLD::SET_AMBIENT_DEAD_COUNT_DECAY_RATE (0x851F88F6) function."
    },
    "ambience.ambience_audio_entity_update_territory": {
        "prefix": [
            "ambience.ambience_audio_entity_update_territory",
            "ambience_audio_entity_update_territory"
        ],
        "body": [
            "ambience.ambience_audio_entity_update_territory(str --[[ string ]])"
        ],
        "description": "AMBIENCE::AMBIENCE_AUDIO_ENTITY_UPDATE_TERRITORY (0x2A3B1045) function."
    },
    "ambience.ambience_audio_entity_update_location": {
        "prefix": [
            "ambience.ambience_audio_entity_update_location",
            "ambience_audio_entity_update_location"
        ],
        "body": [
            "ambience.ambience_audio_entity_update_location(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AMBIENCE::AMBIENCE_AUDIO_ENTITY_UPDATE_LOCATION (0x27A96719) function."
    },
    "ambience.ambience_audio_validate_region": {
        "prefix": [
            "ambience.ambience_audio_validate_region",
            "ambience_audio_validate_region"
        ],
        "body": [
            "ambience.ambience_audio_validate_region(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AMBIENCE::AMBIENCE_AUDIO_VALIDATE_REGION (0xC0556FB8) function."
    },
    "ambient.ambient_set_updates_enabled": {
        "prefix": [
            "ambient.ambient_set_updates_enabled",
            "ambient_set_updates_enabled"
        ],
        "body": [
            "ambient.ambient_set_updates_enabled(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_UPDATES_ENABLED (0xA8226DFF) function."
    },
    "ambient.ambient_set_point_spacing": {
        "prefix": [
            "ambient.ambient_set_point_spacing",
            "ambient_set_point_spacing"
        ],
        "body": [
            "ambient.ambient_set_point_spacing(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_POINT_SPACING (0x831FC466) function."
    },
    "ambient.ambient_set_slope_values": {
        "prefix": [
            "ambient.ambient_set_slope_values",
            "ambient_set_slope_values"
        ],
        "body": [
            "ambient.ambient_set_slope_values(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_SLOPE_VALUES (0xCC9E6F4C) function."
    },
    "ambient.ambient_reset_used_cells": {
        "prefix": [
            "ambient.ambient_reset_used_cells",
            "ambient_reset_used_cells"
        ],
        "body": [
            "ambient.ambient_reset_used_cells()"
        ],
        "description": "AMBIENT::AMBIENT_RESET_USED_CELLS (0x7B07D449) function."
    },
    "ambient.ambient_set_scan_center": {
        "prefix": [
            "ambient.ambient_set_scan_center",
            "ambient_set_scan_center"
        ],
        "body": [
            "ambient.ambient_set_scan_center(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_SCAN_CENTER (0x205E891C) function."
    },
    "ambient.ambient_set_scan_center_player": {
        "prefix": [
            "ambient.ambient_set_scan_center_player",
            "ambient_set_scan_center_player"
        ],
        "body": [
            "ambient.ambient_set_scan_center_player()"
        ],
        "description": "AMBIENT::AMBIENT_SET_SCAN_CENTER_PLAYER (0x8B011F5D) function."
    },
    "ambient.ambient_reset_filter": {
        "prefix": [
            "ambient.ambient_reset_filter",
            "ambient_reset_filter"
        ],
        "body": [
            "ambient.ambient_reset_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_RESET_FILTER (0x19B26C78) function."
    },
    "ambient.ambient_set_random_search_order": {
        "prefix": [
            "ambient.ambient_set_random_search_order",
            "ambient_set_random_search_order"
        ],
        "body": [
            "ambient.ambient_set_random_search_order(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_RANDOM_SEARCH_ORDER (0xA337135A) function."
    },
    "ambient.ambient_set_oneshot_queries": {
        "prefix": [
            "ambient.ambient_set_oneshot_queries",
            "ambient_set_oneshot_queries"
        ],
        "body": [
            "ambient.ambient_set_oneshot_queries(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_ONESHOT_QUERIES (0x9A35520B) function."
    },
    "ambient.ambient_set_search_center": {
        "prefix": [
            "ambient.ambient_set_search_center",
            "ambient_set_search_center"
        ],
        "body": [
            "ambient.ambient_set_search_center(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_SEARCH_CENTER (0x272D756C) function."
    },
    "ambient.ambient_set_search_center_actor": {
        "prefix": [
            "ambient.ambient_set_search_center_actor",
            "ambient_set_search_center_actor"
        ],
        "body": [
            "ambient.ambient_set_search_center_actor(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_SEARCH_CENTER_ACTOR (0x9A2B05F4) function."
    },
    "ambient.ambient_set_search_center_player": {
        "prefix": [
            "ambient.ambient_set_search_center_player",
            "ambient_set_search_center_player"
        ],
        "body": [
            "ambient.ambient_set_search_center_player()"
        ],
        "description": "AMBIENT::AMBIENT_SET_SEARCH_CENTER_PLAYER (0x21E783AC) function."
    },
    "ambient.ambient_set_slope_filter": {
        "prefix": [
            "ambient.ambient_set_slope_filter",
            "ambient_set_slope_filter"
        ],
        "body": [
            "ambient.ambient_set_slope_filter(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_SLOPE_FILTER (0x391F3607) function."
    },
    "ambient.ambient_enable_slope_filter": {
        "prefix": [
            "ambient.ambient_enable_slope_filter",
            "ambient_enable_slope_filter"
        ],
        "body": [
            "ambient.ambient_enable_slope_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_ENABLE_SLOPE_FILTER (0x2CCE1115) function."
    },
    "ambient.ambient_set_slope_filter_precise": {
        "prefix": [
            "ambient.ambient_set_slope_filter_precise",
            "ambient_set_slope_filter_precise"
        ],
        "body": [
            "ambient.ambient_set_slope_filter_precise(unk0 --[[ number ]], unk1 --[[ number ]], unk2 --[[ number ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_SLOPE_FILTER_PRECISE (0x45190938) function."
    },
    "ambient.ambient_enable_slope_filter_precise": {
        "prefix": [
            "ambient.ambient_enable_slope_filter_precise",
            "ambient_enable_slope_filter_precise"
        ],
        "body": [
            "ambient.ambient_enable_slope_filter_precise(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_ENABLE_SLOPE_FILTER_PRECISE (0x561C9A6D) function."
    },
    "ambient.ambient_set_bump_filter": {
        "prefix": [
            "ambient.ambient_set_bump_filter",
            "ambient_set_bump_filter"
        ],
        "body": [
            "ambient.ambient_set_bump_filter(unk0 --[[ number ]], unk1 --[[ number ]], unk2 --[[ number ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_BUMP_FILTER (0x912EEC43) function."
    },
    "ambient.ambient_enable_bump_filter": {
        "prefix": [
            "ambient.ambient_enable_bump_filter",
            "ambient_enable_bump_filter"
        ],
        "body": [
            "ambient.ambient_enable_bump_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_ENABLE_BUMP_FILTER (0x528C7F3D) function."
    },
    "ambient.ambient_set_distance_filter": {
        "prefix": [
            "ambient.ambient_set_distance_filter",
            "ambient_set_distance_filter"
        ],
        "body": [
            "ambient.ambient_set_distance_filter(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_DISTANCE_FILTER (0xA89B77A7) function."
    },
    "ambient.ambient_enable_distance_filter": {
        "prefix": [
            "ambient.ambient_enable_distance_filter",
            "ambient_enable_distance_filter"
        ],
        "body": [
            "ambient.ambient_enable_distance_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_ENABLE_DISTANCE_FILTER (0x762192EB) function."
    },
    "ambient.ambient_set_elevation_filter": {
        "prefix": [
            "ambient.ambient_set_elevation_filter",
            "ambient_set_elevation_filter"
        ],
        "body": [
            "ambient.ambient_set_elevation_filter(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_ELEVATION_FILTER (0x1900A97E) function."
    },
    "ambient.ambient_set_quadrant_filter": {
        "prefix": [
            "ambient.ambient_set_quadrant_filter",
            "ambient_set_quadrant_filter"
        ],
        "body": [
            "ambient.ambient_set_quadrant_filter(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_QUADRANT_FILTER (0x609514AE) function."
    },
    "ambient.ambient_enable_quadrant_filter": {
        "prefix": [
            "ambient.ambient_enable_quadrant_filter",
            "ambient_enable_quadrant_filter"
        ],
        "body": [
            "ambient.ambient_enable_quadrant_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_ENABLE_QUADRANT_FILTER (0xAA99E18E) function."
    },
    "ambient.ambient_enable_offscreen_filter": {
        "prefix": [
            "ambient.ambient_enable_offscreen_filter",
            "ambient_enable_offscreen_filter"
        ],
        "body": [
            "ambient.ambient_enable_offscreen_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_ENABLE_OFFSCREEN_FILTER (0x76341F1A) function."
    },
    "ambient.ambient_enable_material_at_point_filter": {
        "prefix": [
            "ambient.ambient_enable_material_at_point_filter",
            "ambient_enable_material_at_point_filter"
        ],
        "body": [
            "ambient.ambient_enable_material_at_point_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_ENABLE_MATERIAL_AT_POINT_FILTER (0x309D058C) function."
    },
    "ambient.ambient_set_material_at_point_filter": {
        "prefix": [
            "ambient.ambient_set_material_at_point_filter",
            "ambient_set_material_at_point_filter"
        ],
        "body": [
            "ambient.ambient_set_material_at_point_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_MATERIAL_AT_POINT_FILTER (0xB1609063) function."
    },
    "ambient.ambient_enable_material_in_area_includes_filter": {
        "prefix": [
            "ambient.ambient_enable_material_in_area_includes_filter",
            "ambient_enable_material_in_area_includes_filter"
        ],
        "body": [
            "ambient.ambient_enable_material_in_area_includes_filter(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_ENABLE_MATERIAL_IN_AREA_INCLUDES_FILTER (0x5A6418A2) function."
    },
    "ambient.ambient_set_material_in_area_includes_filter": {
        "prefix": [
            "ambient.ambient_set_material_in_area_includes_filter",
            "ambient_set_material_in_area_includes_filter"
        ],
        "body": [
            "ambient.ambient_set_material_in_area_includes_filter(unk0 --[[ integer ]], unk1 --[[ number ]], unk2 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_MATERIAL_IN_AREA_INCLUDES_FILTER (0x9CD2B55F) function."
    },
    "ambient.ambient_set_material_in_area_excludes_filter": {
        "prefix": [
            "ambient.ambient_set_material_in_area_excludes_filter",
            "ambient_set_material_in_area_excludes_filter"
        ],
        "body": [
            "ambient.ambient_set_material_in_area_excludes_filter(unk0 --[[ integer ]], unk1 --[[ number ]], unk2 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_MATERIAL_IN_AREA_EXCLUDES_FILTER (0xBCD4979C) function."
    },
    "ambient._ambient_enable_elevation_in_area_range_filter": {
        "prefix": [
            "ambient._ambient_enable_elevation_in_area_range_filter",
            "_ambient_enable_elevation_in_area_range_filter"
        ],
        "body": [
            "ambient._ambient_enable_elevation_in_area_range_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::_AMBIENT_ENABLE_ELEVATION_IN_AREA_RANGE_FILTER (0x30C67D05) function."
    },
    "ambient._ambient_set_elevation_in_area_range_filter": {
        "prefix": [
            "ambient._ambient_set_elevation_in_area_range_filter",
            "_ambient_set_elevation_in_area_range_filter"
        ],
        "body": [
            "ambient._ambient_set_elevation_in_area_range_filter(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AMBIENT::_AMBIENT_SET_ELEVATION_IN_AREA_RANGE_FILTER (0x0AC99007) function."
    },
    "ambient.ambient_enable_elevation_derivative_in_area_filter": {
        "prefix": [
            "ambient.ambient_enable_elevation_derivative_in_area_filter",
            "ambient_enable_elevation_derivative_in_area_filter"
        ],
        "body": [
            "ambient.ambient_enable_elevation_derivative_in_area_filter(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_ENABLE_ELEVATION_DERIVATIVE_IN_AREA_FILTER (0xC8B149B4) function."
    },
    "ambient.ambient_set_elevation_derivative_in_area_filter": {
        "prefix": [
            "ambient.ambient_set_elevation_derivative_in_area_filter",
            "ambient_set_elevation_derivative_in_area_filter"
        ],
        "body": [
            "ambient.ambient_set_elevation_derivative_in_area_filter(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_ELEVATION_DERIVATIVE_IN_AREA_FILTER (0x54BD1C65) function."
    },
    "ambient.ambient_set_exclusion_volume": {
        "prefix": [
            "ambient.ambient_set_exclusion_volume",
            "ambient_set_exclusion_volume"
        ],
        "body": [
            "ambient.ambient_set_exclusion_volume(unk0 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_SET_EXCLUSION_VOLUME (0x90008899) function."
    },
    "ambient.ambient_get_point": {
        "prefix": [
            "ambient.ambient_get_point",
            "ambient_get_point"
        ],
        "body": [
            "local result --[[ integer ]] = ambient.ambient_get_point(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AMBIENT::AMBIENT_GET_POINT (0x0C6EF9E1) function."
    },
    "anim.get_actor_anim_current_time": {
        "prefix": [
            "anim.get_actor_anim_current_time",
            "get_actor_anim_current_time"
        ],
        "body": [
            "local result --[[ number ]] = anim.get_actor_anim_current_time(actor --[[ integer ]], animation --[[ string ]])"
        ],
        "description": "ANIM::GET_ACTOR_ANIM_CURRENT_TIME (0x8609F5E1) function."
    },
    "anim.set_actor_anim_current_time": {
        "prefix": [
            "anim.set_actor_anim_current_time",
            "set_actor_anim_current_time"
        ],
        "body": [
            "local result --[[ boolean ]] = anim.set_actor_anim_current_time(actor --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::SET_ACTOR_ANIM_CURRENT_TIME (0x8626C1A0) function."
    },
    "anim.is_actor_anim_playing": {
        "prefix": [
            "anim.is_actor_anim_playing",
            "is_actor_anim_playing"
        ],
        "body": [
            "local result --[[ boolean ]] = anim.is_actor_anim_playing(actor --[[ integer ]], animation --[[ string ]])"
        ],
        "description": "ANIM::IS_ACTOR_ANIM_PLAYING (0x1ADE21EB) function."
    },
    "anim.actor_has_anim_set": {
        "prefix": [
            "anim.actor_has_anim_set",
            "actor_has_anim_set"
        ],
        "body": [
            "local result --[[ boolean ]] = anim.actor_has_anim_set(actor --[[ integer ]], animset --[[ string ]])"
        ],
        "description": "ANIM::ACTOR_HAS_ANIM_SET (0x31F5F57D) function."
    },
    "anim.set_animation_override_scale": {
        "prefix": [
            "anim.set_animation_override_scale",
            "set_animation_override_scale"
        ],
        "body": [
            "anim.set_animation_override_scale(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::SET_ANIMATION_OVERRIDE_SCALE (0x3E30A514) function."
    },
    "anim.set_panim_params": {
        "prefix": [
            "anim.set_panim_params",
            "set_panim_params"
        ],
        "body": [
            "local result --[[ boolean ]] = anim.set_panim_params(actor --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ANIM::SET_PANIM_PARAMS (0x5941295A) function."
    },
    "anim.set_panim_phase": {
        "prefix": [
            "anim.set_panim_phase",
            "set_panim_phase"
        ],
        "body": [
            "local result --[[ boolean ]] = anim.set_panim_phase(actor --[[ integer ]], phase --[[ integer ]])"
        ],
        "description": "ANIM::SET_PANIM_PHASE (0x94431F5A) function."
    },
    "anim.set_actor_anim_phase_lock": {
        "prefix": [
            "anim.set_actor_anim_phase_lock",
            "set_actor_anim_phase_lock"
        ],
        "body": [
            "anim.set_actor_anim_phase_lock(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::SET_ACTOR_ANIM_PHASE_LOCK (0xB03616C2) function."
    },
    "anim.release_actor_anim_phase_lock": {
        "prefix": [
            "anim.release_actor_anim_phase_lock",
            "release_actor_anim_phase_lock"
        ],
        "body": [
            "anim.release_actor_anim_phase_lock(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::RELEASE_ACTOR_ANIM_PHASE_LOCK (0xAEBAE989) function."
    },
    "anim.is_actor_anim_phase_locked": {
        "prefix": [
            "anim.is_actor_anim_phase_locked",
            "is_actor_anim_phase_locked"
        ],
        "body": [
            "local result --[[ integer ]] = anim.is_actor_anim_phase_locked(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::IS_ACTOR_ANIM_PHASE_LOCKED (0xE0AC4B86) function."
    },
    "anim.set_actor_cutscene_mode": {
        "prefix": [
            "anim.set_actor_cutscene_mode",
            "set_actor_cutscene_mode"
        ],
        "body": [
            "anim.set_actor_cutscene_mode(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::SET_ACTOR_CUTSCENE_MODE (0x76ECD5F1) function."
    },
    "anim.request_anim_set": {
        "prefix": [
            "anim.request_anim_set",
            "request_anim_set"
        ],
        "body": [
            "anim.request_anim_set(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::REQUEST_ANIM_SET (0x2988B3FC) function."
    },
    "anim.has_anim_set_loaded": {
        "prefix": [
            "anim.has_anim_set_loaded",
            "has_anim_set_loaded"
        ],
        "body": [
            "local result --[[ integer ]] = anim.has_anim_set_loaded(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::HAS_ANIM_SET_LOADED (0x4FFF397D) function."
    },
    "anim.remove_anim_set": {
        "prefix": [
            "anim.remove_anim_set",
            "remove_anim_set"
        ],
        "body": [
            "anim.remove_anim_set(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::REMOVE_ANIM_SET (0xD04A817A) function."
    },
    "anim.set_anim_set_for_actor": {
        "prefix": [
            "anim.set_anim_set_for_actor",
            "set_anim_set_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = anim.set_anim_set_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ANIM::SET_ANIM_SET_FOR_ACTOR (0x39C1E1C0) function."
    },
    "anim.reset_anim_set_for_actor": {
        "prefix": [
            "anim.reset_anim_set_for_actor",
            "reset_anim_set_for_actor"
        ],
        "body": [
            "anim.reset_anim_set_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::RESET_ANIM_SET_FOR_ACTOR (0x7A6C5C2F) function."
    },
    "anim.dlc_replace_existing_anim_set": {
        "prefix": [
            "anim.dlc_replace_existing_anim_set",
            "dlc_replace_existing_anim_set"
        ],
        "body": [
            "anim.dlc_replace_existing_anim_set(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::DLC_REPLACE_EXISTING_ANIM_SET (0xB1B643E0) function."
    },
    "anim.request_action_tree": {
        "prefix": [
            "anim.request_action_tree",
            "request_action_tree"
        ],
        "body": [
            "local result --[[ integer ]] = anim.request_action_tree(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::REQUEST_ACTION_TREE (0xB3039DB7) function."
    },
    "anim.has_action_tree_loaded": {
        "prefix": [
            "anim.has_action_tree_loaded",
            "has_action_tree_loaded"
        ],
        "body": [
            "local result --[[ integer ]] = anim.has_action_tree_loaded(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::HAS_ACTION_TREE_LOADED (0xEEECD85E) function."
    },
    "anim.remove_action_tree": {
        "prefix": [
            "anim.remove_action_tree",
            "remove_action_tree"
        ],
        "body": [
            "anim.remove_action_tree(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::REMOVE_ACTION_TREE (0xBF4D0EFE) function."
    },
    "anim.set_action_node_for_actor": {
        "prefix": [
            "anim.set_action_node_for_actor",
            "set_action_node_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = anim.set_action_node_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::SET_ACTION_NODE_FOR_ACTOR (0x5A795F3A) function."
    },
    "anim.set_react_node_for_actor": {
        "prefix": [
            "anim.set_react_node_for_actor",
            "set_react_node_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = anim.set_react_node_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::SET_REACT_NODE_FOR_ACTOR (0xF90F737E) function."
    },
    "anim.reset_react_node_for_actor": {
        "prefix": [
            "anim.reset_react_node_for_actor",
            "reset_react_node_for_actor"
        ],
        "body": [
            "anim.reset_react_node_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::RESET_REACT_NODE_FOR_ACTOR (0x7B17C5C3) function."
    },
    "anim.reset_actiontree_for_actor": {
        "prefix": [
            "anim.reset_actiontree_for_actor",
            "reset_actiontree_for_actor"
        ],
        "body": [
            "anim.reset_actiontree_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::RESET_ACTIONTREE_FOR_ACTOR (0x07EC142B) function."
    },
    "anim.set_linked_anim_target": {
        "prefix": [
            "anim.set_linked_anim_target",
            "set_linked_anim_target"
        ],
        "body": [
            "local result --[[ integer ]] = anim.set_linked_anim_target(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::SET_LINKED_ANIM_TARGET (0x0A192D09) function."
    },
    "anim.get_linked_anim_target": {
        "prefix": [
            "anim.get_linked_anim_target",
            "get_linked_anim_target"
        ],
        "body": [
            "local result --[[ integer ]] = anim.get_linked_anim_target(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::GET_LINKED_ANIM_TARGET (0xA4E9E7EE) function."
    },
    "anim.clear_linked_anim_target": {
        "prefix": [
            "anim.clear_linked_anim_target",
            "clear_linked_anim_target"
        ],
        "body": [
            "local result --[[ integer ]] = anim.clear_linked_anim_target(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::CLEAR_LINKED_ANIM_TARGET (0xAC54E120) function."
    },
    "anim.is_actor_performing_linked_animation": {
        "prefix": [
            "anim.is_actor_performing_linked_animation",
            "is_actor_performing_linked_animation"
        ],
        "body": [
            "local result --[[ integer ]] = anim.is_actor_performing_linked_animation(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::IS_ACTOR_PERFORMING_LINKED_ANIMATION (0xCA9364C5) function."
    },
    "anim.is_action_node_playing": {
        "prefix": [
            "anim.is_action_node_playing",
            "is_action_node_playing"
        ],
        "body": [
            "local result --[[ integer ]] = anim.is_action_node_playing(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::IS_ACTION_NODE_PLAYING (0x7B19DEC6) function."
    },
    "anim.is_action_node_playing_partial": {
        "prefix": [
            "anim.is_action_node_playing_partial",
            "is_action_node_playing_partial"
        ],
        "body": [
            "local result --[[ integer ]] = anim.is_action_node_playing_partial(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::IS_ACTION_NODE_PLAYING_PARTIAL (0x994F2BD1) function."
    },
    "anim.is_actor_playing_node_in_tree": {
        "prefix": [
            "anim.is_actor_playing_node_in_tree",
            "is_actor_playing_node_in_tree"
        ],
        "body": [
            "local result --[[ integer ]] = anim.is_actor_playing_node_in_tree(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::IS_ACTOR_PLAYING_NODE_IN_TREE (0x4E0300E2) function."
    },
    "anim.get_curr_action_node_play_time": {
        "prefix": [
            "anim.get_curr_action_node_play_time",
            "get_curr_action_node_play_time"
        ],
        "body": [
            "local result --[[ integer ]] = anim.get_curr_action_node_play_time(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::GET_CURR_ACTION_NODE_PLAY_TIME (0x5E84F53E) function."
    },
    "anim.tough_armour_get_tuning_regeneration_rate": {
        "prefix": [
            "anim.tough_armour_get_tuning_regeneration_rate",
            "tough_armour_get_tuning_regeneration_rate"
        ],
        "body": [
            "local result --[[ integer ]] = anim.tough_armour_get_tuning_regeneration_rate(unk0 --[[ integer ]])"
        ],
        "description": "ANIM::TOUGH_ARMOUR_GET_TUNING_REGENERATION_RATE (0x4AD89F02) function."
    },
    "anim.tough_armour_set_tuning_hit_deduction": {
        "prefix": [
            "anim.tough_armour_set_tuning_hit_deduction",
            "tough_armour_set_tuning_hit_deduction"
        ],
        "body": [
            "anim.tough_armour_set_tuning_hit_deduction(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ANIM::TOUGH_ARMOUR_SET_TUNING_HIT_DEDUCTION (0x11542587) function."
    },
    "anim.tough_armour_set_tuning_pad_armour": {
        "prefix": [
            "anim.tough_armour_set_tuning_pad_armour",
            "tough_armour_set_tuning_pad_armour"
        ],
        "body": [
            "anim.tough_armour_set_tuning_pad_armour(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::TOUGH_ARMOUR_SET_TUNING_PAD_ARMOUR (0xDCB9C943) function."
    },
    "anim.tough_armour_set_tuning_regeneration_rate": {
        "prefix": [
            "anim.tough_armour_set_tuning_regeneration_rate",
            "tough_armour_set_tuning_regeneration_rate"
        ],
        "body": [
            "anim.tough_armour_set_tuning_regeneration_rate(actor --[[ integer ]], rate --[[ number ]])"
        ],
        "description": "ANIM::TOUGH_ARMOUR_SET_TUNING_REGENERATION_RATE (0xB3F5EE8C) function."
    },
    "anim.set_actor_character_cloth_scaled_pinning": {
        "prefix": [
            "anim.set_actor_character_cloth_scaled_pinning",
            "set_actor_character_cloth_scaled_pinning"
        ],
        "body": [
            "anim.set_actor_character_cloth_scaled_pinning(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::SET_ACTOR_CHARACTER_CLOTH_SCALED_PINNING (0xBEF6031B) function."
    },
    "anim.set_actor_to_seat": {
        "prefix": [
            "anim.set_actor_to_seat",
            "set_actor_to_seat"
        ],
        "body": [
            "anim.set_actor_to_seat(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIM::SET_ACTOR_TO_SEAT (0xF349D0B6) function."
    },
    "animator.is_object_animator_valid": {
        "prefix": [
            "animator.is_object_animator_valid",
            "is_object_animator_valid"
        ],
        "body": [
            "local result --[[ integer ]] = animator.is_object_animator_valid(unk0 --[[ integer ]])"
        ],
        "description": "ANIMATOR::IS_OBJECT_ANIMATOR_VALID (0x19BD222F) function."
    },
    "animator.create_object_animator": {
        "prefix": [
            "animator.create_object_animator",
            "create_object_animator"
        ],
        "body": [
            "local result --[[ integer ]] = animator.create_object_animator(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "ANIMATOR::CREATE_OBJECT_ANIMATOR (0x856D5842) function."
    },
    "animator.create_object_animator_on_object": {
        "prefix": [
            "animator.create_object_animator_on_object",
            "create_object_animator_on_object"
        ],
        "body": [
            "local result --[[ integer ]] = animator.create_object_animator_on_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "ANIMATOR::CREATE_OBJECT_ANIMATOR_ON_OBJECT (0x0D0A66B6) function."
    },
    "animator.is_object_animator_ready": {
        "prefix": [
            "animator.is_object_animator_ready",
            "is_object_animator_ready"
        ],
        "body": [
            "local result --[[ integer ]] = animator.is_object_animator_ready(unk0 --[[ integer ]])"
        ],
        "description": "ANIMATOR::IS_OBJECT_ANIMATOR_READY (0x554CF528) function."
    },
    "animator.get_object_animator_on_object": {
        "prefix": [
            "animator.get_object_animator_on_object",
            "get_object_animator_on_object"
        ],
        "body": [
            "local result --[[ integer ]] = animator.get_object_animator_on_object(unk0 --[[ integer ]])"
        ],
        "description": "ANIMATOR::GET_OBJECT_ANIMATOR_ON_OBJECT (0x5908F7FE) function."
    },
    "animator.set_object_animator_node": {
        "prefix": [
            "animator.set_object_animator_node",
            "set_object_animator_node"
        ],
        "body": [
            "local result --[[ integer ]] = animator.set_object_animator_node(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIMATOR::SET_OBJECT_ANIMATOR_NODE (0xB9D7B63B) function."
    },
    "animator.set_object_animator_phase": {
        "prefix": [
            "animator.set_object_animator_phase",
            "set_object_animator_phase"
        ],
        "body": [
            "local result --[[ integer ]] = animator.set_object_animator_phase(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIMATOR::SET_OBJECT_ANIMATOR_PHASE (0xC0128653) function."
    },
    "animator.set_object_animator_rate": {
        "prefix": [
            "animator.set_object_animator_rate",
            "set_object_animator_rate"
        ],
        "body": [
            "local result --[[ integer ]] = animator.set_object_animator_rate(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ANIMATOR::SET_OBJECT_ANIMATOR_RATE (0x0B4D9AFA) function."
    },
    "animator.get_object_animator_phase": {
        "prefix": [
            "animator.get_object_animator_phase",
            "get_object_animator_phase"
        ],
        "body": [
            "local result --[[ integer ]] = animator.get_object_animator_phase(unk0 --[[ integer ]])"
        ],
        "description": "ANIMATOR::GET_OBJECT_ANIMATOR_PHASE (0xC5205015) function."
    },
    "animator.set_object_animator_bone_range": {
        "prefix": [
            "animator.set_object_animator_bone_range",
            "set_object_animator_bone_range"
        ],
        "body": [
            "local result --[[ integer ]] = animator.set_object_animator_bone_range(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "ANIMATOR::SET_OBJECT_ANIMATOR_BONE_RANGE (0x188B6431) function."
    },
    "animator.set_object_animator_animation": {
        "prefix": [
            "animator.set_object_animator_animation",
            "set_object_animator_animation"
        ],
        "body": [
            "local result --[[ integer ]] = animator.set_object_animator_animation(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ANIMATOR::SET_OBJECT_ANIMATOR_ANIMATION (0xB57D4110) function."
    },
    "animator.destroy_object_animator": {
        "prefix": [
            "animator.destroy_object_animator",
            "destroy_object_animator"
        ],
        "body": [
            "animator.destroy_object_animator(unk0 --[[ integer ]])"
        ],
        "description": "ANIMATOR::DESTROY_OBJECT_ANIMATOR (0x1E5A227A) function."
    },
    "animator.get_object_from_animator": {
        "prefix": [
            "animator.get_object_from_animator",
            "get_object_from_animator"
        ],
        "body": [
            "local result --[[ integer ]] = animator.get_object_from_animator(unk0 --[[ integer ]])"
        ],
        "description": "ANIMATOR::GET_OBJECT_FROM_ANIMATOR (0x4F10FD5B) function."
    },
    "animator.link_object_animator_to_actor": {
        "prefix": [
            "animator.link_object_animator_to_actor",
            "link_object_animator_to_actor"
        ],
        "body": [
            "local result --[[ integer ]] = animator.link_object_animator_to_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ANIMATOR::LINK_OBJECT_ANIMATOR_TO_ACTOR (0xBEDB066C) function."
    },
    "audio.new_scripted_conversation": {
        "prefix": [
            "audio.new_scripted_conversation",
            "new_scripted_conversation"
        ],
        "body": [
            "local result --[[ integer ]] = audio.new_scripted_conversation()"
        ],
        "description": "AUDIO::NEW_SCRIPTED_CONVERSATION (0x1CEA7FCE) function."
    },
    "audio.add_line_to_conversation": {
        "prefix": [
            "audio.add_line_to_conversation",
            "add_line_to_conversation"
        ],
        "body": [
            "audio.add_line_to_conversation(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "AUDIO::ADD_LINE_TO_CONVERSATION (0x96CD0513) function."
    },
    "audio.add_new_conversation_speaker": {
        "prefix": [
            "audio.add_new_conversation_speaker",
            "add_new_conversation_speaker"
        ],
        "body": [
            "audio.add_new_conversation_speaker(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AUDIO::ADD_NEW_CONVERSATION_SPEAKER (0xF1C40BCA) function."
    },
    "audio.add_new_frontend_conversation_speaker": {
        "prefix": [
            "audio.add_new_frontend_conversation_speaker",
            "add_new_frontend_conversation_speaker"
        ],
        "body": [
            "audio.add_new_frontend_conversation_speaker(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::ADD_NEW_FRONTEND_CONVERSATION_SPEAKER (0x4FAD0D8F) function."
    },
    "audio.start_script_conversation": {
        "prefix": [
            "audio.start_script_conversation",
            "start_script_conversation"
        ],
        "body": [
            "audio.start_script_conversation(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::START_SCRIPT_CONVERSATION (0xE5DE7D9D) function."
    },
    "audio.is_scripted_conversation_ongoing": {
        "prefix": [
            "audio.is_scripted_conversation_ongoing",
            "is_scripted_conversation_ongoing"
        ],
        "body": [
            "local result --[[ integer ]] = audio.is_scripted_conversation_ongoing()"
        ],
        "description": "AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING (0xCB8FD96F) function."
    },
    "audio.abort_scripted_conversation": {
        "prefix": [
            "audio.abort_scripted_conversation",
            "abort_scripted_conversation"
        ],
        "body": [
            "local result --[[ integer ]] = audio.abort_scripted_conversation(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::ABORT_SCRIPTED_CONVERSATION (0xC842F0C9) function."
    },
    "audio.unregister_script_with_audio": {
        "prefix": [
            "audio.unregister_script_with_audio",
            "unregister_script_with_audio"
        ],
        "body": [
            "audio.unregister_script_with_audio()"
        ],
        "description": "AUDIO::UNREGISTER_SCRIPT_WITH_AUDIO (0x66728EFE) function."
    },
    "audio.request_mission_audio_bank": {
        "prefix": [
            "audio.request_mission_audio_bank",
            "request_mission_audio_bank"
        ],
        "body": [
            "local result --[[ integer ]] = audio.request_mission_audio_bank(unk0 --[[ string ]])"
        ],
        "description": "AUDIO::REQUEST_MISSION_AUDIO_BANK (0x916E37CA) function."
    },
    "audio.mission_audio_bank_no_longer_needed": {
        "prefix": [
            "audio.mission_audio_bank_no_longer_needed",
            "mission_audio_bank_no_longer_needed"
        ],
        "body": [
            "audio.mission_audio_bank_no_longer_needed()"
        ],
        "description": "AUDIO::MISSION_AUDIO_BANK_NO_LONGER_NEEDED (0x4E92CC7A) function."
    },
    "audio.get_sound_id": {
        "prefix": [
            "audio.get_sound_id",
            "get_sound_id"
        ],
        "body": [
            "local result --[[ integer ]] = audio.get_sound_id()"
        ],
        "description": "AUDIO::GET_SOUND_ID (0x6AE0AD56) function."
    },
    "audio.release_sound_id": {
        "prefix": [
            "audio.release_sound_id",
            "release_sound_id"
        ],
        "body": [
            "audio.release_sound_id(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::RELEASE_SOUND_ID (0x9C080899) function."
    },
    "audio.is_sound_id_valid": {
        "prefix": [
            "audio.is_sound_id_valid",
            "is_sound_id_valid"
        ],
        "body": [
            "local result --[[ integer ]] = audio.is_sound_id_valid(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::IS_SOUND_ID_VALID (0xE1D265FA) function."
    },
    "audio.play_sound": {
        "prefix": [
            "audio.play_sound",
            "play_sound"
        ],
        "body": [
            "audio.play_sound(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::PLAY_SOUND (0xB6E1917F) function."
    },
    "audio.play_sound_frontend": {
        "prefix": [
            "audio.play_sound_frontend",
            "play_sound_frontend"
        ],
        "body": [
            "audio.play_sound_frontend(soundname --[[ string ]])"
        ],
        "description": "AUDIO::PLAY_SOUND_FRONTEND (0x2E458F74) function."
    },
    "audio.play_sound_frontend_initparams": {
        "prefix": [
            "audio.play_sound_frontend_initparams",
            "play_sound_frontend_initparams"
        ],
        "body": [
            "audio.play_sound_frontend_initparams(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::PLAY_SOUND_FRONTEND_INITPARAMS (0x49053A94) function."
    },
    "audio.play_sound_frontend_persistent": {
        "prefix": [
            "audio.play_sound_frontend_persistent",
            "play_sound_frontend_persistent"
        ],
        "body": [
            "audio.play_sound_frontend_persistent(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::PLAY_SOUND_FRONTEND_PERSISTENT (0xB157BBB4) function."
    },
    "audio.play_sound_from_position": {
        "prefix": [
            "audio.play_sound_from_position",
            "play_sound_from_position"
        ],
        "body": [
            "audio.play_sound_from_position(soundname --[[ string ]], position --[[ vector3 ]])"
        ],
        "description": "AUDIO::PLAY_SOUND_FROM_POSITION (0x05BC72D7) function."
    },
    "audio.play_sound_from_position_persistent": {
        "prefix": [
            "audio.play_sound_from_position_persistent",
            "play_sound_from_position_persistent"
        ],
        "body": [
            "audio.play_sound_from_position_persistent(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "AUDIO::PLAY_SOUND_FROM_POSITION_PERSISTENT (0x5B05E3E0) function."
    },
    "audio.play_walla_sound_from_position_persistent": {
        "prefix": [
            "audio.play_walla_sound_from_position_persistent",
            "play_walla_sound_from_position_persistent"
        ],
        "body": [
            "audio.play_walla_sound_from_position_persistent(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "AUDIO::PLAY_WALLA_SOUND_FROM_POSITION_PERSISTENT (0x3375FB38) function."
    },
    "audio.play_sound_from_actor": {
        "prefix": [
            "audio.play_sound_from_actor",
            "play_sound_from_actor"
        ],
        "body": [
            "local result --[[ integer ]] = audio.play_sound_from_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AUDIO::PLAY_SOUND_FROM_ACTOR (0x628832AD) function."
    },
    "audio.play_walla_sound_from_actor": {
        "prefix": [
            "audio.play_walla_sound_from_actor",
            "play_walla_sound_from_actor"
        ],
        "body": [
            "local result --[[ integer ]] = audio.play_walla_sound_from_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AUDIO::PLAY_WALLA_SOUND_FROM_ACTOR (0x4634B6BE) function."
    },
    "audio.play_sound_from_object": {
        "prefix": [
            "audio.play_sound_from_object",
            "play_sound_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = audio.play_sound_from_object(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::PLAY_SOUND_FROM_OBJECT (0x6A515A49) function."
    },
    "audio.audio_set_vehicle_damaged": {
        "prefix": [
            "audio.audio_set_vehicle_damaged",
            "audio_set_vehicle_damaged"
        ],
        "body": [
            "audio.audio_set_vehicle_damaged(vehicle --[[ integer ]], isdamaged --[[ boolean ]])"
        ],
        "description": "AUDIO::AUDIO_SET_VEHICLE_DAMAGED (0xBD0E8EBA) function."
    },
    "audio.stop_sound": {
        "prefix": [
            "audio.stop_sound",
            "stop_sound"
        ],
        "body": [
            "audio.stop_sound(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::STOP_SOUND (0xCD7F4030) function."
    },
    "audio.has_sound_finished": {
        "prefix": [
            "audio.has_sound_finished",
            "has_sound_finished"
        ],
        "body": [
            "local result --[[ integer ]] = audio.has_sound_finished(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::HAS_SOUND_FINISHED (0xE85AEC2E) function."
    },
    "audio.audio_attach_microphone_to_actor": {
        "prefix": [
            "audio.audio_attach_microphone_to_actor",
            "audio_attach_microphone_to_actor"
        ],
        "body": [
            "audio.audio_attach_microphone_to_actor(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_ATTACH_MICROPHONE_TO_ACTOR (0x74CA8E22) function."
    },
    "audio.audio_set_mission_name_for_journal": {
        "prefix": [
            "audio.audio_set_mission_name_for_journal",
            "audio_set_mission_name_for_journal"
        ],
        "body": [
            "audio.audio_set_mission_name_for_journal(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_SET_MISSION_NAME_FOR_JOURNAL (0x66FCA3F7) function."
    },
    "audio.audio_clear_mission_name_for_journal": {
        "prefix": [
            "audio.audio_clear_mission_name_for_journal",
            "audio_clear_mission_name_for_journal"
        ],
        "body": [
            "audio.audio_clear_mission_name_for_journal()"
        ],
        "description": "AUDIO::AUDIO_CLEAR_MISSION_NAME_FOR_JOURNAL (0x14ED45FB) function."
    },
    "audio.audio_reset_speech_history": {
        "prefix": [
            "audio.audio_reset_speech_history",
            "audio_reset_speech_history"
        ],
        "body": [
            "audio.audio_reset_speech_history()"
        ],
        "description": "AUDIO::AUDIO_RESET_SPEECH_HISTORY (0x7D95325E) function."
    },
    "audio.audio_reset_scripted_speech_history": {
        "prefix": [
            "audio.audio_reset_scripted_speech_history",
            "audio_reset_scripted_speech_history"
        ],
        "body": [
            "audio.audio_reset_scripted_speech_history()"
        ],
        "description": "AUDIO::AUDIO_RESET_SCRIPTED_SPEECH_HISTORY (0x1BB84187) function."
    },
    "audio.audio_clear_conversation_history": {
        "prefix": [
            "audio.audio_clear_conversation_history",
            "audio_clear_conversation_history"
        ],
        "body": [
            "audio.audio_clear_conversation_history()"
        ],
        "description": "AUDIO::AUDIO_CLEAR_CONVERSATION_HISTORY (0xDD0320CB) function."
    },
    "audio.say_single_line_context": {
        "prefix": [
            "audio.say_single_line_context",
            "say_single_line_context"
        ],
        "body": [
            "audio.say_single_line_context(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_CONTEXT (0x31BAF169) function."
    },
    "audio.say_single_line_string": {
        "prefix": [
            "audio.say_single_line_string",
            "say_single_line_string"
        ],
        "body": [
            "audio.say_single_line_string(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_STRING (0xBA734A15) function."
    },
    "audio.say_single_line_string_with_reply": {
        "prefix": [
            "audio.say_single_line_string_with_reply",
            "say_single_line_string_with_reply"
        ],
        "body": [
            "audio.say_single_line_string_with_reply(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_STRING_WITH_REPLY (0x031E983D) function."
    },
    "audio.say_single_line_context_over_pain": {
        "prefix": [
            "audio.say_single_line_context_over_pain",
            "say_single_line_context_over_pain"
        ],
        "body": [
            "audio.say_single_line_context_over_pain(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_CONTEXT_OVER_PAIN (0x0871084C) function."
    },
    "audio.say_single_line_string_over_pain": {
        "prefix": [
            "audio.say_single_line_string_over_pain",
            "say_single_line_string_over_pain"
        ],
        "body": [
            "audio.say_single_line_string_over_pain(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_STRING_OVER_PAIN (0x12D077CA) function."
    },
    "audio.say_single_line_string_with_reply_over_pain": {
        "prefix": [
            "audio.say_single_line_string_with_reply_over_pain",
            "say_single_line_string_with_reply_over_pain"
        ],
        "body": [
            "audio.say_single_line_string_with_reply_over_pain(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_STRING_WITH_REPLY_OVER_PAIN (0x91DE3A31) function."
    },
    "audio.say_single_line_string_with_backups": {
        "prefix": [
            "audio.say_single_line_string_with_backups",
            "say_single_line_string_with_backups"
        ],
        "body": [
            "audio.say_single_line_string_with_backups(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_STRING_WITH_BACKUPS (0x955E5EEB) function."
    },
    "audio.say_single_line_scripted": {
        "prefix": [
            "audio.say_single_line_scripted",
            "say_single_line_scripted"
        ],
        "body": [
            "audio.say_single_line_scripted(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_SCRIPTED (0x755382BC) function."
    },
    "audio.say_single_line_string_beat": {
        "prefix": [
            "audio.say_single_line_string_beat",
            "say_single_line_string_beat"
        ],
        "body": [
            "local result --[[ integer ]] = audio.say_single_line_string_beat(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_STRING_BEAT (0x84A909EC) function."
    },
    "audio.say_single_line_string_scripted_interrupt": {
        "prefix": [
            "audio.say_single_line_string_scripted_interrupt",
            "say_single_line_string_scripted_interrupt"
        ],
        "body": [
            "local result --[[ integer ]] = audio.say_single_line_string_scripted_interrupt(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]], unk12 --[[ integer ]])"
        ],
        "description": "AUDIO::SAY_SINGLE_LINE_STRING_SCRIPTED_INTERRUPT (0x3F226995) function."
    },
    "audio.audio_play_vocal_effect": {
        "prefix": [
            "audio.audio_play_vocal_effect",
            "audio_play_vocal_effect"
        ],
        "body": [
            "audio.audio_play_vocal_effect(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_PLAY_VOCAL_EFFECT (0xC9D3A484) function."
    },
    "audio.audio_play_pain": {
        "prefix": [
            "audio.audio_play_pain",
            "audio_play_pain"
        ],
        "body": [
            "audio.audio_play_pain(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_PLAY_PAIN (0x123709E8) function."
    },
    "audio.set_ambient_voice_name": {
        "prefix": [
            "audio.set_ambient_voice_name",
            "set_ambient_voice_name"
        ],
        "body": [
            "audio.set_ambient_voice_name(actor --[[ integer ]], name --[[ string ]])"
        ],
        "description": "AUDIO::SET_AMBIENT_VOICE_NAME (0xBD2EA1A1) function."
    },
    "audio.clear_alternate_speech_context_for_pain": {
        "prefix": [
            "audio.clear_alternate_speech_context_for_pain",
            "clear_alternate_speech_context_for_pain"
        ],
        "body": [
            "audio.clear_alternate_speech_context_for_pain(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::CLEAR_ALTERNATE_SPEECH_CONTEXT_FOR_PAIN (0x77402033) function."
    },
    "audio.cancel_currently_playing_ambient_speech": {
        "prefix": [
            "audio.cancel_currently_playing_ambient_speech",
            "cancel_currently_playing_ambient_speech"
        ],
        "body": [
            "audio.cancel_currently_playing_ambient_speech(actor --[[ integer ]])"
        ],
        "description": "AUDIO::CANCEL_CURRENTLY_PLAYING_AMBIENT_SPEECH (0x4DBD473B) function."
    },
    "audio.is_ambient_speech_playing": {
        "prefix": [
            "audio.is_ambient_speech_playing",
            "is_ambient_speech_playing"
        ],
        "body": [
            "local result --[[ boolean ]] = audio.is_ambient_speech_playing(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::IS_AMBIENT_SPEECH_PLAYING (0x1972E8AA) function."
    },
    "audio.is_scripted_speech_playing": {
        "prefix": [
            "audio.is_scripted_speech_playing",
            "is_scripted_speech_playing"
        ],
        "body": [
            "local result --[[ integer ]] = audio.is_scripted_speech_playing(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::IS_SCRIPTED_SPEECH_PLAYING (0x2C653904) function."
    },
    "audio.is_any_speech_playing": {
        "prefix": [
            "audio.is_any_speech_playing",
            "is_any_speech_playing"
        ],
        "body": [
            "local result --[[ boolean ]] = audio.is_any_speech_playing(actor --[[ integer ]])"
        ],
        "description": "AUDIO::IS_ANY_SPEECH_PLAYING (0x2B74A6D6) function."
    },
    "audio.audio_stop_pain": {
        "prefix": [
            "audio.audio_stop_pain",
            "audio_stop_pain"
        ],
        "body": [
            "audio.audio_stop_pain(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_STOP_PAIN (0x462B3A65) function."
    },
    "audio.audio_play_player_hogtie_line": {
        "prefix": [
            "audio.audio_play_player_hogtie_line",
            "audio_play_player_hogtie_line"
        ],
        "body": [
            "audio.audio_play_player_hogtie_line(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_PLAY_PLAYER_HOGTIE_LINE (0x96161235) function."
    },
    "audio.audio_trigger_player_looting_male_speech": {
        "prefix": [
            "audio.audio_trigger_player_looting_male_speech",
            "audio_trigger_player_looting_male_speech"
        ],
        "body": [
            "audio.audio_trigger_player_looting_male_speech()"
        ],
        "description": "AUDIO::AUDIO_TRIGGER_PLAYER_LOOTING_MALE_SPEECH (0x3184B507) function."
    },
    "audio.audio_trigger_player_looting_female_speech": {
        "prefix": [
            "audio.audio_trigger_player_looting_female_speech",
            "audio_trigger_player_looting_female_speech"
        ],
        "body": [
            "audio.audio_trigger_player_looting_female_speech()"
        ],
        "description": "AUDIO::AUDIO_TRIGGER_PLAYER_LOOTING_FEMALE_SPEECH (0x489B3078) function."
    },
    "audio.audio_shut_off_walla": {
        "prefix": [
            "audio.audio_shut_off_walla",
            "audio_shut_off_walla"
        ],
        "body": [
            "audio.audio_shut_off_walla()"
        ],
        "description": "AUDIO::AUDIO_SHUT_OFF_WALLA (0x43C5F320) function."
    },
    "audio.audio_turn_on_walla": {
        "prefix": [
            "audio.audio_turn_on_walla",
            "audio_turn_on_walla"
        ],
        "body": [
            "audio.audio_turn_on_walla()"
        ],
        "description": "AUDIO::AUDIO_TURN_ON_WALLA (0xF7B747CA) function."
    },
    "audio.set_local_player_voice": {
        "prefix": [
            "audio.set_local_player_voice",
            "set_local_player_voice"
        ],
        "body": [
            "audio.set_local_player_voice(name --[[ string ]])"
        ],
        "description": "AUDIO::SET_LOCAL_PLAYER_VOICE (0xF0D28043) function."
    },
    "audio.set_local_player_pain_voice": {
        "prefix": [
            "audio.set_local_player_pain_voice",
            "set_local_player_pain_voice"
        ],
        "body": [
            "audio.set_local_player_pain_voice(name --[[ string ]])"
        ],
        "description": "AUDIO::SET_LOCAL_PLAYER_PAIN_VOICE (0x33BD1A80) function."
    },
    "audio.audio_turn_off_pain_vocals": {
        "prefix": [
            "audio.audio_turn_off_pain_vocals",
            "audio_turn_off_pain_vocals"
        ],
        "body": [
            "audio.audio_turn_off_pain_vocals(actor --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_TURN_OFF_PAIN_VOCALS (0x1F7F405C) function."
    },
    "audio.audio_turn_on_pain_vocals": {
        "prefix": [
            "audio.audio_turn_on_pain_vocals",
            "audio_turn_on_pain_vocals"
        ],
        "body": [
            "audio.audio_turn_on_pain_vocals(actor --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_TURN_ON_PAIN_VOCALS (0x2B1B76E8) function."
    },
    "audio.audio_turn_off_vocals_effects": {
        "prefix": [
            "audio.audio_turn_off_vocals_effects",
            "audio_turn_off_vocals_effects"
        ],
        "body": [
            "audio.audio_turn_off_vocals_effects(actor --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_TURN_OFF_VOCALS_EFFECTS (0xE4D418D1) function."
    },
    "audio.audio_set_player_mood": {
        "prefix": [
            "audio.audio_set_player_mood",
            "audio_set_player_mood"
        ],
        "body": [
            "audio.audio_set_player_mood(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_SET_PLAYER_MOOD (0xAF6A3160) function."
    },
    "audio.audio_allow_preduel_speech": {
        "prefix": [
            "audio.audio_allow_preduel_speech",
            "audio_allow_preduel_speech"
        ],
        "body": [
            "audio.audio_allow_preduel_speech(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_ALLOW_PREDUEL_SPEECH (0x94A24A5C) function."
    },
    "audio.audio_disallow_preduel_speech": {
        "prefix": [
            "audio.audio_disallow_preduel_speech",
            "audio_disallow_preduel_speech"
        ],
        "body": [
            "audio.audio_disallow_preduel_speech(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_DISALLOW_PREDUEL_SPEECH (0xD021B37F) function."
    },
    "audio.audio_clear_player_disabled_context_list": {
        "prefix": [
            "audio.audio_clear_player_disabled_context_list",
            "audio_clear_player_disabled_context_list"
        ],
        "body": [
            "audio.audio_clear_player_disabled_context_list()"
        ],
        "description": "AUDIO::AUDIO_CLEAR_PLAYER_DISABLED_CONTEXT_LIST (0xA343FDBB) function."
    },
    "audio.audio_add_to_player_disabled_context_list": {
        "prefix": [
            "audio.audio_add_to_player_disabled_context_list",
            "audio_add_to_player_disabled_context_list"
        ],
        "body": [
            "audio.audio_add_to_player_disabled_context_list(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_ADD_TO_PLAYER_DISABLED_CONTEXT_LIST (0xA4F209D5) function."
    },
    "audio.add_companion_permanent": {
        "prefix": [
            "audio.add_companion_permanent",
            "add_companion_permanent"
        ],
        "body": [
            "audio.add_companion_permanent()"
        ],
        "description": "AUDIO::ADD_COMPANION_PERMANENT (0x45E20057) function."
    },
    "audio.audio_enable_player_taunts": {
        "prefix": [
            "audio.audio_enable_player_taunts",
            "audio_enable_player_taunts"
        ],
        "body": [
            "audio.audio_enable_player_taunts()"
        ],
        "description": "AUDIO::AUDIO_ENABLE_PLAYER_TAUNTS (0x15547025) function."
    },
    "audio.audio_init_caucasian_army_ae_range": {
        "prefix": [
            "audio.audio_init_caucasian_army_ae_range",
            "audio_init_caucasian_army_ae_range"
        ],
        "body": [
            "audio.audio_init_caucasian_army_ae_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_CAUCASIAN_ARMY_AE_RANGE (0xE0553D6B) function."
    },
    "audio.audio_init_mexican_army_ae_range": {
        "prefix": [
            "audio.audio_init_mexican_army_ae_range",
            "audio_init_mexican_army_ae_range"
        ],
        "body": [
            "audio.audio_init_mexican_army_ae_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_MEXICAN_ARMY_AE_RANGE (0xD68E04BB) function."
    },
    "audio.audio_init_mission_character_ae_range": {
        "prefix": [
            "audio.audio_init_mission_character_ae_range",
            "audio_init_mission_character_ae_range"
        ],
        "body": [
            "audio.audio_init_mission_character_ae_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_MISSION_CHARACTER_AE_RANGE (0x638EAF70) function."
    },
    "audio.audio_init_rcm_character_ae_range": {
        "prefix": [
            "audio.audio_init_rcm_character_ae_range",
            "audio_init_rcm_character_ae_range"
        ],
        "body": [
            "audio.audio_init_rcm_character_ae_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_RCM_CHARACTER_AE_RANGE (0xEA975A79) function."
    },
    "audio.audio_init_fac_invalid_value": {
        "prefix": [
            "audio.audio_init_fac_invalid_value",
            "audio_init_fac_invalid_value"
        ],
        "body": [
            "audio.audio_init_fac_invalid_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_INVALID_VALUE (0x6BB42C21) function."
    },
    "audio.audio_init_fac_cattle_rustler_value": {
        "prefix": [
            "audio.audio_init_fac_cattle_rustler_value",
            "audio_init_fac_cattle_rustler_value"
        ],
        "body": [
            "audio.audio_init_fac_cattle_rustler_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_CATTLE_RUSTLER_VALUE (0x0E634931) function."
    },
    "audio.audio_init_fac_drunkndirty_value": {
        "prefix": [
            "audio.audio_init_fac_drunkndirty_value",
            "audio_init_fac_drunkndirty_value"
        ],
        "body": [
            "audio.audio_init_fac_drunkndirty_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_DRUNKNDIRTY_VALUE (0x567712E5) function."
    },
    "audio.audio_init_fac_generic_criminal_value": {
        "prefix": [
            "audio.audio_init_fac_generic_criminal_value",
            "audio_init_fac_generic_criminal_value"
        ],
        "body": [
            "audio.audio_init_fac_generic_criminal_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_GENERIC_CRIMINAL_VALUE (0xB888B369) function."
    },
    "audio.audio_init_fac_indian_law_enforcement_value": {
        "prefix": [
            "audio.audio_init_fac_indian_law_enforcement_value",
            "audio_init_fac_indian_law_enforcement_value"
        ],
        "body": [
            "audio.audio_init_fac_indian_law_enforcement_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_INDIAN_LAW_ENFORCEMENT_VALUE (0x306D9FEE) function."
    },
    "audio.audio_init_fac_indian_raider_value": {
        "prefix": [
            "audio.audio_init_fac_indian_raider_value",
            "audio_init_fac_indian_raider_value"
        ],
        "body": [
            "audio.audio_init_fac_indian_raider_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_INDIAN_RAIDER_VALUE (0xC3614E0A) function."
    },
    "audio.audio_init_fac_law_enforcement_value": {
        "prefix": [
            "audio.audio_init_fac_law_enforcement_value",
            "audio_init_fac_law_enforcement_value"
        ],
        "body": [
            "audio.audio_init_fac_law_enforcement_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_LAW_ENFORCEMENT_VALUE (0xF962F2B8) function."
    },
    "audio.audio_init_fac_mexican_bandito_value": {
        "prefix": [
            "audio.audio_init_fac_mexican_bandito_value",
            "audio_init_fac_mexican_bandito_value"
        ],
        "body": [
            "audio.audio_init_fac_mexican_bandito_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_MEXICAN_BANDITO_VALUE (0x22D0DF9B) function."
    },
    "audio.audio_init_fac_mexican_law_enforcement_value": {
        "prefix": [
            "audio.audio_init_fac_mexican_law_enforcement_value",
            "audio_init_fac_mexican_law_enforcement_value"
        ],
        "body": [
            "audio.audio_init_fac_mexican_law_enforcement_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_MEXICAN_LAW_ENFORCEMENT_VALUE (0xA234C5D0) function."
    },
    "audio.audio_init_fac_mexican_rebel_value": {
        "prefix": [
            "audio.audio_init_fac_mexican_rebel_value",
            "audio_init_fac_mexican_rebel_value"
        ],
        "body": [
            "audio.audio_init_fac_mexican_rebel_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_MEXICAN_REBEL_VALUE (0x733BA9F5) function."
    },
    "audio.audio_init_fac_mexican_soldier_value": {
        "prefix": [
            "audio.audio_init_fac_mexican_soldier_value",
            "audio_init_fac_mexican_soldier_value"
        ],
        "body": [
            "audio.audio_init_fac_mexican_soldier_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_MEXICAN_SOLDIER_VALUE (0x79351E54) function."
    },
    "audio.audio_init_fac_smugglers_value": {
        "prefix": [
            "audio.audio_init_fac_smugglers_value",
            "audio_init_fac_smugglers_value"
        ],
        "body": [
            "audio.audio_init_fac_smugglers_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_SMUGGLERS_VALUE (0xCCBE7F0F) function."
    },
    "audio.audio_init_fac_fac_u_s_law_enforcement_value": {
        "prefix": [
            "audio.audio_init_fac_fac_u_s_law_enforcement_value",
            "audio_init_fac_fac_u_s_law_enforcement_value"
        ],
        "body": [
            "audio.audio_init_fac_fac_u_s_law_enforcement_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_FAC_U_S_LAW_ENFORCEMENT_VALUE (0x5FCF3B85) function."
    },
    "audio.audio_init_zombie_bruiser_ae_range": {
        "prefix": [
            "audio.audio_init_zombie_bruiser_ae_range",
            "audio_init_zombie_bruiser_ae_range"
        ],
        "body": [
            "audio.audio_init_zombie_bruiser_ae_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_ZOMBIE_BRUISER_AE_RANGE (0x9D886C2F) function."
    },
    "audio.audio_init_zombie_fast_ae_range": {
        "prefix": [
            "audio.audio_init_zombie_fast_ae_range",
            "audio_init_zombie_fast_ae_range"
        ],
        "body": [
            "audio.audio_init_zombie_fast_ae_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_ZOMBIE_FAST_AE_RANGE (0x39F5EF0F) function."
    },
    "audio.audio_init_zombie_toxic_ae_range": {
        "prefix": [
            "audio.audio_init_zombie_toxic_ae_range",
            "audio_init_zombie_toxic_ae_range"
        ],
        "body": [
            "audio.audio_init_zombie_toxic_ae_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_ZOMBIE_TOXIC_AE_RANGE (0xD6CC6907) function."
    },
    "audio.audio_init_zombie_mp_player_ae_range": {
        "prefix": [
            "audio.audio_init_zombie_mp_player_ae_range",
            "audio_init_zombie_mp_player_ae_range"
        ],
        "body": [
            "audio.audio_init_zombie_mp_player_ae_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_ZOMBIE_MP_PLAYER_AE_RANGE (0x714D5D09) function."
    },
    "audio.audio_init_zombie_mp_female_value": {
        "prefix": [
            "audio.audio_init_zombie_mp_female_value",
            "audio_init_zombie_mp_female_value"
        ],
        "body": [
            "audio.audio_init_zombie_mp_female_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_ZOMBIE_MP_FEMALE_VALUE (0xBF959948) function."
    },
    "audio.audio_init_fac_zombie_value": {
        "prefix": [
            "audio.audio_init_fac_zombie_value",
            "audio_init_fac_zombie_value"
        ],
        "body": [
            "audio.audio_init_fac_zombie_value(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_FAC_ZOMBIE_VALUE (0x3C163FDD) function."
    },
    "audio.audio_set_current_area_is_under_zombie_attack": {
        "prefix": [
            "audio.audio_set_current_area_is_under_zombie_attack",
            "audio_set_current_area_is_under_zombie_attack"
        ],
        "body": [
            "audio.audio_set_current_area_is_under_zombie_attack(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_SET_CURRENT_AREA_IS_UNDER_ZOMBIE_ATTACK (0xDC330FB9) function."
    },
    "audio.audio_init_zombie_zone": {
        "prefix": [
            "audio.audio_init_zombie_zone",
            "audio_init_zombie_zone"
        ],
        "body": [
            "audio.audio_init_zombie_zone()"
        ],
        "description": "AUDIO::AUDIO_INIT_ZOMBIE_ZONE (0x39EF8DA7) function."
    },
    "audio.audio_init_zombie_pack_info": {
        "prefix": [
            "audio.audio_init_zombie_pack_info",
            "audio_init_zombie_pack_info"
        ],
        "body": [
            "audio.audio_init_zombie_pack_info()"
        ],
        "description": "AUDIO::AUDIO_INIT_ZOMBIE_PACK_INFO (0x0079FD0F) function."
    },
    "audio.audio_init_nun_ae_range": {
        "prefix": [
            "audio.audio_init_nun_ae_range",
            "audio_init_nun_ae_range"
        ],
        "body": [
            "audio.audio_init_nun_ae_range(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_INIT_NUN_AE_RANGE (0x67770F4B) function."
    },
    "audio.audio_set_global_law_values": {
        "prefix": [
            "audio.audio_set_global_law_values",
            "audio_set_global_law_values"
        ],
        "body": [
            "audio.audio_set_global_law_values(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_SET_GLOBAL_LAW_VALUES (0x90DD37E7) function."
    },
    "audio.stop_ped_speaking": {
        "prefix": [
            "audio.stop_ped_speaking",
            "stop_ped_speaking"
        ],
        "body": [
            "audio.stop_ped_speaking(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::STOP_PED_SPEAKING (0xFF92B49D) function."
    },
    "audio.audio_mission_init": {
        "prefix": [
            "audio.audio_mission_init",
            "audio_mission_init"
        ],
        "body": [
            "audio.audio_mission_init()"
        ],
        "description": "AUDIO::AUDIO_MISSION_INIT (0xEB8A51C2) function."
    },
    "audio.audio_mission_release": {
        "prefix": [
            "audio.audio_mission_release",
            "audio_mission_release"
        ],
        "body": [
            "audio.audio_mission_release()"
        ],
        "description": "AUDIO::AUDIO_MISSION_RELEASE (0xD1FD31DE) function."
    },
    "audio.audio_play_distant_thunder": {
        "prefix": [
            "audio.audio_play_distant_thunder",
            "audio_play_distant_thunder"
        ],
        "body": [
            "audio.audio_play_distant_thunder()"
        ],
        "description": "AUDIO::AUDIO_PLAY_DISTANT_THUNDER (0xEB866555) function."
    },
    "audio.audio_music_force_track": {
        "prefix": [
            "audio.audio_music_force_track",
            "audio_music_force_track"
        ],
        "body": [
            "audio.audio_music_force_track(songname --[[ string ]], mood --[[ string ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ number ]], unk6 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_MUSIC_FORCE_TRACK (0xA2A356A7) function."
    },
    "audio.audio_music_force_track_hash": {
        "prefix": [
            "audio.audio_music_force_track_hash",
            "audio_music_force_track_hash"
        ],
        "body": [
            "audio.audio_music_force_track_hash(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_MUSIC_FORCE_TRACK_HASH (0x6CEFA97A) function."
    },
    "audio.audio_music_set_mood": {
        "prefix": [
            "audio.audio_music_set_mood",
            "audio_music_set_mood"
        ],
        "body": [
            "audio.audio_music_set_mood(mood --[[ string ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_MUSIC_SET_MOOD (0x633B8905) function."
    },
    "audio.audio_music_one_shot": {
        "prefix": [
            "audio.audio_music_one_shot",
            "audio_music_one_shot"
        ],
        "body": [
            "audio.audio_music_one_shot(audioname --[[ string ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_MUSIC_ONE_SHOT (0x714DA5BB) function."
    },
    "audio.audio_music_play_prepared": {
        "prefix": [
            "audio.audio_music_play_prepared",
            "audio_music_play_prepared"
        ],
        "body": [
            "local result --[[ boolean ]] = audio.audio_music_play_prepared()"
        ],
        "description": "AUDIO::AUDIO_MUSIC_PLAY_PREPARED (0x7CC2738F) function."
    },
    "audio.audio_music_get_random_track_from_playlist": {
        "prefix": [
            "audio.audio_music_get_random_track_from_playlist",
            "audio_music_get_random_track_from_playlist"
        ],
        "body": [
            "local result --[[ integer ]] = audio.audio_music_get_random_track_from_playlist(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_MUSIC_GET_RANDOM_TRACK_FROM_PLAYLIST (0x704DBAC9) function."
    },
    "audio.audio_music_is_prepared": {
        "prefix": [
            "audio.audio_music_is_prepared",
            "audio_music_is_prepared"
        ],
        "body": [
            "local result --[[ boolean ]] = audio.audio_music_is_prepared()"
        ],
        "description": "AUDIO::AUDIO_MUSIC_IS_PREPARED (0xBF316157) function."
    },
    "audio.audio_music_set_state": {
        "prefix": [
            "audio.audio_music_set_state",
            "audio_music_set_state"
        ],
        "body": [
            "audio.audio_music_set_state(state --[[ string ]])"
        ],
        "description": "AUDIO::AUDIO_MUSIC_SET_STATE (0x789C753C) function."
    },
    "audio.audio_music_release_control": {
        "prefix": [
            "audio.audio_music_release_control",
            "audio_music_release_control"
        ],
        "body": [
            "audio.audio_music_release_control(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_MUSIC_RELEASE_CONTROL (0xA3A2984E) function."
    },
    "audio.audio_music_suspend": {
        "prefix": [
            "audio.audio_music_suspend",
            "audio_music_suspend"
        ],
        "body": [
            "audio.audio_music_suspend(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_MUSIC_SUSPEND (0x56E3D235) function."
    },
    "audio.audio_is_scripted_music_playing": {
        "prefix": [
            "audio.audio_is_scripted_music_playing",
            "audio_is_scripted_music_playing"
        ],
        "body": [
            "local result --[[ boolean ]] = audio.audio_is_scripted_music_playing()"
        ],
        "description": "AUDIO::AUDIO_IS_SCRIPTED_MUSIC_PLAYING (0x86E995D1) function."
    },
    "audio.audio_play_all_lines_for_actor": {
        "prefix": [
            "audio.audio_play_all_lines_for_actor",
            "audio_play_all_lines_for_actor"
        ],
        "body": [
            "audio.audio_play_all_lines_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_PLAY_ALL_LINES_FOR_ACTOR (0x72168160) function."
    },
    "audio.audio_mg_start": {
        "prefix": [
            "audio.audio_mg_start",
            "audio_mg_start"
        ],
        "body": [
            "audio.audio_mg_start()"
        ],
        "description": "AUDIO::AUDIO_MG_START (0xB3C3FF5E) function."
    },
    "audio.audio_mg_stop": {
        "prefix": [
            "audio.audio_mg_stop",
            "audio_mg_stop"
        ],
        "body": [
            "audio.audio_mg_stop()"
        ],
        "description": "AUDIO::AUDIO_MG_STOP (0xEA2B35DB) function."
    },
    "audio.audio_mg_fillet_start": {
        "prefix": [
            "audio.audio_mg_fillet_start",
            "audio_mg_fillet_start"
        ],
        "body": [
            "audio.audio_mg_fillet_start(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_MG_FILLET_START (0x0CCE435E) function."
    },
    "audio.audio_mg_fillet_hit_finger": {
        "prefix": [
            "audio.audio_mg_fillet_hit_finger",
            "audio_mg_fillet_hit_finger"
        ],
        "body": [
            "audio.audio_mg_fillet_hit_finger()"
        ],
        "description": "AUDIO::AUDIO_MG_FILLET_HIT_FINGER (0x7784BB85) function."
    },
    "audio.audio_mg_fillet_hit_table": {
        "prefix": [
            "audio.audio_mg_fillet_hit_table",
            "audio_mg_fillet_hit_table"
        ],
        "body": [
            "audio.audio_mg_fillet_hit_table()"
        ],
        "description": "AUDIO::AUDIO_MG_FILLET_HIT_TABLE (0x24AE7AFB) function."
    },
    "audio.audio_mg_fillet_pull_from_table": {
        "prefix": [
            "audio.audio_mg_fillet_pull_from_table",
            "audio_mg_fillet_pull_from_table"
        ],
        "body": [
            "audio.audio_mg_fillet_pull_from_table()"
        ],
        "description": "AUDIO::AUDIO_MG_FILLET_PULL_FROM_TABLE (0xDE7C65CE) function."
    },
    "audio.audio_mg_fillet_end": {
        "prefix": [
            "audio.audio_mg_fillet_end",
            "audio_mg_fillet_end"
        ],
        "body": [
            "audio.audio_mg_fillet_end()"
        ],
        "description": "AUDIO::AUDIO_MG_FILLET_END (0x338DF299) function."
    },
    "audio.audio_add_alternate_context": {
        "prefix": [
            "audio.audio_add_alternate_context",
            "audio_add_alternate_context"
        ],
        "body": [
            "audio.audio_add_alternate_context(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AUDIO::AUDIO_ADD_ALTERNATE_CONTEXT (0x2D40E85C) function."
    },
    "audio.load_audio_metadata": {
        "prefix": [
            "audio.load_audio_metadata",
            "load_audio_metadata"
        ],
        "body": [
            "local result --[[ integer ]] = audio.load_audio_metadata(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "AUDIO::LOAD_AUDIO_METADATA (0xE8FFE727) function."
    },
    "audio.load_audio_speech_data": {
        "prefix": [
            "audio.load_audio_speech_data",
            "load_audio_speech_data"
        ],
        "body": [
            "local result --[[ integer ]] = audio.load_audio_speech_data(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::LOAD_AUDIO_SPEECH_DATA (0xBFCF32D9) function."
    },
    "audio.get_audio_bank_loading_status": {
        "prefix": [
            "audio.get_audio_bank_loading_status",
            "get_audio_bank_loading_status"
        ],
        "body": [
            "local result --[[ boolean ]] = audio.get_audio_bank_loading_status(refname --[[ string ]], bankpath --[[ string ]])"
        ],
        "description": "AUDIO::GET_AUDIO_BANK_LOADING_STATUS (0x98CD7340) function."
    },
    "audio.load_audio_bank": {
        "prefix": [
            "audio.load_audio_bank",
            "load_audio_bank"
        ],
        "body": [
            "audio.load_audio_bank(refname --[[ string ]], bankpath --[[ string ]])"
        ],
        "description": "AUDIO::LOAD_AUDIO_BANK (0x08F4B5B8) function."
    },
    "audio.make_audio_slot_static": {
        "prefix": [
            "audio.make_audio_slot_static",
            "make_audio_slot_static"
        ],
        "body": [
            "audio.make_audio_slot_static(unk0 --[[ string ]])"
        ],
        "description": "AUDIO::MAKE_AUDIO_SLOT_STATIC (0x176E921C) function."
    },
    "audio._audio_set_ms_between_player_talks_to_self": {
        "prefix": [
            "audio._audio_set_ms_between_player_talks_to_self",
            "_audio_set_ms_between_player_talks_to_self"
        ],
        "body": [
            "audio._audio_set_ms_between_player_talks_to_self(unk0 --[[ integer ]])"
        ],
        "description": "AUDIO::_AUDIO_SET_MS_BETWEEN_PLAYER_TALKS_TO_SELF (0xBAEC56D1) function."
    },
    "builtin.wait": {
        "prefix": [
            "builtin.wait",
            "wait"
        ],
        "body": [
            "builtin.wait(ms --[[ integer ]])"
        ],
        "description": "BUILTIN::WAIT (0x7715C03B) function."
    },
    "builtin.waitunwarped": {
        "prefix": [
            "builtin.waitunwarped",
            "waitunwarped"
        ],
        "body": [
            "builtin.waitunwarped(ms --[[ integer ]])"
        ],
        "description": "BUILTIN::WAITUNWARPED (0x01185F9B) function."
    },
    "builtin.waitunpaused": {
        "prefix": [
            "builtin.waitunpaused",
            "waitunpaused"
        ],
        "body": [
            "builtin.waitunpaused(ms --[[ integer ]])"
        ],
        "description": "BUILTIN::WAITUNPAUSED (0x7C496803) function."
    },
    "builtin.start_new_script": {
        "prefix": [
            "builtin.start_new_script",
            "start_new_script"
        ],
        "body": [
            "local result --[[ boolean ]] = builtin.start_new_script(scriptpath --[[ string ]], stacksize --[[ integer ]])"
        ],
        "description": "BUILTIN::START_NEW_SCRIPT (0x3F166D0E) function."
    },
    "builtin.start_new_script_with_args": {
        "prefix": [
            "builtin.start_new_script_with_args",
            "start_new_script_with_args"
        ],
        "body": [
            "local result --[[ boolean ]] = builtin.start_new_script_with_args(scriptpath --[[ string ]], args --[[ integer ]], argcount --[[ integer ]], stacksize --[[ integer ]])"
        ],
        "description": "BUILTIN::START_NEW_SCRIPT_WITH_ARGS (0x4A2100E4) function."
    },
    "builtin.settimera": {
        "prefix": [
            "builtin.settimera",
            "settimera"
        ],
        "body": [
            "builtin.settimera(value --[[ integer ]])"
        ],
        "description": "BUILTIN::SETTIMERA (0x35785333) function."
    },
    "builtin.timestep": {
        "prefix": [
            "builtin.timestep",
            "timestep"
        ],
        "body": [
            "local result --[[ number ]] = builtin.timestep()"
        ],
        "description": "BUILTIN::TIMESTEP (0x50597EE2) function."
    },
    "builtin.printstring": {
        "prefix": [
            "builtin.printstring",
            "printstring"
        ],
        "body": [
            "builtin.printstring(str --[[ string ]])"
        ],
        "description": "BUILTIN::PRINTSTRING (0xECF8EB5F) function."
    },
    "builtin.printfloat": {
        "prefix": [
            "builtin.printfloat",
            "printfloat"
        ],
        "body": [
            "builtin.printfloat(value --[[ number ]])"
        ],
        "description": "BUILTIN::PRINTFLOAT (0xD48B90B6) function."
    },
    "builtin.printint": {
        "prefix": [
            "builtin.printint",
            "printint"
        ],
        "body": [
            "builtin.printint(value --[[ integer ]])"
        ],
        "description": "BUILTIN::PRINTINT (0x63651F03) function."
    },
    "builtin.printnl": {
        "prefix": [
            "builtin.printnl",
            "printnl"
        ],
        "body": [
            "builtin.printnl()"
        ],
        "description": "BUILTIN::PRINTNL (0x868997DA) function."
    },
    "builtin.printvector": {
        "prefix": [
            "builtin.printvector",
            "printvector"
        ],
        "body": [
            "builtin.printvector(x --[[ number ]], y --[[ number ]], z --[[ number ]])"
        ],
        "description": "BUILTIN::PRINTVECTOR (0x085F31FB) function."
    },
    "builtin.sqrt": {
        "prefix": [
            "builtin.sqrt",
            "sqrt"
        ],
        "body": [
            "local result --[[ number ]] = builtin.sqrt(value --[[ number ]])"
        ],
        "description": "BUILTIN::SQRT (0x145C7701) function."
    },
    "builtin.pow": {
        "prefix": [
            "builtin.pow",
            "pow"
        ],
        "body": [
            "local result --[[ number ]] = builtin.pow(base --[[ number ]], exponent --[[ number ]])"
        ],
        "description": "BUILTIN::POW (0x85D134F8) function."
    },
    "builtin.exp": {
        "prefix": [
            "builtin.exp",
            "exp"
        ],
        "body": [
            "local result --[[ number ]] = builtin.exp(base --[[ number ]], exponent --[[ number ]])"
        ],
        "description": "BUILTIN::EXP (0xE2313450) function."
    },
    "builtin.vmag": {
        "prefix": [
            "builtin.vmag",
            "vmag"
        ],
        "body": [
            "local result --[[ number ]] = builtin.vmag(x --[[ number ]], y --[[ number ]], z --[[ number ]])"
        ],
        "description": "BUILTIN::VMAG (0x1FCF1ECD) function."
    },
    "builtin.vdist": {
        "prefix": [
            "builtin.vdist",
            "vdist"
        ],
        "body": [
            "local result --[[ number ]] = builtin.vdist(x1 --[[ number ]], y1 --[[ number ]], z1 --[[ number ]], x2 --[[ number ]], y2 --[[ number ]], z2 --[[ number ]])"
        ],
        "description": "BUILTIN::VDIST (0x3C08ECB7) function."
    },
    "builtin.vdist2": {
        "prefix": [
            "builtin.vdist2",
            "vdist2"
        ],
        "body": [
            "local result --[[ number ]] = builtin.vdist2(x1 --[[ number ]], y1 --[[ number ]], z1 --[[ number ]], x2 --[[ number ]], y2 --[[ number ]], z2 --[[ number ]])"
        ],
        "description": "BUILTIN::VDIST2 (0xC85DEF1F) function."
    },
    "builtin.shift_left": {
        "prefix": [
            "builtin.shift_left",
            "shift_left"
        ],
        "body": [
            "local result --[[ integer ]] = builtin.shift_left(value --[[ integer ]], bitshift --[[ integer ]])"
        ],
        "description": "BUILTIN::SHIFT_LEFT (0x314CC6CD) function."
    },
    "builtin.shift_right": {
        "prefix": [
            "builtin.shift_right",
            "shift_right"
        ],
        "body": [
            "local result --[[ integer ]] = builtin.shift_right(value --[[ integer ]], bitshift --[[ integer ]])"
        ],
        "description": "BUILTIN::SHIFT_RIGHT (0x352633CA) function."
    },
    "builtin.floor": {
        "prefix": [
            "builtin.floor",
            "floor"
        ],
        "body": [
            "local result --[[ integer ]] = builtin.floor(value --[[ number ]])"
        ],
        "description": "BUILTIN::FLOOR (0x32E9BE04) function."
    },
    "builtin.ceil": {
        "prefix": [
            "builtin.ceil",
            "ceil"
        ],
        "body": [
            "local result --[[ integer ]] = builtin.ceil(value --[[ number ]])"
        ],
        "description": "BUILTIN::CEIL (0xD536A1DF) function."
    },
    "builtin.round": {
        "prefix": [
            "builtin.round",
            "round"
        ],
        "body": [
            "local result --[[ integer ]] = builtin.round(value --[[ number ]])"
        ],
        "description": "BUILTIN::ROUND (0x323B0E24) function."
    },
    "builtin.to_float": {
        "prefix": [
            "builtin.to_float",
            "to_float"
        ],
        "body": [
            "local result --[[ number ]] = builtin.to_float(value --[[ integer ]])"
        ],
        "description": "BUILTIN::TO_FLOAT (0x67116627) function."
    },
    "builtin.snapshot_globals": {
        "prefix": [
            "builtin.snapshot_globals",
            "snapshot_globals"
        ],
        "body": [
            "builtin.snapshot_globals()"
        ],
        "description": "BUILTIN::SNAPSHOT_GLOBALS (0x5A25520E) function."
    },
    "builtin.get_latest_console_command": {
        "prefix": [
            "builtin.get_latest_console_command",
            "get_latest_console_command"
        ],
        "body": [
            "local result --[[ integer ]] = builtin.get_latest_console_command()"
        ],
        "description": "BUILTIN::GET_LATEST_CONSOLE_COMMAND (0x2B547FE6) function."
    },
    "builtin.reset_latest_console_command": {
        "prefix": [
            "builtin.reset_latest_console_command",
            "reset_latest_console_command"
        ],
        "body": [
            "builtin.reset_latest_console_command()"
        ],
        "description": "BUILTIN::RESET_LATEST_CONSOLE_COMMAND (0xAA3EC981) function."
    },
    "builtin.get_console_command_token": {
        "prefix": [
            "builtin.get_console_command_token",
            "get_console_command_token"
        ],
        "body": [
            "local result --[[ integer ]] = builtin.get_console_command_token(unk0 --[[ integer ]])"
        ],
        "description": "BUILTIN::GET_CONSOLE_COMMAND_TOKEN (0x9DE3DE24) function."
    },
    "builtin.get_num_console_command_tokens": {
        "prefix": [
            "builtin.get_num_console_command_tokens",
            "get_num_console_command_tokens"
        ],
        "body": [
            "local result --[[ integer ]] = builtin.get_num_console_command_tokens()"
        ],
        "description": "BUILTIN::GET_NUM_CONSOLE_COMMAND_TOKENS (0x608F5BC6) function."
    },
    "cam.get_game_camera": {
        "prefix": [
            "cam.get_game_camera",
            "get_game_camera"
        ],
        "body": [
            "local result --[[ integer ]] = cam.get_game_camera()"
        ],
        "description": "CAM::GET_GAME_CAMERA (0x6B7677BF) function."
    },
    "cam.camera_reset": {
        "prefix": [
            "cam.camera_reset",
            "camera_reset"
        ],
        "body": [
            "cam.camera_reset(unk0 --[[ integer ]])"
        ],
        "description": "CAM::CAMERA_RESET (0xCE956B28) function."
    },
    "cam.camera_probe": {
        "prefix": [
            "cam.camera_probe",
            "camera_probe"
        ],
        "body": [
            "local result --[[ boolean ]] = cam.camera_probe(result --[[ vector3 ]], source --[[ vector3 ]], target --[[ vector3 ]], owner --[[ integer ]], flag --[[ integer ]])"
        ],
        "description": "CAM::CAMERA_PROBE (0x720F2CA7) function."
    },
    "cam.get_game_camera_reset_position": {
        "prefix": [
            "cam.get_game_camera_reset_position",
            "get_game_camera_reset_position"
        ],
        "body": [
            "local result --[[ integer ]] = cam.get_game_camera_reset_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "CAM::GET_GAME_CAMERA_RESET_POSITION (0x0B071844) function."
    },
    "cam.set_camera_follow_actor": {
        "prefix": [
            "cam.set_camera_follow_actor",
            "set_camera_follow_actor"
        ],
        "body": [
            "local result --[[ boolean ]] = cam.set_camera_follow_actor(actor --[[ integer ]])"
        ],
        "description": "CAM::SET_CAMERA_FOLLOW_ACTOR (0x8EFDFE89) function."
    },
    "cam.set_camera_follow_actor_ex": {
        "prefix": [
            "cam.set_camera_follow_actor_ex",
            "set_camera_follow_actor_ex"
        ],
        "body": [
            "local result --[[ boolean ]] = cam.set_camera_follow_actor_ex(actor --[[ integer ]], unk1 --[[ boolean ]])"
        ],
        "description": "CAM::SET_CAMERA_FOLLOW_ACTOR_EX (0x457A0510) function."
    },
    "cam.get_lookstick_invert_y": {
        "prefix": [
            "cam.get_lookstick_invert_y",
            "get_lookstick_invert_y"
        ],
        "body": [
            "local result --[[ integer ]] = cam.get_lookstick_invert_y()"
        ],
        "description": "CAM::GET_LOOKSTICK_INVERT_Y (0x9B083FD2) function."
    },
    "cam.set_lookstick_invert_y": {
        "prefix": [
            "cam.set_lookstick_invert_y",
            "set_lookstick_invert_y"
        ],
        "body": [
            "cam.set_lookstick_invert_y(unk0 --[[ integer ]])"
        ],
        "description": "CAM::SET_LOOKSTICK_INVERT_Y (0x063F900A) function."
    },
    "cam.set_game_camera_curve_override": {
        "prefix": [
            "cam.set_game_camera_curve_override",
            "set_game_camera_curve_override"
        ],
        "body": [
            "cam.set_game_camera_curve_override(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAM::SET_GAME_CAMERA_CURVE_OVERRIDE (0x507BBD3A) function."
    },
    "cam.reset_game_camera_curve_overrides": {
        "prefix": [
            "cam.reset_game_camera_curve_overrides",
            "reset_game_camera_curve_overrides"
        ],
        "body": [
            "cam.reset_game_camera_curve_overrides()"
        ],
        "description": "CAM::RESET_GAME_CAMERA_CURVE_OVERRIDES (0xC93116B1) function."
    },
    "cam.force_vehicle_cinematic_camera": {
        "prefix": [
            "cam.force_vehicle_cinematic_camera",
            "force_vehicle_cinematic_camera"
        ],
        "body": [
            "cam.force_vehicle_cinematic_camera(unk0 --[[ integer ]])"
        ],
        "description": "CAM::FORCE_VEHICLE_CINEMATIC_CAMERA (0x09737AF7) function."
    },
    "cam.set_game_camera_vehicle_mode": {
        "prefix": [
            "cam.set_game_camera_vehicle_mode",
            "set_game_camera_vehicle_mode"
        ],
        "body": [
            "cam.set_game_camera_vehicle_mode(unk0 --[[ integer ]])"
        ],
        "description": "CAM::SET_GAME_CAMERA_VEHICLE_MODE (0x382C47C5) function."
    },
    "cam.allow_game_camera_auto_centering": {
        "prefix": [
            "cam.allow_game_camera_auto_centering",
            "allow_game_camera_auto_centering"
        ],
        "body": [
            "cam.allow_game_camera_auto_centering(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAM::ALLOW_GAME_CAMERA_AUTO_CENTERING (0x6E303287) function."
    },
    "cam.get_game_camera_auto_centering_state": {
        "prefix": [
            "cam.get_game_camera_auto_centering_state",
            "get_game_camera_auto_centering_state"
        ],
        "body": [
            "local result --[[ integer ]] = cam.get_game_camera_auto_centering_state(unk0 --[[ integer ]])"
        ],
        "description": "CAM::GET_GAME_CAMERA_AUTO_CENTERING_STATE (0xE13B49BD) function."
    },
    "cam.allow_game_camera_auto_tilting": {
        "prefix": [
            "cam.allow_game_camera_auto_tilting",
            "allow_game_camera_auto_tilting"
        ],
        "body": [
            "cam.allow_game_camera_auto_tilting(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAM::ALLOW_GAME_CAMERA_AUTO_TILTING (0x9603D3B2) function."
    },
    "cam.get_game_camera_auto_tilting_state": {
        "prefix": [
            "cam.get_game_camera_auto_tilting_state",
            "get_game_camera_auto_tilting_state"
        ],
        "body": [
            "local result --[[ integer ]] = cam.get_game_camera_auto_tilting_state(unk0 --[[ integer ]])"
        ],
        "description": "CAM::GET_GAME_CAMERA_AUTO_TILTING_STATE (0x4062688A) function."
    },
    "cam.set_game_camera_focus": {
        "prefix": [
            "cam.set_game_camera_focus",
            "set_game_camera_focus"
        ],
        "body": [
            "cam.set_game_camera_focus(positionxy --[[ vector2 ]], positionz --[[ number ]], unk --[[ boolean ]])"
        ],
        "description": "CAM::SET_GAME_CAMERA_FOCUS (0x3AE77125) function."
    },
    "cam.enable_game_camera_focus": {
        "prefix": [
            "cam.enable_game_camera_focus",
            "enable_game_camera_focus"
        ],
        "body": [
            "cam.enable_game_camera_focus(positionxy --[[ vector2 ]], positionz --[[ number ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ boolean ]], unk5 --[[ boolean ]], unk6 --[[ boolean ]])"
        ],
        "description": "CAM::ENABLE_GAME_CAMERA_FOCUS (0x87E40FB8) function."
    },
    "cam.disable_game_camera_focus": {
        "prefix": [
            "cam.disable_game_camera_focus",
            "disable_game_camera_focus"
        ],
        "body": [
            "cam.disable_game_camera_focus()"
        ],
        "description": "CAM::DISABLE_GAME_CAMERA_FOCUS (0x4FA19C01) function."
    },
    "cam.is_game_camera_focus_enabled": {
        "prefix": [
            "cam.is_game_camera_focus_enabled",
            "is_game_camera_focus_enabled"
        ],
        "body": [
            "local result --[[ boolean ]] = cam.is_game_camera_focus_enabled()"
        ],
        "description": "CAM::IS_GAME_CAMERA_FOCUS_ENABLED (0x5BD2295E) function."
    },
    "cam.is_switch_camera_button_enabled": {
        "prefix": [
            "cam.is_switch_camera_button_enabled",
            "is_switch_camera_button_enabled"
        ],
        "body": [
            "local result --[[ boolean ]] = cam.is_switch_camera_button_enabled()"
        ],
        "description": "CAM::IS_SWITCH_CAMERA_BUTTON_ENABLED (0xAE168124) function."
    },
    "cam.set_switch_camera_button_enabled": {
        "prefix": [
            "cam.set_switch_camera_button_enabled",
            "set_switch_camera_button_enabled"
        ],
        "body": [
            "cam.set_switch_camera_button_enabled(unk0 --[[ integer ]])"
        ],
        "description": "CAM::SET_SWITCH_CAMERA_BUTTON_ENABLED (0x9F1F8669) function."
    },
    "camera.create_camera_in_layout": {
        "prefix": [
            "camera.create_camera_in_layout",
            "create_camera_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = camera.create_camera_in_layout(layout --[[ integer ]], unk1 --[[ string ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::CREATE_CAMERA_IN_LAYOUT (0x0B1569C5) function."
    },
    "camera.get_current_camera_type_from_channel": {
        "prefix": [
            "camera.get_current_camera_type_from_channel",
            "get_current_camera_type_from_channel"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_current_camera_type_from_channel(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CURRENT_CAMERA_TYPE_FROM_CHANNEL (0xBCC98808) function."
    },
    "camera.set_current_camera_on_channel": {
        "prefix": [
            "camera.set_current_camera_on_channel",
            "set_current_camera_on_channel"
        ],
        "body": [
            "camera.set_current_camera_on_channel(camera --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CURRENT_CAMERA_ON_CHANNEL (0x3EA55678) function."
    },
    "camera.remove_camera_from_channel": {
        "prefix": [
            "camera.remove_camera_from_channel",
            "remove_camera_from_channel"
        ],
        "body": [
            "camera.remove_camera_from_channel(camera --[[ integer ]], channel --[[ integer ]])"
        ],
        "description": "CAMERA::REMOVE_CAMERA_FROM_CHANNEL (0x423DB420) function."
    },
    "camera.get_camera_channel_position": {
        "prefix": [
            "camera.get_camera_channel_position",
            "get_camera_channel_position"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_camera_channel_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERA_CHANNEL_POSITION (0xE017E2F7) function."
    },
    "camera.get_camera_channel_direction": {
        "prefix": [
            "camera.get_camera_channel_direction",
            "get_camera_channel_direction"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_camera_channel_direction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERA_CHANNEL_DIRECTION (0x6ED00237) function."
    },
    "camera.is_current_camera_channel_transitioning": {
        "prefix": [
            "camera.is_current_camera_channel_transitioning",
            "is_current_camera_channel_transitioning"
        ],
        "body": [
            "local result --[[ boolean ]] = camera.is_current_camera_channel_transitioning(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::IS_CURRENT_CAMERA_CHANNEL_TRANSITIONING (0x9A4CD54B) function."
    },
    "camera.is_camera_active_on_channel": {
        "prefix": [
            "camera.is_camera_active_on_channel",
            "is_camera_active_on_channel"
        ],
        "body": [
            "local result --[[ boolean ]] = camera.is_camera_active_on_channel(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::IS_CAMERA_ACTIVE_ON_CHANNEL (0x02BD5362) function."
    },
    "camera.init_camera_from_game_camera": {
        "prefix": [
            "camera.init_camera_from_game_camera",
            "init_camera_from_game_camera"
        ],
        "body": [
            "camera.init_camera_from_game_camera(camera --[[ integer ]])"
        ],
        "description": "CAMERA::INIT_CAMERA_FROM_GAME_CAMERA (0x2615309A) function."
    },
    "camera.init_camera_from_channel": {
        "prefix": [
            "camera.init_camera_from_channel",
            "init_camera_from_channel"
        ],
        "body": [
            "camera.init_camera_from_channel(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::INIT_CAMERA_FROM_CHANNEL (0x41EA7325) function."
    },
    "camera.set_camera_position": {
        "prefix": [
            "camera.set_camera_position",
            "set_camera_position"
        ],
        "body": [
            "camera.set_camera_position(camera --[[ integer ]], positionxy --[[ vector2 ]], positionz --[[ number ]])"
        ],
        "description": "CAMERA::SET_CAMERA_POSITION (0x0B12CD8C) function."
    },
    "camera.get_camera_position": {
        "prefix": [
            "camera.get_camera_position",
            "get_camera_position"
        ],
        "body": [
            "local result --[[ vector3 ]] = camera.get_camera_position(camera --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERA_POSITION (0x4A65F0B7) function."
    },
    "camera.set_camera_direction": {
        "prefix": [
            "camera.set_camera_direction",
            "set_camera_direction"
        ],
        "body": [
            "camera.set_camera_direction(camera --[[ integer ]], directionxy --[[ vector2 ]], directionz --[[ number ]], unk1 --[[ boolean ]])"
        ],
        "description": "CAMERA::SET_CAMERA_DIRECTION (0xA8642E5E) function."
    },
    "camera.get_camera_direction": {
        "prefix": [
            "camera.get_camera_direction",
            "get_camera_direction"
        ],
        "body": [
            "local result --[[ vector3 ]] = camera.get_camera_direction(camera --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERA_DIRECTION (0xBBD1078A) function."
    },
    "camera.get_camera_up_vector": {
        "prefix": [
            "camera.get_camera_up_vector",
            "get_camera_up_vector"
        ],
        "body": [
            "local result --[[ vector3 ]] = camera.get_camera_up_vector(camera --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERA_UP_VECTOR (0x94A10ECD) function."
    },
    "camera.set_camera_fov": {
        "prefix": [
            "camera.set_camera_fov",
            "set_camera_fov"
        ],
        "body": [
            "camera.set_camera_fov(camera --[[ integer ]], fov --[[ number ]])"
        ],
        "description": "CAMERA::SET_CAMERA_FOV (0x57E3242D) function."
    },
    "camera.get_camera_fov": {
        "prefix": [
            "camera.get_camera_fov",
            "get_camera_fov"
        ],
        "body": [
            "local result --[[ number ]] = camera.get_camera_fov(camera --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERA_FOV (0x7B302F36) function."
    },
    "camera.set_camera_aspect_ratio": {
        "prefix": [
            "camera.set_camera_aspect_ratio",
            "set_camera_aspect_ratio"
        ],
        "body": [
            "camera.set_camera_aspect_ratio(camera --[[ integer ]], value --[[ number ]])"
        ],
        "description": "CAMERA::SET_CAMERA_ASPECT_RATIO (0xFAEE2667) function."
    },
    "camera.get_camera_aspect_ratio": {
        "prefix": [
            "camera.get_camera_aspect_ratio",
            "get_camera_aspect_ratio"
        ],
        "body": [
            "local result --[[ number ]] = camera.get_camera_aspect_ratio(camera --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERA_ASPECT_RATIO (0xCE01609D) function."
    },
    "camera.set_camera_near_clip_plane": {
        "prefix": [
            "camera.set_camera_near_clip_plane",
            "set_camera_near_clip_plane"
        ],
        "body": [
            "camera.set_camera_near_clip_plane(camera --[[ integer ]], value --[[ number ]])"
        ],
        "description": "CAMERA::SET_CAMERA_NEAR_CLIP_PLANE (0x1D29E72A) function."
    },
    "camera.set_camera_far_clip_plane": {
        "prefix": [
            "camera.set_camera_far_clip_plane",
            "set_camera_far_clip_plane"
        ],
        "body": [
            "camera.set_camera_far_clip_plane(camera --[[ integer ]], value --[[ number ]])"
        ],
        "description": "CAMERA::SET_CAMERA_FAR_CLIP_PLANE (0xD85EF521) function."
    },
    "camera.set_camera_orientation": {
        "prefix": [
            "camera.set_camera_orientation",
            "set_camera_orientation"
        ],
        "body": [
            "camera.set_camera_orientation(camera --[[ integer ]], rotationxy --[[ vector2 ]], rotationz --[[ number ]], unk1 --[[ boolean ]])"
        ],
        "description": "CAMERA::SET_CAMERA_ORIENTATION (0x486F4461) function."
    },
    "camera.set_camera_target_position": {
        "prefix": [
            "camera.set_camera_target_position",
            "set_camera_target_position"
        ],
        "body": [
            "camera.set_camera_target_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_TARGET_POSITION (0x298BCCA5) function."
    },
    "camera.set_camera_target_object": {
        "prefix": [
            "camera.set_camera_target_object",
            "set_camera_target_object"
        ],
        "body": [
            "camera.set_camera_target_object(camera --[[ integer ]], object --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_TARGET_OBJECT (0xDBD1AE22) function."
    },
    "camera.set_camera_collision_parameters": {
        "prefix": [
            "camera.set_camera_collision_parameters",
            "set_camera_collision_parameters"
        ],
        "body": [
            "camera.set_camera_collision_parameters(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_COLLISION_PARAMETERS (0xB8FAD252) function."
    },
    "camera.add_camera_collision_exclusion": {
        "prefix": [
            "camera.add_camera_collision_exclusion",
            "add_camera_collision_exclusion"
        ],
        "body": [
            "camera.add_camera_collision_exclusion(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERA_COLLISION_EXCLUSION (0x5BBFA4D7) function."
    },
    "camera.remove_camera_collision_exclusion": {
        "prefix": [
            "camera.remove_camera_collision_exclusion",
            "remove_camera_collision_exclusion"
        ],
        "body": [
            "camera.remove_camera_collision_exclusion(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::REMOVE_CAMERA_COLLISION_EXCLUSION (0x781D5599) function."
    },
    "camera.reset_camera_target": {
        "prefix": [
            "camera.reset_camera_target",
            "reset_camera_target"
        ],
        "body": [
            "camera.reset_camera_target(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::RESET_CAMERA_TARGET (0x313A4E61) function."
    },
    "camera.set_camera_collision_enabled": {
        "prefix": [
            "camera.set_camera_collision_enabled",
            "set_camera_collision_enabled"
        ],
        "body": [
            "camera.set_camera_collision_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_COLLISION_ENABLED (0x7DA71AA7) function."
    },
    "camera.set_camera_targetdof_using_soft_dof": {
        "prefix": [
            "camera.set_camera_targetdof_using_soft_dof",
            "set_camera_targetdof_using_soft_dof"
        ],
        "body": [
            "camera.set_camera_targetdof_using_soft_dof(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_TARGETDOF_USING_SOFT_DOF (0x7F1C5102) function."
    },
    "camera.reset_camera_targetdof": {
        "prefix": [
            "camera.reset_camera_targetdof",
            "reset_camera_targetdof"
        ],
        "body": [
            "camera.reset_camera_targetdof(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::RESET_CAMERA_TARGETDOF (0x4643D2C7) function."
    },
    "camera.set_camera_lighting_scheme": {
        "prefix": [
            "camera.set_camera_lighting_scheme",
            "set_camera_lighting_scheme"
        ],
        "body": [
            "local result --[[ integer ]] = camera.set_camera_lighting_scheme(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_LIGHTING_SCHEME (0x7C864F17) function."
    },
    "camera.camera_get_current_transition_type": {
        "prefix": [
            "camera.camera_get_current_transition_type",
            "camera_get_current_transition_type"
        ],
        "body": [
            "local result --[[ integer ]] = camera.camera_get_current_transition_type(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::CAMERA_GET_CURRENT_TRANSITION_TYPE (0xE55B5ADB) function."
    },
    "camera.camera_is_visible_object": {
        "prefix": [
            "camera.camera_is_visible_object",
            "camera_is_visible_object"
        ],
        "body": [
            "local result --[[ integer ]] = camera.camera_is_visible_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "CAMERA::CAMERA_IS_VISIBLE_OBJECT (0x965A4652) function."
    },
    "camera.camera_is_visible_actor": {
        "prefix": [
            "camera.camera_is_visible_actor",
            "camera_is_visible_actor"
        ],
        "body": [
            "local result --[[ integer ]] = camera.camera_is_visible_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "CAMERA::CAMERA_IS_VISIBLE_ACTOR (0xBB6FDF5F) function."
    },
    "camera.camera_is_visible_point": {
        "prefix": [
            "camera.camera_is_visible_point",
            "camera_is_visible_point"
        ],
        "body": [
            "local result --[[ integer ]] = camera.camera_is_visible_point(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "CAMERA::CAMERA_IS_VISIBLE_POINT (0xA97770FE) function."
    },
    "camera.camera_is_visible_volume": {
        "prefix": [
            "camera.camera_is_visible_volume",
            "camera_is_visible_volume"
        ],
        "body": [
            "local result --[[ integer ]] = camera.camera_is_visible_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "CAMERA::CAMERA_IS_VISIBLE_VOLUME (0xA161768C) function."
    },
    "camera.create_camerashot_in_layout": {
        "prefix": [
            "camera.create_camerashot_in_layout",
            "create_camerashot_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = camera.create_camerashot_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::CREATE_CAMERASHOT_IN_LAYOUT (0x54A417F3) function."
    },
    "camera.init_camerashot_from_game_camera": {
        "prefix": [
            "camera.init_camerashot_from_game_camera",
            "init_camerashot_from_game_camera"
        ],
        "body": [
            "camera.init_camerashot_from_game_camera(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::INIT_CAMERASHOT_FROM_GAME_CAMERA (0x99314873) function."
    },
    "camera.force_camerashot_update": {
        "prefix": [
            "camera.force_camerashot_update",
            "force_camerashot_update"
        ],
        "body": [
            "camera.force_camerashot_update(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::FORCE_CAMERASHOT_UPDATE (0xF5CA55D4) function."
    },
    "camera.set_camerashot_position": {
        "prefix": [
            "camera.set_camerashot_position",
            "set_camerashot_position"
        ],
        "body": [
            "camera.set_camerashot_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_POSITION (0x0EA022F5) function."
    },
    "camera.get_camerashot_position": {
        "prefix": [
            "camera.get_camerashot_position",
            "get_camerashot_position"
        ],
        "body": [
            "camera.get_camerashot_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERASHOT_POSITION (0x4D05D470) function."
    },
    "camera.set_camerashot_direction": {
        "prefix": [
            "camera.set_camerashot_direction",
            "set_camerashot_direction"
        ],
        "body": [
            "camera.set_camerashot_direction(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_DIRECTION (0x21B099AB) function."
    },
    "camera.get_camerashot_direction": {
        "prefix": [
            "camera.get_camerashot_direction",
            "get_camerashot_direction"
        ],
        "body": [
            "camera.get_camerashot_direction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERASHOT_DIRECTION (0x4670416D) function."
    },
    "camera.set_camerashot_fov": {
        "prefix": [
            "camera.set_camerashot_fov",
            "set_camerashot_fov"
        ],
        "body": [
            "camera.set_camerashot_fov(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_FOV (0x635E5494) function."
    },
    "camera.get_camerashot_fov": {
        "prefix": [
            "camera.get_camerashot_fov",
            "get_camerashot_fov"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_camerashot_fov(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERASHOT_FOV (0xEAD6167D) function."
    },
    "camera.set_camerashot_aspect_ratio": {
        "prefix": [
            "camera.set_camerashot_aspect_ratio",
            "set_camerashot_aspect_ratio"
        ],
        "body": [
            "camera.set_camerashot_aspect_ratio(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_ASPECT_RATIO (0x3DEB0933) function."
    },
    "camera.set_camerashot_near_clip_plane": {
        "prefix": [
            "camera.set_camerashot_near_clip_plane",
            "set_camerashot_near_clip_plane"
        ],
        "body": [
            "camera.set_camerashot_near_clip_plane(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_NEAR_CLIP_PLANE (0x4387CDAB) function."
    },
    "camera.set_camerashot_far_clip_plane": {
        "prefix": [
            "camera.set_camerashot_far_clip_plane",
            "set_camerashot_far_clip_plane"
        ],
        "body": [
            "camera.set_camerashot_far_clip_plane(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_FAR_CLIP_PLANE (0x6BA86494) function."
    },
    "camera.get_camerashot_far_clip_plane": {
        "prefix": [
            "camera.get_camerashot_far_clip_plane",
            "get_camerashot_far_clip_plane"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_camerashot_far_clip_plane(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERASHOT_FAR_CLIP_PLANE (0xD86CB952) function."
    },
    "camera.set_camerashot_orientation": {
        "prefix": [
            "camera.set_camerashot_orientation",
            "set_camerashot_orientation"
        ],
        "body": [
            "camera.set_camerashot_orientation(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_ORIENTATION (0x4FD679BD) function."
    },
    "camera.set_camerashot_target_position": {
        "prefix": [
            "camera.set_camerashot_target_position",
            "set_camerashot_target_position"
        ],
        "body": [
            "camera.set_camerashot_target_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGET_POSITION (0x0D6EC5D5) function."
    },
    "camera.set_camerashot_target_object": {
        "prefix": [
            "camera.set_camerashot_target_object",
            "set_camerashot_target_object"
        ],
        "body": [
            "camera.set_camerashot_target_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGET_OBJECT (0x3F719473) function."
    },
    "camera.set_camerashot_target_object_offsets": {
        "prefix": [
            "camera.set_camerashot_target_object_offsets",
            "set_camerashot_target_object_offsets"
        ],
        "body": [
            "camera.set_camerashot_target_object_offsets(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGET_OBJECT_OFFSETS (0x839E9502) function."
    },
    "camera.set_camerashot_target_object_roll": {
        "prefix": [
            "camera.set_camerashot_target_object_roll",
            "set_camerashot_target_object_roll"
        ],
        "body": [
            "camera.set_camerashot_target_object_roll(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGET_OBJECT_ROLL (0x8014323A) function."
    },
    "camera.set_camerashot_from_lens": {
        "prefix": [
            "camera.set_camerashot_from_lens",
            "set_camerashot_from_lens"
        ],
        "body": [
            "camera.set_camerashot_from_lens(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_FROM_LENS (0x6F483443) function."
    },
    "camera.set_camerashot_targetdof_object": {
        "prefix": [
            "camera.set_camerashot_targetdof_object",
            "set_camerashot_targetdof_object"
        ],
        "body": [
            "camera.set_camerashot_targetdof_object(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGETDOF_OBJECT (0xB6BDCF62) function."
    },
    "camera.set_camerashot_targetdof_target_offset": {
        "prefix": [
            "camera.set_camerashot_targetdof_target_offset",
            "set_camerashot_targetdof_target_offset"
        ],
        "body": [
            "camera.set_camerashot_targetdof_target_offset(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGETDOF_TARGET_OFFSET (0x087B8DCE) function."
    },
    "camera.set_camerashot_targetdof_fixed_distance": {
        "prefix": [
            "camera.set_camerashot_targetdof_fixed_distance",
            "set_camerashot_targetdof_fixed_distance"
        ],
        "body": [
            "camera.set_camerashot_targetdof_fixed_distance(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGETDOF_FIXED_DISTANCE (0xEF0AB304) function."
    },
    "camera.set_camerashot_targetdof_focal_length": {
        "prefix": [
            "camera.set_camerashot_targetdof_focal_length",
            "set_camerashot_targetdof_focal_length"
        ],
        "body": [
            "camera.set_camerashot_targetdof_focal_length(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGETDOF_FOCAL_LENGTH (0x0AD50615) function."
    },
    "camera.set_camerashot_targetdof_cutoff_distance": {
        "prefix": [
            "camera.set_camerashot_targetdof_cutoff_distance",
            "set_camerashot_targetdof_cutoff_distance"
        ],
        "body": [
            "camera.set_camerashot_targetdof_cutoff_distance(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGETDOF_CUTOFF_DISTANCE (0xEB9E1CB9) function."
    },
    "camera.set_camerashot_targetdof_smoothing": {
        "prefix": [
            "camera.set_camerashot_targetdof_smoothing",
            "set_camerashot_targetdof_smoothing"
        ],
        "body": [
            "camera.set_camerashot_targetdof_smoothing(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGETDOF_SMOOTHING (0x74168B5F) function."
    },
    "camera.set_camerashot_targetdof_using_soft_dof": {
        "prefix": [
            "camera.set_camerashot_targetdof_using_soft_dof",
            "set_camerashot_targetdof_using_soft_dof"
        ],
        "body": [
            "camera.set_camerashot_targetdof_using_soft_dof(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGETDOF_USING_SOFT_DOF (0x0370451C) function."
    },
    "camera.set_camerashot_targetdof_filtertype": {
        "prefix": [
            "camera.set_camerashot_targetdof_filtertype",
            "set_camerashot_targetdof_filtertype"
        ],
        "body": [
            "camera.set_camerashot_targetdof_filtertype(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGETDOF_FILTERTYPE (0x243CF01F) function."
    },
    "camera.set_camerashot_targetdof_fstop": {
        "prefix": [
            "camera.set_camerashot_targetdof_fstop",
            "set_camerashot_targetdof_fstop"
        ],
        "body": [
            "camera.set_camerashot_targetdof_fstop(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_TARGETDOF_FSTOP (0x9E618676) function."
    },
    "camera.reset_camerashot_targetdof": {
        "prefix": [
            "camera.reset_camerashot_targetdof",
            "reset_camerashot_targetdof"
        ],
        "body": [
            "camera.reset_camerashot_targetdof(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::RESET_CAMERASHOT_TARGETDOF (0x42327DAC) function."
    },
    "camera.set_camerashot_collision_parameters": {
        "prefix": [
            "camera.set_camerashot_collision_parameters",
            "set_camerashot_collision_parameters"
        ],
        "body": [
            "camera.set_camerashot_collision_parameters(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_COLLISION_PARAMETERS (0xF70817E0) function."
    },
    "camera.add_camerashot_collision_exclusion": {
        "prefix": [
            "camera.add_camerashot_collision_exclusion",
            "add_camerashot_collision_exclusion"
        ],
        "body": [
            "camera.add_camerashot_collision_exclusion(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERASHOT_COLLISION_EXCLUSION (0x58A0BFBF) function."
    },
    "camera.add_camerashot_collision_boundflag": {
        "prefix": [
            "camera.add_camerashot_collision_boundflag",
            "add_camerashot_collision_boundflag"
        ],
        "body": [
            "camera.add_camerashot_collision_boundflag(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERASHOT_COLLISION_BOUNDFLAG (0xCD28C63F) function."
    },
    "camera.reset_camerashot_target": {
        "prefix": [
            "camera.reset_camerashot_target",
            "reset_camerashot_target"
        ],
        "body": [
            "camera.reset_camerashot_target(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::RESET_CAMERASHOT_TARGET (0xC3DDCE4D) function."
    },
    "camera.set_camerashot_perspective": {
        "prefix": [
            "camera.set_camerashot_perspective",
            "set_camerashot_perspective"
        ],
        "body": [
            "camera.set_camerashot_perspective(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_PERSPECTIVE (0xD8D27321) function."
    },
    "camera.set_camerashot_control_sequence_vec3": {
        "prefix": [
            "camera.set_camerashot_control_sequence_vec3",
            "set_camerashot_control_sequence_vec3"
        ],
        "body": [
            "camera.set_camerashot_control_sequence_vec3(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_CONTROL_SEQUENCE_VEC3 (0x0229585E) function."
    },
    "camera.add_camera_shot_transition_indefinite": {
        "prefix": [
            "camera.add_camera_shot_transition_indefinite",
            "add_camera_shot_transition_indefinite"
        ],
        "body": [
            "local result --[[ integer ]] = camera.add_camera_shot_transition_indefinite(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERA_SHOT_TRANSITION_INDEFINITE (0xBF9B4FC6) function."
    },
    "camera.add_camera_shot_transition_ease_in_out": {
        "prefix": [
            "camera.add_camera_shot_transition_ease_in_out",
            "add_camera_shot_transition_ease_in_out"
        ],
        "body": [
            "local result --[[ integer ]] = camera.add_camera_shot_transition_ease_in_out(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERA_SHOT_TRANSITION_EASE_IN_OUT (0x6E10E587) function."
    },
    "camera.set_fixed_transition_t": {
        "prefix": [
            "camera.set_fixed_transition_t",
            "set_fixed_transition_t"
        ],
        "body": [
            "camera.set_fixed_transition_t(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_FIXED_TRANSITION_T (0x143A617C) function."
    },
    "camera.set_transition_collision_params": {
        "prefix": [
            "camera.set_transition_collision_params",
            "set_transition_collision_params"
        ],
        "body": [
            "camera.set_transition_collision_params(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_TRANSITION_COLLISION_PARAMS (0x22A746E1) function."
    },
    "camera.get_camera_shot_transition": {
        "prefix": [
            "camera.get_camera_shot_transition",
            "get_camera_shot_transition"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_camera_shot_transition(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERA_SHOT_TRANSITION (0x7AC13DF5) function."
    },
    "camera.is_processing_camera_shot_transition": {
        "prefix": [
            "camera.is_processing_camera_shot_transition",
            "is_processing_camera_shot_transition"
        ],
        "body": [
            "local result --[[ boolean ]] = camera.is_processing_camera_shot_transition(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::IS_PROCESSING_CAMERA_SHOT_TRANSITION (0xDDB64AA9) function."
    },
    "camera.end_current_camera_shot_transition": {
        "prefix": [
            "camera.end_current_camera_shot_transition",
            "end_current_camera_shot_transition"
        ],
        "body": [
            "camera.end_current_camera_shot_transition(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::END_CURRENT_CAMERA_SHOT_TRANSITION (0x01C1F583) function."
    },
    "camera.set_camerashot_collision_enabled": {
        "prefix": [
            "camera.set_camerashot_collision_enabled",
            "set_camerashot_collision_enabled"
        ],
        "body": [
            "camera.set_camerashot_collision_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERASHOT_COLLISION_ENABLED (0x3A07F60F) function."
    },
    "camera.set_cutscene_streaming_load_scene": {
        "prefix": [
            "camera.set_cutscene_streaming_load_scene",
            "set_cutscene_streaming_load_scene"
        ],
        "body": [
            "camera.set_cutscene_streaming_load_scene(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CUTSCENE_STREAMING_LOAD_SCENE (0x39D1CC17) function."
    },
    "camera.attach_camerashot": {
        "prefix": [
            "camera.attach_camerashot",
            "attach_camerashot"
        ],
        "body": [
            "local result --[[ integer ]] = camera.attach_camerashot(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]])"
        ],
        "description": "CAMERA::ATTACH_CAMERASHOT (0x41514AA0) function."
    },
    "camera.detach_camerashot": {
        "prefix": [
            "camera.detach_camerashot",
            "detach_camerashot"
        ],
        "body": [
            "camera.detach_camerashot(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::DETACH_CAMERASHOT (0x059BBAA8) function."
    },
    "camera.camerashot_is_visible_actor": {
        "prefix": [
            "camera.camerashot_is_visible_actor",
            "camerashot_is_visible_actor"
        ],
        "body": [
            "local result --[[ integer ]] = camera.camerashot_is_visible_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "CAMERA::CAMERASHOT_IS_VISIBLE_ACTOR (0xCBA91134) function."
    },
    "camera.camerashot_add_arc_behavior": {
        "prefix": [
            "camera.camerashot_add_arc_behavior",
            "camerashot_add_arc_behavior"
        ],
        "body": [
            "camera.camerashot_add_arc_behavior(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::CAMERASHOT_ADD_ARC_BEHAVIOR (0xA1C665E0) function."
    },
    "camera.camerashot_add_lookstick_rotation_behavior": {
        "prefix": [
            "camera.camerashot_add_lookstick_rotation_behavior",
            "camerashot_add_lookstick_rotation_behavior"
        ],
        "body": [
            "camera.camerashot_add_lookstick_rotation_behavior(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "CAMERA::CAMERASHOT_ADD_LOOKSTICK_ROTATION_BEHAVIOR (0x59AE458A) function."
    },
    "camera.create_aimramp_in_layout": {
        "prefix": [
            "camera.create_aimramp_in_layout",
            "create_aimramp_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = camera.create_aimramp_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::CREATE_AIMRAMP_IN_LAYOUT (0xDA50B18B) function."
    },
    "camera.update_aimramp": {
        "prefix": [
            "camera.update_aimramp",
            "update_aimramp"
        ],
        "body": [
            "camera.update_aimramp(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CAMERA::UPDATE_AIMRAMP (0x86066A65) function."
    },
    "camera.create_cutsceneobject_in_layout": {
        "prefix": [
            "camera.create_cutsceneobject_in_layout",
            "create_cutsceneobject_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = camera.create_cutsceneobject_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CAMERA::CREATE_CUTSCENEOBJECT_IN_LAYOUT (0xA923A22D) function."
    },
    "camera.get_camera_from_cutsceneobject": {
        "prefix": [
            "camera.get_camera_from_cutsceneobject",
            "get_camera_from_cutsceneobject"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_camera_from_cutsceneobject(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERA_FROM_CUTSCENEOBJECT (0xFDBE95AE) function."
    },
    "camera.play_cutsceneobject": {
        "prefix": [
            "camera.play_cutsceneobject",
            "play_cutsceneobject"
        ],
        "body": [
            "camera.play_cutsceneobject(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "CAMERA::PLAY_CUTSCENEOBJECT (0xFB28AE8D) function."
    },
    "camera.get_camerashot_from_cutsceneobject": {
        "prefix": [
            "camera.get_camerashot_from_cutsceneobject",
            "get_camerashot_from_cutsceneobject"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_camerashot_from_cutsceneobject(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CAMERASHOT_FROM_CUTSCENEOBJECT (0x7E9CC966) function."
    },
    "camera.cutsceneobject_add_transition_hold": {
        "prefix": [
            "camera.cutsceneobject_add_transition_hold",
            "cutsceneobject_add_transition_hold"
        ],
        "body": [
            "local result --[[ integer ]] = camera.cutsceneobject_add_transition_hold(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_ADD_TRANSITION_HOLD (0xC0CD3C96) function."
    },
    "camera.cutsceneobject_add_transition_lerp": {
        "prefix": [
            "camera.cutsceneobject_add_transition_lerp",
            "cutsceneobject_add_transition_lerp"
        ],
        "body": [
            "local result --[[ integer ]] = camera.cutsceneobject_add_transition_lerp(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_ADD_TRANSITION_LERP (0xFC676413) function."
    },
    "camera.cutsceneobject_add_transition_ease_in": {
        "prefix": [
            "camera.cutsceneobject_add_transition_ease_in",
            "cutsceneobject_add_transition_ease_in"
        ],
        "body": [
            "local result --[[ integer ]] = camera.cutsceneobject_add_transition_ease_in(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_ADD_TRANSITION_EASE_IN (0xCC61CC5F) function."
    },
    "camera.cutsceneobject_add_transition_ease_out": {
        "prefix": [
            "camera.cutsceneobject_add_transition_ease_out",
            "cutsceneobject_add_transition_ease_out"
        ],
        "body": [
            "local result --[[ integer ]] = camera.cutsceneobject_add_transition_ease_out(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_ADD_TRANSITION_EASE_OUT (0x1AD38A53) function."
    },
    "camera.cutsceneobject_add_transition_ease_in_out": {
        "prefix": [
            "camera.cutsceneobject_add_transition_ease_in_out",
            "cutsceneobject_add_transition_ease_in_out"
        ],
        "body": [
            "local result --[[ integer ]] = camera.cutsceneobject_add_transition_ease_in_out(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_ADD_TRANSITION_EASE_IN_OUT (0xDB07C72B) function."
    },
    "camera.cutsceneobject_add_transition_indefinite": {
        "prefix": [
            "camera.cutsceneobject_add_transition_indefinite",
            "cutsceneobject_add_transition_indefinite"
        ],
        "body": [
            "local result --[[ integer ]] = camera.cutsceneobject_add_transition_indefinite(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_ADD_TRANSITION_INDEFINITE (0x94B288F9) function."
    },
    "camera.cutsceneobject_add_transition_decorator": {
        "prefix": [
            "camera.cutsceneobject_add_transition_decorator",
            "cutsceneobject_add_transition_decorator"
        ],
        "body": [
            "local result --[[ integer ]] = camera.cutsceneobject_add_transition_decorator(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_ADD_TRANSITION_DECORATOR (0xA9AB9A06) function."
    },
    "camera.cutsceneobject_add_transition_fixed": {
        "prefix": [
            "camera.cutsceneobject_add_transition_fixed",
            "cutsceneobject_add_transition_fixed"
        ],
        "body": [
            "local result --[[ integer ]] = camera.cutsceneobject_add_transition_fixed(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_ADD_TRANSITION_FIXED (0x7A48EDDF) function."
    },
    "camera.cutsceneobject_get_current_transition_type": {
        "prefix": [
            "camera.cutsceneobject_get_current_transition_type",
            "cutsceneobject_get_current_transition_type"
        ],
        "body": [
            "local result --[[ integer ]] = camera.cutsceneobject_get_current_transition_type(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_GET_CURRENT_TRANSITION_TYPE (0x0A776763) function."
    },
    "camera.end_current_transition_from_cutsceneobject": {
        "prefix": [
            "camera.end_current_transition_from_cutsceneobject",
            "end_current_transition_from_cutsceneobject"
        ],
        "body": [
            "camera.end_current_transition_from_cutsceneobject(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::END_CURRENT_TRANSITION_FROM_CUTSCENEOBJECT (0xBE3F0168) function."
    },
    "camera.set_cutsceneobject_paused": {
        "prefix": [
            "camera.set_cutsceneobject_paused",
            "set_cutsceneobject_paused"
        ],
        "body": [
            "camera.set_cutsceneobject_paused(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CUTSCENEOBJECT_PAUSED (0x18643DC2) function."
    },
    "camera.is_cutsceneobject_paused": {
        "prefix": [
            "camera.is_cutsceneobject_paused",
            "is_cutsceneobject_paused"
        ],
        "body": [
            "local result --[[ boolean ]] = camera.is_cutsceneobject_paused(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::IS_CUTSCENEOBJECT_PAUSED (0xD5C66699) function."
    },
    "camera.check_cutscene_collisions": {
        "prefix": [
            "camera.check_cutscene_collisions",
            "check_cutscene_collisions"
        ],
        "body": [
            "local result --[[ integer ]] = camera.check_cutscene_collisions(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::CHECK_CUTSCENE_COLLISIONS (0xE147BA8E) function."
    },
    "camera.get_cutsceneobject_sequence": {
        "prefix": [
            "camera.get_cutsceneobject_sequence",
            "get_cutsceneobject_sequence"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_cutsceneobject_sequence(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CUTSCENEOBJECT_SEQUENCE (0x3D26D852) function."
    },
    "camera.cutsceneobject_set_recenter_gamecam": {
        "prefix": [
            "camera.cutsceneobject_set_recenter_gamecam",
            "cutsceneobject_set_recenter_gamecam"
        ],
        "body": [
            "camera.cutsceneobject_set_recenter_gamecam(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::CUTSCENEOBJECT_SET_RECENTER_GAMECAM (0xDCD3A7DE) function."
    },
    "camera.set_cutsceneinputs_target_guid": {
        "prefix": [
            "camera.set_cutsceneinputs_target_guid",
            "set_cutsceneinputs_target_guid"
        ],
        "body": [
            "local result --[[ integer ]] = camera.set_cutsceneinputs_target_guid(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CUTSCENEINPUTS_TARGET_GUID (0xF74B5ADE) function."
    },
    "camera.add_cameratransition_event_hudfadein": {
        "prefix": [
            "camera.add_cameratransition_event_hudfadein",
            "add_cameratransition_event_hudfadein"
        ],
        "body": [
            "camera.add_cameratransition_event_hudfadein(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERATRANSITION_EVENT_HUDFADEIN (0x25A58402) function."
    },
    "camera.add_cameratransition_event_hudfadeout": {
        "prefix": [
            "camera.add_cameratransition_event_hudfadeout",
            "add_cameratransition_event_hudfadeout"
        ],
        "body": [
            "camera.add_cameratransition_event_hudfadeout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERATRANSITION_EVENT_HUDFADEOUT (0x269F5C75) function."
    },
    "camera.add_cameratransition_event_gamecamerareset": {
        "prefix": [
            "camera.add_cameratransition_event_gamecamerareset",
            "add_cameratransition_event_gamecamerareset"
        ],
        "body": [
            "camera.add_cameratransition_event_gamecamerareset(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERATRANSITION_EVENT_GAMECAMERARESET (0x699332B0) function."
    },
    "camera.add_cameratransition_event_gamecameraresettilt": {
        "prefix": [
            "camera.add_cameratransition_event_gamecameraresettilt",
            "add_cameratransition_event_gamecameraresettilt"
        ],
        "body": [
            "camera.add_cameratransition_event_gamecameraresettilt(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERATRANSITION_EVENT_GAMECAMERARESETTILT (0x3A8487A6) function."
    },
    "camera.add_cameratransition_event_cutgamecamerabehindplayer": {
        "prefix": [
            "camera.add_cameratransition_event_cutgamecamerabehindplayer",
            "add_cameratransition_event_cutgamecamerabehindplayer"
        ],
        "body": [
            "camera.add_cameratransition_event_cutgamecamerabehindplayer(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CAMERA::ADD_CAMERATRANSITION_EVENT_CUTGAMECAMERABEHINDPLAYER (0x8D7070F3) function."
    },
    "camera.is_cutscene_tuner_playingback": {
        "prefix": [
            "camera.is_cutscene_tuner_playingback",
            "is_cutscene_tuner_playingback"
        ],
        "body": [
            "local result --[[ boolean ]] = camera.is_cutscene_tuner_playingback()"
        ],
        "description": "CAMERA::IS_CUTSCENE_TUNER_PLAYINGBACK (0xCDA6BB6C) function."
    },
    "camera.cancel_cutscene_tuner_playback": {
        "prefix": [
            "camera.cancel_cutscene_tuner_playback",
            "cancel_cutscene_tuner_playback"
        ],
        "body": [
            "camera.cancel_cutscene_tuner_playback()"
        ],
        "description": "CAMERA::CANCEL_CUTSCENE_TUNER_PLAYBACK (0xE7A1C191) function."
    },
    "camera.get_cutscene_tuner_cutsceneobject": {
        "prefix": [
            "camera.get_cutscene_tuner_cutsceneobject",
            "get_cutscene_tuner_cutsceneobject"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_cutscene_tuner_cutsceneobject()"
        ],
        "description": "CAMERA::GET_CUTSCENE_TUNER_CUTSCENEOBJECT (0x93050734) function."
    },
    "camera.get_cutscene_tuner_inputsobject": {
        "prefix": [
            "camera.get_cutscene_tuner_inputsobject",
            "get_cutscene_tuner_inputsobject"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_cutscene_tuner_inputsobject()"
        ],
        "description": "CAMERA::GET_CUTSCENE_TUNER_INPUTSOBJECT (0xFF1F1730) function."
    },
    "camera.get_cutscene_tuner_script_name": {
        "prefix": [
            "camera.get_cutscene_tuner_script_name",
            "get_cutscene_tuner_script_name"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_cutscene_tuner_script_name(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::GET_CUTSCENE_TUNER_SCRIPT_NAME (0x74EE96B8) function."
    },
    "camera.get_cutscene_tuner_cutscene_index": {
        "prefix": [
            "camera.get_cutscene_tuner_cutscene_index",
            "get_cutscene_tuner_cutscene_index"
        ],
        "body": [
            "local result --[[ integer ]] = camera.get_cutscene_tuner_cutscene_index()"
        ],
        "description": "CAMERA::GET_CUTSCENE_TUNER_CUTSCENE_INDEX (0xD8218A5B) function."
    },
    "camera.create_camera_focus_point_object": {
        "prefix": [
            "camera.create_camera_focus_point_object",
            "create_camera_focus_point_object"
        ],
        "body": [
            "local result --[[ integer ]] = camera.create_camera_focus_point_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "CAMERA::CREATE_CAMERA_FOCUS_POINT_OBJECT (0x76876FEA) function."
    },
    "camera.create_camera_focus_point_object_with_tuning": {
        "prefix": [
            "camera.create_camera_focus_point_object_with_tuning",
            "create_camera_focus_point_object_with_tuning"
        ],
        "body": [
            "local result --[[ integer ]] = camera.create_camera_focus_point_object_with_tuning(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CAMERA::CREATE_CAMERA_FOCUS_POINT_OBJECT_WITH_TUNING (0x7A6146DB) function."
    },
    "camera.is_camera_focus_active": {
        "prefix": [
            "camera.is_camera_focus_active",
            "is_camera_focus_active"
        ],
        "body": [
            "local result --[[ boolean ]] = camera.is_camera_focus_active(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::IS_CAMERA_FOCUS_ACTIVE (0xCA8CC5CE) function."
    },
    "camera.set_camera_focus_enabled": {
        "prefix": [
            "camera.set_camera_focus_enabled",
            "set_camera_focus_enabled"
        ],
        "body": [
            "camera.set_camera_focus_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_FOCUS_ENABLED (0x78D29E49) function."
    },
    "camera.is_camera_focus_enabled": {
        "prefix": [
            "camera.is_camera_focus_enabled",
            "is_camera_focus_enabled"
        ],
        "body": [
            "local result --[[ boolean ]] = camera.is_camera_focus_enabled(unk0 --[[ integer ]])"
        ],
        "description": "CAMERA::IS_CAMERA_FOCUS_ENABLED (0x80D63DAC) function."
    },
    "camera.set_camera_focus_prompt_enabled": {
        "prefix": [
            "camera.set_camera_focus_prompt_enabled",
            "set_camera_focus_prompt_enabled"
        ],
        "body": [
            "camera.set_camera_focus_prompt_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_FOCUS_PROMPT_ENABLED (0x2148298D) function."
    },
    "camera.set_camera_focus_player_input_disabled": {
        "prefix": [
            "camera.set_camera_focus_player_input_disabled",
            "set_camera_focus_player_input_disabled"
        ],
        "body": [
            "camera.set_camera_focus_player_input_disabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_FOCUS_PLAYER_INPUT_DISABLED (0x6FDE0A8C) function."
    },
    "camera.set_camera_focus_player_invulnerable": {
        "prefix": [
            "camera.set_camera_focus_player_invulnerable",
            "set_camera_focus_player_invulnerable"
        ],
        "body": [
            "camera.set_camera_focus_player_invulnerable(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_FOCUS_PLAYER_INVULNERABLE (0x4A3AE626) function."
    },
    "camera.set_camera_focus_prompt_text": {
        "prefix": [
            "camera.set_camera_focus_prompt_text",
            "set_camera_focus_prompt_text"
        ],
        "body": [
            "camera.set_camera_focus_prompt_text(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_FOCUS_PROMPT_TEXT (0x21633E5F) function."
    },
    "camera.set_camera_focus_object": {
        "prefix": [
            "camera.set_camera_focus_object",
            "set_camera_focus_object"
        ],
        "body": [
            "camera.set_camera_focus_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CAMERA::SET_CAMERA_FOCUS_OBJECT (0x48C3D85A) function."
    },
    "core.override_benchmark_pos": {
        "prefix": [
            "core.override_benchmark_pos",
            "override_benchmark_pos"
        ],
        "body": [
            "core.override_benchmark_pos(position --[[ vector3 ]])"
        ],
        "description": "CORE::OVERRIDE_BENCHMARK_POS (0x14993D3B) function."
    },
    "core.override_benchmark_dir": {
        "prefix": [
            "core.override_benchmark_dir",
            "override_benchmark_dir"
        ],
        "body": [
            "core.override_benchmark_dir(direction --[[ vector3 ]])"
        ],
        "description": "CORE::OVERRIDE_BENCHMARK_DIR (0xE8AB1D5B) function."
    },
    "core.set_debug_draw": {
        "prefix": [
            "core.set_debug_draw",
            "set_debug_draw"
        ],
        "body": [
            "core.set_debug_draw(unk0 --[[ integer ]])"
        ],
        "description": "CORE::SET_DEBUG_DRAW (0x505A8057) function."
    },
    "core.get_debug_draw_state": {
        "prefix": [
            "core.get_debug_draw_state",
            "get_debug_draw_state"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_debug_draw_state()"
        ],
        "description": "CORE::GET_DEBUG_DRAW_STATE (0xFF0B53EF) function."
    },
    "core._0x6de957c6": {
        "prefix": [
            "core._0x6de957c6",
            "_0x6de957c6"
        ],
        "body": [
            "local result --[[ integer ]] = core._0x6de957c6()"
        ],
        "description": "CORE::_0x6DE957C6 (0x6DE957C6) function."
    },
    "core.script_breakpoint": {
        "prefix": [
            "core.script_breakpoint",
            "script_breakpoint"
        ],
        "body": [
            "core.script_breakpoint(unk0 --[[ integer ]])"
        ],
        "description": "CORE::SCRIPT_BREAKPOINT (0xA81DABA3) function."
    },
    "core.gringo_debug_check_sound": {
        "prefix": [
            "core.gringo_debug_check_sound",
            "gringo_debug_check_sound"
        ],
        "body": [
            "core.gringo_debug_check_sound(unk0 --[[ integer ]])"
        ],
        "description": "CORE::GRINGO_DEBUG_CHECK_SOUND (0x5AC72FCC) function."
    },
    "core.disable_actor_refcounting": {
        "prefix": [
            "core.disable_actor_refcounting",
            "disable_actor_refcounting"
        ],
        "body": [
            "core.disable_actor_refcounting(unk0 --[[ integer ]])"
        ],
        "description": "CORE::DISABLE_ACTOR_REFCOUNTING (0x9FEFA743) function."
    },
    "core.get_script_name": {
        "prefix": [
            "core.get_script_name",
            "get_script_name"
        ],
        "body": [
            "local result --[[ string ]] = core.get_script_name()"
        ],
        "description": "CORE::GET_SCRIPT_NAME (0x0BC52445) function."
    },
    "core.get_short_script_name": {
        "prefix": [
            "core.get_short_script_name",
            "get_short_script_name"
        ],
        "body": [
            "local result --[[ string ]] = core.get_short_script_name()"
        ],
        "description": "CORE::GET_SHORT_SCRIPT_NAME (0x960DB7A5) function."
    },
    "core.terminate_this_script": {
        "prefix": [
            "core.terminate_this_script",
            "terminate_this_script"
        ],
        "body": [
            "core.terminate_this_script()"
        ],
        "description": "CORE::TERMINATE_THIS_SCRIPT (0x245B6AB6) function."
    },
    "core.get_this_script_id": {
        "prefix": [
            "core.get_this_script_id",
            "get_this_script_id"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_this_script_id()"
        ],
        "description": "CORE::GET_THIS_SCRIPT_ID (0x9C424E0D) function."
    },
    "core.is_script_valid": {
        "prefix": [
            "core.is_script_valid",
            "is_script_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_script_valid(scriptid --[[ integer ]])"
        ],
        "description": "CORE::IS_SCRIPT_VALID (0x45F7D589) function."
    },
    "core.does_script_exist": {
        "prefix": [
            "core.does_script_exist",
            "does_script_exist"
        ],
        "body": [
            "local result --[[ boolean ]] = core.does_script_exist(scriptpath --[[ string ]])"
        ],
        "description": "CORE::DOES_SCRIPT_EXIST (0xDEAB87AB) function."
    },
    "core.is_exitflag_set": {
        "prefix": [
            "core.is_exitflag_set",
            "is_exitflag_set"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_exitflag_set()"
        ],
        "description": "CORE::IS_EXITFLAG_SET (0x687ECC3C) function."
    },
    "core._is_any_named_script_running": {
        "prefix": [
            "core._is_any_named_script_running",
            "_is_any_named_script_running"
        ],
        "body": [
            "local result --[[ boolean ]] = core._is_any_named_script_running(str --[[ string ]])"
        ],
        "description": "CORE::_IS_ANY_NAMED_SCRIPT_RUNNING (0x4417C9F2) function."
    },
    "core._terminate_all_named_child_scripts": {
        "prefix": [
            "core._terminate_all_named_child_scripts",
            "_terminate_all_named_child_scripts"
        ],
        "body": [
            "core._terminate_all_named_child_scripts(str --[[ string ]])"
        ],
        "description": "CORE::_TERMINATE_ALL_NAMED_CHILD_SCRIPTS (0x05719022) function."
    },
    "core.terminate_script": {
        "prefix": [
            "core.terminate_script",
            "terminate_script"
        ],
        "body": [
            "core.terminate_script(scriptid --[[ integer ]])"
        ],
        "description": "CORE::TERMINATE_SCRIPT (0x60A7FF09) function."
    },
    "core.add_persistent_script": {
        "prefix": [
            "core.add_persistent_script",
            "add_persistent_script"
        ],
        "body": [
            "core.add_persistent_script(scriptid --[[ integer ]])"
        ],
        "description": "CORE::ADD_PERSISTENT_SCRIPT (0x2F109475) function."
    },
    "core.remove_persistent_script": {
        "prefix": [
            "core.remove_persistent_script",
            "remove_persistent_script"
        ],
        "body": [
            "core.remove_persistent_script(scriptid --[[ integer ]])"
        ],
        "description": "CORE::REMOVE_PERSISTENT_SCRIPT (0xC605E92F) function."
    },
    "core.script_max_allowed_instructions": {
        "prefix": [
            "core.script_max_allowed_instructions",
            "script_max_allowed_instructions"
        ],
        "body": [
            "local result --[[ integer ]] = core.script_max_allowed_instructions()"
        ],
        "description": "CORE::SCRIPT_MAX_ALLOWED_INSTRUCTIONS (0x4C48EA4D) function."
    },
    "core.script_used_instructions": {
        "prefix": [
            "core.script_used_instructions",
            "script_used_instructions"
        ],
        "body": [
            "local result --[[ integer ]] = core.script_used_instructions()"
        ],
        "description": "CORE::SCRIPT_USED_INSTRUCTIONS (0xD058BD70) function."
    },
    "core.script_remaining_instructions": {
        "prefix": [
            "core.script_remaining_instructions",
            "script_remaining_instructions"
        ],
        "body": [
            "local result --[[ integer ]] = core.script_remaining_instructions()"
        ],
        "description": "CORE::SCRIPT_REMAINING_INSTRUCTIONS (0x26884138) function."
    },
    "core.rand_set_seed": {
        "prefix": [
            "core.rand_set_seed",
            "rand_set_seed"
        ],
        "body": [
            "core.rand_set_seed(seed --[[ integer ]])"
        ],
        "description": "CORE::RAND_SET_SEED (0xC0C6245E) function."
    },
    "core.rand_int_range": {
        "prefix": [
            "core.rand_int_range",
            "rand_int_range"
        ],
        "body": [
            "local result --[[ integer ]] = core.rand_int_range(min --[[ integer ]], max --[[ integer ]])"
        ],
        "description": "CORE::RAND_INT_RANGE (0xF8D0D165) function."
    },
    "core.rand_float_range": {
        "prefix": [
            "core.rand_float_range",
            "rand_float_range"
        ],
        "body": [
            "local result --[[ number ]] = core.rand_float_range(min --[[ number ]], max --[[ number ]])"
        ],
        "description": "CORE::RAND_FLOAT_RANGE (0xCA6229BF) function."
    },
    "core.rand_int_range_different": {
        "prefix": [
            "core.rand_int_range_different",
            "rand_int_range_different"
        ],
        "body": [
            "local result --[[ integer ]] = core.rand_int_range_different(min --[[ integer ]], max --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CORE::RAND_INT_RANGE_DIFFERENT (0x1D69F321) function."
    },
    "core.rand_float_gaussian": {
        "prefix": [
            "core.rand_float_gaussian",
            "rand_float_gaussian"
        ],
        "body": [
            "local result --[[ number ]] = core.rand_float_gaussian(min --[[ number ]], max --[[ number ]])"
        ],
        "description": "CORE::RAND_FLOAT_GAUSSIAN (0x5D934CCB) function."
    },
    "core.file_start_path": {
        "prefix": [
            "core.file_start_path",
            "file_start_path"
        ],
        "body": [
            "core.file_start_path(unk0 --[[ integer ]])"
        ],
        "description": "CORE::FILE_START_PATH (0x973BC454) function."
    },
    "core.file_add_to_path": {
        "prefix": [
            "core.file_add_to_path",
            "file_add_to_path"
        ],
        "body": [
            "core.file_add_to_path(unk0 --[[ integer ]])"
        ],
        "description": "CORE::FILE_ADD_TO_PATH (0x63CDBB01) function."
    },
    "core.file_end_path": {
        "prefix": [
            "core.file_end_path",
            "file_end_path"
        ],
        "body": [
            "core.file_end_path()"
        ],
        "description": "CORE::FILE_END_PATH (0x9A202E1B) function."
    },
    "core.file_get_current_path": {
        "prefix": [
            "core.file_get_current_path",
            "file_get_current_path"
        ],
        "body": [
            "local result --[[ integer ]] = core.file_get_current_path()"
        ],
        "description": "CORE::FILE_GET_CURRENT_PATH (0x6F323C5F) function."
    },
    "core.get_x": {
        "prefix": [
            "core.get_x",
            "get_x"
        ],
        "body": [
            "local result --[[ number ]] = core.get_x(actor --[[ integer ]])"
        ],
        "description": "CORE::GET_X (0x436CE75A) function."
    },
    "core.get_y": {
        "prefix": [
            "core.get_y",
            "get_y"
        ],
        "body": [
            "local result --[[ number ]] = core.get_y(actor --[[ integer ]])"
        ],
        "description": "CORE::GET_Y (0x0B0FF6A1) function."
    },
    "core.get_z": {
        "prefix": [
            "core.get_z",
            "get_z"
        ],
        "body": [
            "local result --[[ number ]] = core.get_z(actor --[[ integer ]])"
        ],
        "description": "CORE::GET_Z (0x25A02BC1) function."
    },
    "core.vnormalize": {
        "prefix": [
            "core.vnormalize",
            "vnormalize"
        ],
        "body": [
            "core.vnormalize(vector --[[ vector3 ]])"
        ],
        "description": "CORE::VNORMALIZE (0x836466F8) function."
    },
    "core.vcross": {
        "prefix": [
            "core.vcross",
            "vcross"
        ],
        "body": [
            "core.vcross(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CORE::VCROSS (0x4D629653) function."
    },
    "core.vdot": {
        "prefix": [
            "core.vdot",
            "vdot"
        ],
        "body": [
            "local result --[[ integer ]] = core.vdot(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::VDOT (0x30A9FA0A) function."
    },
    "core.vscale": {
        "prefix": [
            "core.vscale",
            "vscale"
        ],
        "body": [
            "core.vscale(vector --[[ vector3 ]], scale --[[ number ]])"
        ],
        "description": "CORE::VSCALE (0x13530581) function."
    },
    "core._vdirection_vector_from_eulers": {
        "prefix": [
            "core._vdirection_vector_from_eulers",
            "_vdirection_vector_from_eulers"
        ],
        "body": [
            "local result --[[ boolean ]] = core._vdirection_vector_from_eulers(vectora --[[ vector3 ]], vectorb --[[ vector3 ]], unk0 --[[ boolean ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::_VDIRECTION_VECTOR_FROM_EULERS (0xF1A53C41) function."
    },
    "core._vrotate_vector_from_eulers": {
        "prefix": [
            "core._vrotate_vector_from_eulers",
            "_vrotate_vector_from_eulers"
        ],
        "body": [
            "core._vrotate_vector_from_eulers(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CORE::_VROTATE_VECTOR_FROM_EULERS (0xF76F2BB3) function."
    },
    "core._vrotate_euler_from_eulers": {
        "prefix": [
            "core._vrotate_euler_from_eulers",
            "_vrotate_euler_from_eulers"
        ],
        "body": [
            "core._vrotate_euler_from_eulers(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CORE::_VROTATE_EULER_FROM_EULERS (0x65DAA654) function."
    },
    "core.rotate_vector_xz": {
        "prefix": [
            "core.rotate_vector_xz",
            "rotate_vector_xz"
        ],
        "body": [
            "core.rotate_vector_xz(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CORE::ROTATE_VECTOR_XZ (0x1BD78730) function."
    },
    "core._construct_matrix_and_transform": {
        "prefix": [
            "core._construct_matrix_and_transform",
            "_construct_matrix_and_transform"
        ],
        "body": [
            "local result --[[ integer ]] = core._construct_matrix_and_transform(unk0 --[[ number ]], unk1 --[[ number ]], unk2 --[[ number ]], unk3 --[[ number ]], unk4 --[[ number ]], unk5 --[[ number ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]])"
        ],
        "description": "CORE::_CONSTRUCT_MATRIX_AND_TRANSFORM (0x141201A3) function."
    },
    "core.fabs": {
        "prefix": [
            "core.fabs",
            "fabs"
        ],
        "body": [
            "local result --[[ number ]] = core.fabs(value --[[ number ]])"
        ],
        "description": "CORE::FABS (0xACF9A5E4) function."
    },
    "core.abs": {
        "prefix": [
            "core.abs",
            "abs"
        ],
        "body": [
            "local result --[[ integer ]] = core.abs(value --[[ integer ]])"
        ],
        "description": "CORE::ABS (0x5AABFA97) function."
    },
    "core.sin_degree": {
        "prefix": [
            "core.sin_degree",
            "sin_degree"
        ],
        "body": [
            "local result --[[ number ]] = core.sin_degree(x --[[ number ]])"
        ],
        "description": "CORE::SIN_DEGREE (0x55842354) function."
    },
    "core.cos_degree": {
        "prefix": [
            "core.cos_degree",
            "cos_degree"
        ],
        "body": [
            "local result --[[ number ]] = core.cos_degree(x --[[ number ]])"
        ],
        "description": "CORE::COS_DEGREE (0x430207A4) function."
    },
    "core.tan_degree": {
        "prefix": [
            "core.tan_degree",
            "tan_degree"
        ],
        "body": [
            "local result --[[ number ]] = core.tan_degree(x --[[ number ]])"
        ],
        "description": "CORE::TAN_DEGREE (0x9BD37A3D) function."
    },
    "core.atan_degree": {
        "prefix": [
            "core.atan_degree",
            "atan_degree"
        ],
        "body": [
            "local result --[[ number ]] = core.atan_degree(x --[[ number ]])"
        ],
        "description": "CORE::ATAN_DEGREE (0x69BE2817) function."
    },
    "core.atan2_degree": {
        "prefix": [
            "core.atan2_degree",
            "atan2_degree"
        ],
        "body": [
            "local result --[[ number ]] = core.atan2_degree(x --[[ number ]], y --[[ number ]])"
        ],
        "description": "CORE::ATAN2_DEGREE (0x8A0D25F2) function."
    },
    "core._get_vector_heading_degs": {
        "prefix": [
            "core._get_vector_heading_degs",
            "_get_vector_heading_degs"
        ],
        "body": [
            "local result --[[ number ]] = core._get_vector_heading_degs(vector --[[ vector3 ]])"
        ],
        "description": "CORE::_GET_VECTOR_HEADING_DEGS (0x9C40E671) function."
    },
    "core._get_vector_heading_rads": {
        "prefix": [
            "core._get_vector_heading_rads",
            "_get_vector_heading_rads"
        ],
        "body": [
            "local result --[[ integer ]] = core._get_vector_heading_rads(unk0 --[[ integer ]])"
        ],
        "description": "CORE::_GET_VECTOR_HEADING_RADS (0xADF7D54B) function."
    },
    "core.get_angle_between_vectors_degs": {
        "prefix": [
            "core.get_angle_between_vectors_degs",
            "get_angle_between_vectors_degs"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_angle_between_vectors_degs(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::GET_ANGLE_BETWEEN_VECTORS_DEGS (0x3DD1DC3F) function."
    },
    "core.vector_from_heading_degs": {
        "prefix": [
            "core.vector_from_heading_degs",
            "vector_from_heading_degs"
        ],
        "body": [
            "core.vector_from_heading_degs(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::VECTOR_FROM_HEADING_DEGS (0x44986367) function."
    },
    "core._transform_world_to_screen": {
        "prefix": [
            "core._transform_world_to_screen",
            "_transform_world_to_screen"
        ],
        "body": [
            "local result --[[ number ]] = core._transform_world_to_screen(position --[[ vector3 ]], screenx --[[ number ]], screeny --[[ number ]])"
        ],
        "description": "CORE::_TRANSFORM_WORLD_TO_SCREEN (0xBB3CDF72) function."
    },
    "core.get_current_game_time": {
        "prefix": [
            "core.get_current_game_time",
            "get_current_game_time"
        ],
        "body": [
            "local result --[[ number ]] = core.get_current_game_time()"
        ],
        "description": "CORE::GET_CURRENT_GAME_TIME (0x5842B9D1) function."
    },
    "core.get_current_unwarped_time": {
        "prefix": [
            "core.get_current_unwarped_time",
            "get_current_unwarped_time"
        ],
        "body": [
            "local result --[[ number ]] = core.get_current_unwarped_time()"
        ],
        "description": "CORE::GET_CURRENT_UNWARPED_TIME (0xF83666A6) function."
    },
    "core.get_system_time": {
        "prefix": [
            "core.get_system_time",
            "get_system_time"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_system_time()"
        ],
        "description": "CORE::GET_SYSTEM_TIME (0x17CEE67A) function."
    },
    "core.get_timestamp": {
        "prefix": [
            "core.get_timestamp",
            "get_timestamp"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_timestamp()"
        ],
        "description": "CORE::GET_TIMESTAMP (0xD66B6C8E) function."
    },
    "core.get_utc_time": {
        "prefix": [
            "core.get_utc_time",
            "get_utc_time"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_utc_time()"
        ],
        "description": "CORE::GET_UTC_TIME (0xC589CD7D) function."
    },
    "core.get_unwarped_realtime_seconds": {
        "prefix": [
            "core.get_unwarped_realtime_seconds",
            "get_unwarped_realtime_seconds"
        ],
        "body": [
            "local result --[[ number ]] = core.get_unwarped_realtime_seconds()"
        ],
        "description": "CORE::GET_UNWARPED_REALTIME_SECONDS (0x49F96787) function."
    },
    "core.get_profile_time": {
        "prefix": [
            "core.get_profile_time",
            "get_profile_time"
        ],
        "body": [
            "local result --[[ number ]] = core.get_profile_time()"
        ],
        "description": "CORE::GET_PROFILE_TIME (0x6E189771) function."
    },
    "core.get_last_frame_time": {
        "prefix": [
            "core.get_last_frame_time",
            "get_last_frame_time"
        ],
        "body": [
            "local result --[[ number ]] = core.get_last_frame_time()"
        ],
        "description": "CORE::GET_LAST_FRAME_TIME (0x59466B4D) function."
    },
    "core._log_message": {
        "prefix": [
            "core._log_message",
            "_log_message"
        ],
        "body": [
            "core._log_message(message --[[ string ]])"
        ],
        "description": "CORE::_LOG_MESSAGE (0x676167C3) function."
    },
    "core._log_warning": {
        "prefix": [
            "core._log_warning",
            "_log_warning"
        ],
        "body": [
            "core._log_warning(message --[[ string ]])"
        ],
        "description": "CORE::_LOG_WARNING (0xFD25473E) function."
    },
    "core._log_error": {
        "prefix": [
            "core._log_error",
            "_log_error"
        ],
        "body": [
            "core._log_error(message --[[ string ]])"
        ],
        "description": "CORE::_LOG_ERROR (0x906C42FD) function."
    },
    "core.get_target_actor": {
        "prefix": [
            "core.get_target_actor",
            "get_target_actor"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_target_actor()"
        ],
        "description": "CORE::GET_TARGET_ACTOR (0x0EF7427B) function."
    },
    "core.gringo_set_target_object": {
        "prefix": [
            "core.gringo_set_target_object",
            "gringo_set_target_object"
        ],
        "body": [
            "core.gringo_set_target_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CORE::GRINGO_SET_TARGET_OBJECT (0x00776356) function."
    },
    "core.get_target_object": {
        "prefix": [
            "core.get_target_object",
            "get_target_object"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_target_object()"
        ],
        "description": "CORE::GET_TARGET_OBJECT (0x533AD3F2) function."
    },
    "core.is_gringo_valid": {
        "prefix": [
            "core.is_gringo_valid",
            "is_gringo_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_gringo_valid(unk0 --[[ integer ]])"
        ],
        "description": "CORE::IS_GRINGO_VALID (0x7C858A47) function."
    },
    "core.get_gringo_activation_sphere": {
        "prefix": [
            "core.get_gringo_activation_sphere",
            "get_gringo_activation_sphere"
        ],
        "body": [
            "core.get_gringo_activation_sphere(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CORE::GET_GRINGO_ACTIVATION_SPHERE (0xADA2EA30) function."
    },
    "core.disable_gringo_streaming_checks": {
        "prefix": [
            "core.disable_gringo_streaming_checks",
            "disable_gringo_streaming_checks"
        ],
        "body": [
            "core.disable_gringo_streaming_checks()"
        ],
        "description": "CORE::DISABLE_GRINGO_STREAMING_CHECKS (0xFD0AA999) function."
    },
    "core.enable_gringo_streaming_checks": {
        "prefix": [
            "core.enable_gringo_streaming_checks",
            "enable_gringo_streaming_checks"
        ],
        "body": [
            "core.enable_gringo_streaming_checks()"
        ],
        "description": "CORE::ENABLE_GRINGO_STREAMING_CHECKS (0x71BE51F4) function."
    },
    "core.gringo_allow_activation": {
        "prefix": [
            "core.gringo_allow_activation",
            "gringo_allow_activation"
        ],
        "body": [
            "core.gringo_allow_activation(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::GRINGO_ALLOW_ACTIVATION (0x5E586923) function."
    },
    "core.gringo_is_activation_allowed": {
        "prefix": [
            "core.gringo_is_activation_allowed",
            "gringo_is_activation_allowed"
        ],
        "body": [
            "local result --[[ boolean ]] = core.gringo_is_activation_allowed(unk0 --[[ integer ]])"
        ],
        "description": "CORE::GRINGO_IS_ACTIVATION_ALLOWED (0x52261CE0) function."
    },
    "core.is_debugkey_down": {
        "prefix": [
            "core.is_debugkey_down",
            "is_debugkey_down"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_debugkey_down(keycode --[[ integer ]])"
        ],
        "description": "CORE::IS_DEBUGKEY_DOWN (0x358F874F) function."
    },
    "core.is_debugkey_pressed": {
        "prefix": [
            "core.is_debugkey_pressed",
            "is_debugkey_pressed"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_debugkey_pressed(keycode --[[ integer ]])"
        ],
        "description": "CORE::IS_DEBUGKEY_PRESSED (0xCBC97619) function."
    },
    "core.is_button_down": {
        "prefix": [
            "core.is_button_down",
            "is_button_down"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_button_down(controller --[[ integer ]], button --[[ integer ]])"
        ],
        "description": "CORE::IS_BUTTON_DOWN (0xC3297B50) function."
    },
    "core.is_button_pressed": {
        "prefix": [
            "core.is_button_pressed",
            "is_button_pressed"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_button_pressed(controller --[[ integer ]], button --[[ integer ]])"
        ],
        "description": "CORE::IS_BUTTON_PRESSED (0x7BCB3F15) function."
    },
    "core.is_button_released": {
        "prefix": [
            "core.is_button_released",
            "is_button_released"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_button_released(controller --[[ integer ]], button --[[ integer ]], unk1 --[[ integer ]], unk0 --[[ integer ]])"
        ],
        "description": "CORE::IS_BUTTON_RELEASED (0xB04EB731) function."
    },
    "core.get_analog_button_value": {
        "prefix": [
            "core.get_analog_button_value",
            "get_analog_button_value"
        ],
        "body": [
            "local result --[[ number ]] = core.get_analog_button_value(controller --[[ integer ]], analog --[[ integer ]], unk1 --[[ boolean ]])"
        ],
        "description": "CORE::GET_ANALOG_BUTTON_VALUE (0x23C9C74A) function."
    },
    "core.is_digital_action_down": {
        "prefix": [
            "core.is_digital_action_down",
            "is_digital_action_down"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_digital_action_down(actionname --[[ string ]], unk0 --[[ boolean ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::IS_DIGITAL_ACTION_DOWN (0x62C5047) function."
    },
    "core.is_digital_action_pressed": {
        "prefix": [
            "core.is_digital_action_pressed",
            "is_digital_action_pressed"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_digital_action_pressed(actionname --[[ string ]], unk0 --[[ boolean ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::IS_DIGITAL_ACTION_PRESSED (0xDA674AE0) function."
    },
    "core.is_digital_action_released": {
        "prefix": [
            "core.is_digital_action_released",
            "is_digital_action_released"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_digital_action_released(actionname --[[ string ]], unk0 --[[ boolean ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::IS_DIGITAL_ACTION_RELEASED (0x973F30EE) function."
    },
    "core.get_analogue_action": {
        "prefix": [
            "core.get_analogue_action",
            "get_analogue_action"
        ],
        "body": [
            "local result --[[ number ]] = core.get_analogue_action(actionname --[[ string ]], unk0 --[[ boolean ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::GET_ANALOGUE_ACTION (0xC1F9AC6B) function."
    },
    "core._0x4586516d": {
        "prefix": [
            "core._0x4586516d",
            "_0x4586516d"
        ],
        "body": [
            "local result --[[ integer ]] = core._0x4586516d(unk0 --[[ integer ]])"
        ],
        "description": "CORE::_0x4586516D (0x4586516D) function."
    },
    "core._0x7e452200": {
        "prefix": [
            "core._0x7e452200",
            "_0x7e452200"
        ],
        "body": [
            "local result --[[ integer ]] = core._0x7e452200(unk0 --[[ integer ]])"
        ],
        "description": "CORE::_0x7E452200 (0x7E452200) function."
    },
    "core.get_stick_x": {
        "prefix": [
            "core.get_stick_x",
            "get_stick_x"
        ],
        "body": [
            "local result --[[ number ]] = core.get_stick_x(controller --[[ integer ]], isrightstick --[[ boolean ]], unk0 --[[ integer ]])"
        ],
        "description": "CORE::GET_STICK_X (0x9AAF7E28) function."
    },
    "core.get_stick_y": {
        "prefix": [
            "core.get_stick_y",
            "get_stick_y"
        ],
        "body": [
            "local result --[[ number ]] = core.get_stick_y(controller --[[ integer ]], isrightstick --[[ boolean ]], unk0 --[[ integer ]])"
        ],
        "description": "CORE::GET_STICK_Y (0x7C6D41A4) function."
    },
    "core.reset_time_since_last_input": {
        "prefix": [
            "core.reset_time_since_last_input",
            "reset_time_since_last_input"
        ],
        "body": [
            "core.reset_time_since_last_input(unk0 --[[ integer ]])"
        ],
        "description": "CORE::RESET_TIME_SINCE_LAST_INPUT (0x52B2F3F0) function."
    },
    "core.get_time_since_last_input": {
        "prefix": [
            "core.get_time_since_last_input",
            "get_time_since_last_input"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_time_since_last_input(unk0 --[[ integer ]])"
        ],
        "description": "CORE::GET_TIME_SINCE_LAST_INPUT (0xD4DEBC08) function."
    },
    "core.get_time_since_last_movestick_input": {
        "prefix": [
            "core.get_time_since_last_movestick_input",
            "get_time_since_last_movestick_input"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_time_since_last_movestick_input(unk0 --[[ integer ]])"
        ],
        "description": "CORE::GET_TIME_SINCE_LAST_MOVESTICK_INPUT (0xBEC2871A) function."
    },
    "core.get_time_since_last_button_input": {
        "prefix": [
            "core.get_time_since_last_button_input",
            "get_time_since_last_button_input"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_time_since_last_button_input(unk0 --[[ integer ]])"
        ],
        "description": "CORE::GET_TIME_SINCE_LAST_BUTTON_INPUT (0xEF4F4F20) function."
    },
    "core.is_right_mouse_down": {
        "prefix": [
            "core.is_right_mouse_down",
            "is_right_mouse_down"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_right_mouse_down()"
        ],
        "description": "CORE::IS_RIGHT_MOUSE_DOWN (0x5598C970) function."
    },
    "core.is_right_mouse_pressed": {
        "prefix": [
            "core.is_right_mouse_pressed",
            "is_right_mouse_pressed"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_right_mouse_pressed()"
        ],
        "description": "CORE::IS_RIGHT_MOUSE_PRESSED (0xDC4B85A8) function."
    },
    "core.is_right_mouse_released": {
        "prefix": [
            "core.is_right_mouse_released",
            "is_right_mouse_released"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_right_mouse_released()"
        ],
        "description": "CORE::IS_RIGHT_MOUSE_RELEASED (0xB59B352A) function."
    },
    "core.is_left_mouse_down": {
        "prefix": [
            "core.is_left_mouse_down",
            "is_left_mouse_down"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_left_mouse_down()"
        ],
        "description": "CORE::IS_LEFT_MOUSE_DOWN (0x5AC5CE22) function."
    },
    "core.is_left_mouse_pressed": {
        "prefix": [
            "core.is_left_mouse_pressed",
            "is_left_mouse_pressed"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_left_mouse_pressed()"
        ],
        "description": "CORE::IS_LEFT_MOUSE_PRESSED (0x7D4535A1) function."
    },
    "core.get_mouse_axis_x": {
        "prefix": [
            "core.get_mouse_axis_x",
            "get_mouse_axis_x"
        ],
        "body": [
            "local result --[[ number ]] = core.get_mouse_axis_x(unk --[[ integer ]])"
        ],
        "description": "CORE::GET_MOUSE_AXIS_X (0x55ADBA8B) function."
    },
    "core.get_mouse_axis_y": {
        "prefix": [
            "core.get_mouse_axis_y",
            "get_mouse_axis_y"
        ],
        "body": [
            "local result --[[ number ]] = core.get_mouse_axis_y(unk --[[ integer ]])"
        ],
        "description": "CORE::GET_MOUSE_AXIS_Y (0x455A19E4) function."
    },
    "core.get_mouse_dx": {
        "prefix": [
            "core.get_mouse_dx",
            "get_mouse_dx"
        ],
        "body": [
            "local result --[[ number ]] = core.get_mouse_dx()"
        ],
        "description": "CORE::GET_MOUSE_DX (0x88F07597) function."
    },
    "core.get_mouse_dy": {
        "prefix": [
            "core.get_mouse_dy",
            "get_mouse_dy"
        ],
        "body": [
            "local result --[[ number ]] = core.get_mouse_dy()"
        ],
        "description": "CORE::GET_MOUSE_DY (0x3A62D87D) function."
    },
    "core.get_mouse_sensitivity": {
        "prefix": [
            "core.get_mouse_sensitivity",
            "get_mouse_sensitivity"
        ],
        "body": [
            "local result --[[ number ]] = core.get_mouse_sensitivity()"
        ],
        "description": "CORE::GET_MOUSE_SENSITIVITY (0x5FE80264) function."
    },
    "core.debug_draw_vector": {
        "prefix": [
            "core.debug_draw_vector",
            "debug_draw_vector"
        ],
        "body": [
            "local result --[[ integer ]] = core.debug_draw_vector(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::DEBUG_DRAW_VECTOR (0xF7974EBA) function."
    },
    "core.debug_draw_line": {
        "prefix": [
            "core.debug_draw_line",
            "debug_draw_line"
        ],
        "body": [
            "core.debug_draw_line(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CORE::DEBUG_DRAW_LINE (0x7C55C775) function."
    },
    "core.debug_draw_sphere": {
        "prefix": [
            "core.debug_draw_sphere",
            "debug_draw_sphere"
        ],
        "body": [
            "local result --[[ integer ]] = core.debug_draw_sphere(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "CORE::DEBUG_DRAW_SPHERE (0x4A1BAD30) function."
    },
    "core.debug_draw_string": {
        "prefix": [
            "core.debug_draw_string",
            "debug_draw_string"
        ],
        "body": [
            "core.debug_draw_string()"
        ],
        "description": "CORE::DEBUG_DRAW_STRING (0x993E45D8) function."
    },
    "core.draw_string_current_font": {
        "prefix": [
            "core.draw_string_current_font",
            "draw_string_current_font"
        ],
        "body": [
            "core.draw_string_current_font(x --[[ number ]], y --[[ number ]], text --[[ string ]], r --[[ number ]], g --[[ number ]], b --[[ number ]], a --[[ number ]])"
        ],
        "description": "CORE::DRAW_STRING_CURRENT_FONT (0x3C2D93C1) function."
    },
    "core.set_debug_fade_state": {
        "prefix": [
            "core.set_debug_fade_state",
            "set_debug_fade_state"
        ],
        "body": [
            "core.set_debug_fade_state(unk0 --[[ integer ]])"
        ],
        "description": "CORE::SET_DEBUG_FADE_STATE (0x73BE57AF) function."
    },
    "core._0xd1d88eb8": {
        "prefix": [
            "core._0xd1d88eb8",
            "_0xd1d88eb8"
        ],
        "body": [
            "local result --[[ integer ]] = core._0xd1d88eb8(unk0 --[[ integer ]])"
        ],
        "description": "CORE::_0xD1D88EB8 (0xD1D88EB8) function."
    },
    "core._0x21e19cd5": {
        "prefix": [
            "core._0x21e19cd5",
            "_0x21e19cd5"
        ],
        "body": [
            "local result --[[ integer ]] = core._0x21e19cd5(unk0 --[[ integer ]])"
        ],
        "description": "CORE::_0x21E19CD5 (0x21E19CD5) function."
    },
    "core._0x1b6fe39b": {
        "prefix": [
            "core._0x1b6fe39b",
            "_0x1b6fe39b"
        ],
        "body": [
            "local result --[[ integer ]] = core._0x1b6fe39b(unk0 --[[ integer ]])"
        ],
        "description": "CORE::_0x1B6FE39B (0x1B6FE39B) function."
    },
    "core._0xaaebac28": {
        "prefix": [
            "core._0xaaebac28",
            "_0xaaebac28"
        ],
        "body": [
            "local result --[[ integer ]] = core._0xaaebac28(unk0 --[[ integer ]])"
        ],
        "description": "CORE::_0xAAEBAC28 (0xAAEBAC28) function."
    },
    "core.script_gettestregion": {
        "prefix": [
            "core.script_gettestregion",
            "script_gettestregion"
        ],
        "body": [
            "local result --[[ integer ]] = core.script_gettestregion()"
        ],
        "description": "CORE::SCRIPT_GETTESTREGION (0x913A5CB6) function."
    },
    "core.script_gettestmission": {
        "prefix": [
            "core.script_gettestmission",
            "script_gettestmission"
        ],
        "body": [
            "local result --[[ integer ]] = core.script_gettestmission()"
        ],
        "description": "CORE::SCRIPT_GETTESTMISSION (0xD34F7B3A) function."
    },
    "core.script_gettestscript": {
        "prefix": [
            "core.script_gettestscript",
            "script_gettestscript"
        ],
        "body": [
            "local result --[[ integer ]] = core.script_gettestscript()"
        ],
        "description": "CORE::SCRIPT_GETTESTSCRIPT (0x191658C0) function."
    },
    "core.script_gettestscriptcontinuemark": {
        "prefix": [
            "core.script_gettestscriptcontinuemark",
            "script_gettestscriptcontinuemark"
        ],
        "body": [
            "local result --[[ integer ]] = core.script_gettestscriptcontinuemark()"
        ],
        "description": "CORE::SCRIPT_GETTESTSCRIPTCONTINUEMARK (0x95132289) function."
    },
    "core.script_settestscriptcontinuemark": {
        "prefix": [
            "core.script_settestscriptcontinuemark",
            "script_settestscriptcontinuemark"
        ],
        "body": [
            "core.script_settestscriptcontinuemark(unk0 --[[ integer ]])"
        ],
        "description": "CORE::SCRIPT_SETTESTSCRIPTCONTINUEMARK (0xEB8325B3) function."
    },
    "core.script_wantautomation": {
        "prefix": [
            "core.script_wantautomation",
            "script_wantautomation"
        ],
        "body": [
            "local result --[[ integer ]] = core.script_wantautomation()"
        ],
        "description": "CORE::SCRIPT_WANTAUTOMATION (0xD3FE15FB) function."
    },
    "core.script_gettesttype": {
        "prefix": [
            "core.script_gettesttype",
            "script_gettesttype"
        ],
        "body": [
            "local result --[[ integer ]] = core.script_gettesttype()"
        ],
        "description": "CORE::SCRIPT_GETTESTTYPE (0x32D1DEB0) function."
    },
    "core.retrieve_game_state": {
        "prefix": [
            "core.retrieve_game_state",
            "retrieve_game_state"
        ],
        "body": [
            "core.retrieve_game_state(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CORE::RETRIEVE_GAME_STATE (0x48FBB83D) function."
    },
    "core.store_game_state": {
        "prefix": [
            "core.store_game_state",
            "store_game_state"
        ],
        "body": [
            "core.store_game_state(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CORE::STORE_GAME_STATE (0x800D6D89) function."
    },
    "core.reset_stored_data": {
        "prefix": [
            "core.reset_stored_data",
            "reset_stored_data"
        ],
        "body": [
            "core.reset_stored_data()"
        ],
        "description": "CORE::RESET_STORED_DATA (0xE1124E00) function."
    },
    "core.reset_game": {
        "prefix": [
            "core.reset_game",
            "reset_game"
        ],
        "body": [
            "core.reset_game()"
        ],
        "description": "CORE::RESET_GAME (0x07045C4E) function."
    },
    "core.is_game_resetting": {
        "prefix": [
            "core.is_game_resetting",
            "is_game_resetting"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_game_resetting()"
        ],
        "description": "CORE::IS_GAME_RESETTING (0x3B1B6407) function."
    },
    "core._get_param_value": {
        "prefix": [
            "core._get_param_value",
            "_get_param_value"
        ],
        "body": [
            "local result --[[ string ]] = core._get_param_value(unk0 --[[ string ]], unk1 --[[ string ]])"
        ],
        "description": "CORE::_GET_PARAM_VALUE (0xC7612A79) function."
    },
    "core.get_districts_name": {
        "prefix": [
            "core.get_districts_name",
            "get_districts_name"
        ],
        "body": [
            "local result --[[ string ]] = core.get_districts_name()"
        ],
        "description": "CORE::GET_DISTRICTS_NAME (0x0B2D5E4B) function."
    },
    "core.load_game": {
        "prefix": [
            "core.load_game",
            "load_game"
        ],
        "body": [
            "local result --[[ boolean ]] = core.load_game(name --[[ string ]])"
        ],
        "description": "CORE::LOAD_GAME (0x7C5901EF) function."
    },
    "core.load_soft_save": {
        "prefix": [
            "core.load_soft_save",
            "load_soft_save"
        ],
        "body": [
            "local result --[[ boolean ]] = core.load_soft_save(slot --[[ integer ]])"
        ],
        "description": "CORE::LOAD_SOFT_SAVE (0x0234F932) function."
    },
    "core.save_game": {
        "prefix": [
            "core.save_game",
            "save_game"
        ],
        "body": [
            "local result --[[ boolean ]] = core.save_game(name --[[ string ]])"
        ],
        "description": "CORE::SAVE_GAME (0x09C5D8D5) function."
    },
    "core.save_soft_save": {
        "prefix": [
            "core.save_soft_save",
            "save_soft_save"
        ],
        "body": [
            "core.save_soft_save(slot --[[ integer ]])"
        ],
        "description": "CORE::SAVE_SOFT_SAVE (0x1A3BAC68) function."
    },
    "core.save_manager_hard_save": {
        "prefix": [
            "core.save_manager_hard_save",
            "save_manager_hard_save"
        ],
        "body": [
            "core.save_manager_hard_save(name --[[ string ]])"
        ],
        "description": "CORE::SAVE_MANAGER_HARD_SAVE (0xED40F27D) function."
    },
    "core.save_manager_hard_load": {
        "prefix": [
            "core.save_manager_hard_load",
            "save_manager_hard_load"
        ],
        "body": [
            "local result --[[ boolean ]] = core.save_manager_hard_load(name --[[ string ]])"
        ],
        "description": "CORE::SAVE_MANAGER_HARD_LOAD (0x8C710D3E) function."
    },
    "core.save_manager_create_save_display_name": {
        "prefix": [
            "core.save_manager_create_save_display_name",
            "save_manager_create_save_display_name"
        ],
        "body": [
            "core.save_manager_create_save_display_name(displayname --[[ string ]])"
        ],
        "description": "CORE::SAVE_MANAGER_CREATE_SAVE_DISPLAY_NAME (0x17F34613) function."
    },
    "core.save_manager_register_data": {
        "prefix": [
            "core.save_manager_register_data",
            "save_manager_register_data"
        ],
        "body": [
            "core.save_manager_register_data(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CORE::SAVE_MANAGER_REGISTER_DATA (0x20CE8AA8) function."
    },
    "core.save_manager_set_save_version": {
        "prefix": [
            "core.save_manager_set_save_version",
            "save_manager_set_save_version"
        ],
        "body": [
            "local result --[[ string ]] = core.save_manager_set_save_version(unk0 --[[ string ]])"
        ],
        "description": "CORE::SAVE_MANAGER_SET_SAVE_VERSION (0x8E867DDD) function."
    },
    "core.save_manager_set_save_version_for_type": {
        "prefix": [
            "core.save_manager_set_save_version_for_type",
            "save_manager_set_save_version_for_type"
        ],
        "body": [
            "local result --[[ string ]] = core.save_manager_set_save_version_for_type(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::SAVE_MANAGER_SET_SAVE_VERSION_FOR_TYPE (0x6E79F939) function."
    },
    "core.save_manager_create_save_file": {
        "prefix": [
            "core.save_manager_create_save_file",
            "save_manager_create_save_file"
        ],
        "body": [
            "core.save_manager_create_save_file(unk0 --[[ integer ]], unk1 --[[ string ]], unk2 --[[ string ]])"
        ],
        "description": "CORE::SAVE_MANAGER_CREATE_SAVE_FILE (0x3E647734) function."
    },
    "core.save_manager_register_stats": {
        "prefix": [
            "core.save_manager_register_stats",
            "save_manager_register_stats"
        ],
        "body": [
            "core.save_manager_register_stats(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CORE::SAVE_MANAGER_REGISTER_STATS (0xE8637D2B) function."
    },
    "core.save_manager_register_profile_stats": {
        "prefix": [
            "core.save_manager_register_profile_stats",
            "save_manager_register_profile_stats"
        ],
        "body": [
            "core.save_manager_register_profile_stats(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::SAVE_MANAGER_REGISTER_PROFILE_STATS (0x6D59A25F) function."
    },
    "core.save_manager_is_saving_disabled": {
        "prefix": [
            "core.save_manager_is_saving_disabled",
            "save_manager_is_saving_disabled"
        ],
        "body": [
            "local result --[[ boolean ]] = core.save_manager_is_saving_disabled()"
        ],
        "description": "CORE::SAVE_MANAGER_IS_SAVING_DISABLED (0x1D177160) function."
    },
    "core.save_manager_is_sp_saving_disabled": {
        "prefix": [
            "core.save_manager_is_sp_saving_disabled",
            "save_manager_is_sp_saving_disabled"
        ],
        "body": [
            "local result --[[ boolean ]] = core.save_manager_is_sp_saving_disabled()"
        ],
        "description": "CORE::SAVE_MANAGER_IS_SP_SAVING_DISABLED (0x1ADA1769) function."
    },
    "core.get_extras_file_name": {
        "prefix": [
            "core.get_extras_file_name",
            "get_extras_file_name"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_extras_file_name(unk0 --[[ integer ]])"
        ],
        "description": "CORE::GET_EXTRAS_FILE_NAME (0x580D21D9) function."
    },
    "core.does_file_exist": {
        "prefix": [
            "core.does_file_exist",
            "does_file_exist"
        ],
        "body": [
            "local result --[[ boolean ]] = core.does_file_exist(path --[[ string ]])"
        ],
        "description": "CORE::DOES_FILE_EXIST (0xAABE1330) function."
    },
    "core.write_to_file": {
        "prefix": [
            "core.write_to_file",
            "write_to_file"
        ],
        "body": [
            "core.write_to_file(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CORE::WRITE_TO_FILE (0xD44F7102) function."
    },
    "core.is_dev_build": {
        "prefix": [
            "core.is_dev_build",
            "is_dev_build"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_dev_build()"
        ],
        "description": "CORE::IS_DEV_BUILD (0x6D9AA768) function."
    },
    "core.is_ps3": {
        "prefix": [
            "core.is_ps3",
            "is_ps3"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_ps3()"
        ],
        "description": "CORE::IS_PS3 (0xA369B36F) function."
    },
    "core.is_ps4": {
        "prefix": [
            "core.is_ps4",
            "is_ps4"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_ps4()"
        ],
        "description": "CORE::IS_PS4 (0x99989FCD) function."
    },
    "core.is_switch": {
        "prefix": [
            "core.is_switch",
            "is_switch"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_switch()"
        ],
        "description": "CORE::IS_SWITCH (0x92E03425) function."
    },
    "core.is_30fps": {
        "prefix": [
            "core.is_30fps",
            "is_30fps"
        ],
        "body": [
            "local result --[[ integer ]] = core.is_30fps(unk0 --[[ integer ]])"
        ],
        "description": "CORE::IS_30FPS (0xFC7766A0) function."
    },
    "core.is_pc": {
        "prefix": [
            "core.is_pc",
            "is_pc"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_pc()"
        ],
        "description": "CORE::IS_PC (0x16C54BC5) function."
    },
    "core._are_bumper_buttons_swapped": {
        "prefix": [
            "core._are_bumper_buttons_swapped",
            "_are_bumper_buttons_swapped"
        ],
        "body": [
            "local result --[[ boolean ]] = core._are_bumper_buttons_swapped()"
        ],
        "description": "CORE::_ARE_BUMPER_BUTTONS_SWAPPED (0xB427CB25) function."
    },
    "core.is_disk_cache_primed": {
        "prefix": [
            "core.is_disk_cache_primed",
            "is_disk_cache_primed"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_disk_cache_primed()"
        ],
        "description": "CORE::IS_DISK_CACHE_PRIMED (0x4BA92498) function."
    },
    "core.is_using_keyboard_and_mouse": {
        "prefix": [
            "core.is_using_keyboard_and_mouse",
            "is_using_keyboard_and_mouse"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_using_keyboard_and_mouse(unk0 --[[ integer ]])"
        ],
        "description": "CORE::IS_USING_KEYBOARD_AND_MOUSE (0xFB46B5D6) function."
    },
    "core.get_last_mouse_movement": {
        "prefix": [
            "core.get_last_mouse_movement",
            "get_last_mouse_movement"
        ],
        "body": [
            "local result --[[ number ]] = core.get_last_mouse_movement()"
        ],
        "description": "CORE::GET_LAST_MOUSE_MOVEMENT (0xFDDB1BFA) function."
    },
    "core.is_player_signed_in": {
        "prefix": [
            "core.is_player_signed_in",
            "is_player_signed_in"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_player_signed_in()"
        ],
        "description": "CORE::IS_PLAYER_SIGNED_IN (0xC3C0F1F2) function."
    },
    "core.get_local_player_name": {
        "prefix": [
            "core.get_local_player_name",
            "get_local_player_name"
        ],
        "body": [
            "local result --[[ string ]] = core.get_local_player_name()"
        ],
        "description": "CORE::GET_LOCAL_PLAYER_NAME (0xA183D927) function."
    },
    "core.get_num_world_cameras": {
        "prefix": [
            "core.get_num_world_cameras",
            "get_num_world_cameras"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_num_world_cameras()"
        ],
        "description": "CORE::GET_NUM_WORLD_CAMERAS (0x8BD88B43) function."
    },
    "core.get_world_camera_at_index": {
        "prefix": [
            "core.get_world_camera_at_index",
            "get_world_camera_at_index"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_world_camera_at_index(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CORE::GET_WORLD_CAMERA_AT_INDEX (0x1C7C0F86) function."
    },
    "core.get_closest_world_camera": {
        "prefix": [
            "core.get_closest_world_camera",
            "get_closest_world_camera"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_closest_world_camera(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CORE::GET_CLOSEST_WORLD_CAMERA (0x836F42DA) function."
    },
    "core.pause_game": {
        "prefix": [
            "core.pause_game",
            "pause_game"
        ],
        "body": [
            "core.pause_game(unk0 --[[ integer ]])"
        ],
        "description": "CORE::PAUSE_GAME (0x6F32A4E2) function."
    },
    "core.unpause_game": {
        "prefix": [
            "core.unpause_game",
            "unpause_game"
        ],
        "body": [
            "core.unpause_game()"
        ],
        "description": "CORE::UNPAUSE_GAME (0x0BF2CD82) function."
    },
    "core.is_game_paused": {
        "prefix": [
            "core.is_game_paused",
            "is_game_paused"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_game_paused()"
        ],
        "description": "CORE::IS_GAME_PAUSED (0x57246C02) function."
    },
    "core.set_script_cutscene_active": {
        "prefix": [
            "core.set_script_cutscene_active",
            "set_script_cutscene_active"
        ],
        "body": [
            "core.set_script_cutscene_active(unk0 --[[ integer ]])"
        ],
        "description": "CORE::SET_SCRIPT_CUTSCENE_ACTIVE (0xF0DDF83D) function."
    },
    "core.set_tree_cost_modifier": {
        "prefix": [
            "core.set_tree_cost_modifier",
            "set_tree_cost_modifier"
        ],
        "body": [
            "local result --[[ integer ]] = core.set_tree_cost_modifier(unk0 --[[ integer ]])"
        ],
        "description": "CORE::SET_TREE_COST_MODIFIER (0x81A7CDB6) function."
    },
    "core.set_uses_quad_ik_fix": {
        "prefix": [
            "core.set_uses_quad_ik_fix",
            "set_uses_quad_ik_fix"
        ],
        "body": [
            "local result --[[ integer ]] = core.set_uses_quad_ik_fix(unk0 --[[ integer ]])"
        ],
        "description": "CORE::SET_USES_QUAD_IK_FIX (0x2A04518E) function."
    },
    "core.set_visibility_fov_clamp": {
        "prefix": [
            "core.set_visibility_fov_clamp",
            "set_visibility_fov_clamp"
        ],
        "body": [
            "local result --[[ integer ]] = core.set_visibility_fov_clamp(unk0 --[[ integer ]])"
        ],
        "description": "CORE::SET_VISIBILITY_FOV_CLAMP (0x4FC61E5F) function."
    },
    "core.set_mission_info": {
        "prefix": [
            "core.set_mission_info",
            "set_mission_info"
        ],
        "body": [
            "core.set_mission_info(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::SET_MISSION_INFO (0x3B417D4E) function."
    },
    "core.clear_mission_info": {
        "prefix": [
            "core.clear_mission_info",
            "clear_mission_info"
        ],
        "body": [
            "core.clear_mission_info()"
        ],
        "description": "CORE::CLEAR_MISSION_INFO (0x02092A6E) function."
    },
    "core.get_commandline_start_pos": {
        "prefix": [
            "core.get_commandline_start_pos",
            "get_commandline_start_pos"
        ],
        "body": [
            "local result --[[ string ]] = core.get_commandline_start_pos(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CORE::GET_COMMANDLINE_START_POS (0x6CD7DCE1) function."
    },
    "core.set_start_pos": {
        "prefix": [
            "core.set_start_pos",
            "set_start_pos"
        ],
        "body": [
            "core.set_start_pos(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CORE::SET_START_POS (0x0CB93120) function."
    },
    "core.is_startpos_in_commandline": {
        "prefix": [
            "core.is_startpos_in_commandline",
            "is_startpos_in_commandline"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_startpos_in_commandline()"
        ],
        "description": "CORE::IS_STARTPOS_IN_COMMANDLINE (0x814D97E8) function."
    },
    "core._was_last_reset_for_multiplayer": {
        "prefix": [
            "core._was_last_reset_for_multiplayer",
            "_was_last_reset_for_multiplayer"
        ],
        "body": [
            "local result --[[ boolean ]] = core._was_last_reset_for_multiplayer()"
        ],
        "description": "CORE::_WAS_LAST_RESET_FOR_MULTIPLAYER (0x3B004817) function."
    },
    "core.script_done_loading": {
        "prefix": [
            "core.script_done_loading",
            "script_done_loading"
        ],
        "body": [
            "core.script_done_loading()"
        ],
        "description": "CORE::SCRIPT_DONE_LOADING (0x5401F0CA) function."
    },
    "core.launch_new_script": {
        "prefix": [
            "core.launch_new_script",
            "launch_new_script"
        ],
        "body": [
            "local result --[[ boolean ]] = core.launch_new_script(scriptpath --[[ string ]], unk0 --[[ integer ]])"
        ],
        "description": "CORE::LAUNCH_NEW_SCRIPT (0x85A30503) function."
    },
    "core.launch_new_script_with_args": {
        "prefix": [
            "core.launch_new_script_with_args",
            "launch_new_script_with_args"
        ],
        "body": [
            "local result --[[ integer ]] = core.launch_new_script_with_args(scriptpath --[[ string ]], args --[[ integer ]], argcount --[[ integer ]], stacksize --[[ integer ]])"
        ],
        "description": "CORE::LAUNCH_NEW_SCRIPT_WITH_ARGS (0xA602F586) function."
    },
    "core.is_launch_retail": {
        "prefix": [
            "core.is_launch_retail",
            "is_launch_retail"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_launch_retail()"
        ],
        "description": "CORE::IS_LAUNCH_RETAIL (0x7CE2C2E1) function."
    },
    "core.is_simulate_start_press": {
        "prefix": [
            "core.is_simulate_start_press",
            "is_simulate_start_press"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_simulate_start_press()"
        ],
        "description": "CORE::IS_SIMULATE_START_PRESS (0xD8E31D42) function."
    },
    "core.is_simulate_start_multiplayer": {
        "prefix": [
            "core.is_simulate_start_multiplayer",
            "is_simulate_start_multiplayer"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_simulate_start_multiplayer()"
        ],
        "description": "CORE::IS_SIMULATE_START_MULTIPLAYER (0x9A73C2CD) function."
    },
    "core.is_d11_cutscene_hack": {
        "prefix": [
            "core.is_d11_cutscene_hack",
            "is_d11_cutscene_hack"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_d11_cutscene_hack()"
        ],
        "description": "CORE::IS_D11_CUTSCENE_HACK (0xD90DB78D) function."
    },
    "core.is_display_widescreen": {
        "prefix": [
            "core.is_display_widescreen",
            "is_display_widescreen"
        ],
        "body": [
            "local result --[[ boolean ]] = core.is_display_widescreen()"
        ],
        "description": "CORE::IS_DISPLAY_WIDESCREEN (0x554FC5E0) function."
    },
    "core.get_exp_mode_prompt_state": {
        "prefix": [
            "core.get_exp_mode_prompt_state",
            "get_exp_mode_prompt_state"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_exp_mode_prompt_state()"
        ],
        "description": "CORE::GET_EXP_MODE_PROMPT_STATE (0x6226328F) function."
    },
    "core.set_exp_mode_prompt_state": {
        "prefix": [
            "core.set_exp_mode_prompt_state",
            "set_exp_mode_prompt_state"
        ],
        "body": [
            "core.set_exp_mode_prompt_state(unk0 --[[ integer ]])"
        ],
        "description": "CORE::SET_EXP_MODE_PROMPT_STATE (0x59F98CA9) function."
    },
    "core.get_game_edition": {
        "prefix": [
            "core.get_game_edition",
            "get_game_edition"
        ],
        "body": [
            "local result --[[ integer ]] = core.get_game_edition()"
        ],
        "description": "CORE::GET_GAME_EDITION (0xB5401D4A) function."
    },
    "cover.find_nearest_cover_location": {
        "prefix": [
            "cover.find_nearest_cover_location",
            "find_nearest_cover_location"
        ],
        "body": [
            "local result --[[ integer ]] = cover.find_nearest_cover_location(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "COVER::FIND_NEAREST_COVER_LOCATION (0x50AE988A) function."
    },
    "cover.find_cover_locations_in_volume": {
        "prefix": [
            "cover.find_cover_locations_in_volume",
            "find_cover_locations_in_volume"
        ],
        "body": [
            "local result --[[ integer ]] = cover.find_cover_locations_in_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "COVER::FIND_COVER_LOCATIONS_IN_VOLUME (0x9265B24B) function."
    },
    "cover.get_cover_location_base_position": {
        "prefix": [
            "cover.get_cover_location_base_position",
            "get_cover_location_base_position"
        ],
        "body": [
            "local result --[[ integer ]] = cover.get_cover_location_base_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "COVER::GET_COVER_LOCATION_BASE_POSITION (0x8DFF31DF) function."
    },
    "cover.get_cover_location_direction": {
        "prefix": [
            "cover.get_cover_location_direction",
            "get_cover_location_direction"
        ],
        "body": [
            "local result --[[ integer ]] = cover.get_cover_location_direction(unk0 --[[ integer ]])"
        ],
        "description": "COVER::GET_COVER_LOCATION_DIRECTION (0x620178B3) function."
    },
    "cover.get_cover_location_position": {
        "prefix": [
            "cover.get_cover_location_position",
            "get_cover_location_position"
        ],
        "body": [
            "local result --[[ integer ]] = cover.get_cover_location_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "COVER::GET_COVER_LOCATION_POSITION (0xA7F84C2F) function."
    },
    "cover.is_cover_location_valid": {
        "prefix": [
            "cover.is_cover_location_valid",
            "is_cover_location_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = cover.is_cover_location_valid(unk0 --[[ integer ]])"
        ],
        "description": "COVER::IS_COVER_LOCATION_VALID (0x90AD2C2D) function."
    },
    "cover.add_ai_coverset_for_propset": {
        "prefix": [
            "cover.add_ai_coverset_for_propset",
            "add_ai_coverset_for_propset"
        ],
        "body": [
            "local result --[[ integer ]] = cover.add_ai_coverset_for_propset(unk0 --[[ integer ]])"
        ],
        "description": "COVER::ADD_AI_COVERSET_FOR_PROPSET (0x6BA6BC9B) function."
    },
    "curves.enable_curve": {
        "prefix": [
            "curves.enable_curve",
            "enable_curve"
        ],
        "body": [
            "local result --[[ integer ]] = curves.enable_curve(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CURVES::ENABLE_CURVE (0x0C46DAB3) function."
    },
    "curves.are_curves_in_range": {
        "prefix": [
            "curves.are_curves_in_range",
            "are_curves_in_range"
        ],
        "body": [
            "local result --[[ integer ]] = curves.are_curves_in_range(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CURVES::ARE_CURVES_IN_RANGE (0xA5FF6076) function."
    },
    "curves.start_curve_query": {
        "prefix": [
            "curves.start_curve_query",
            "start_curve_query"
        ],
        "body": [
            "local result --[[ integer ]] = curves.start_curve_query(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "CURVES::START_CURVE_QUERY (0x0E018669) function."
    },
    "curves.get_curve_by_name": {
        "prefix": [
            "curves.get_curve_by_name",
            "get_curve_by_name"
        ],
        "body": [
            "local result --[[ integer ]] = curves.get_curve_by_name(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CURVES::GET_CURVE_BY_NAME (0x8C37CA1A) function."
    },
    "curves.is_curve_query_valid": {
        "prefix": [
            "curves.is_curve_query_valid",
            "is_curve_query_valid"
        ],
        "body": [
            "local result --[[ integer ]] = curves.is_curve_query_valid(unk0 --[[ integer ]])"
        ],
        "description": "CURVES::IS_CURVE_QUERY_VALID (0x9398BE8F) function."
    },
    "curves.get_num_points_in_curve_query": {
        "prefix": [
            "curves.get_num_points_in_curve_query",
            "get_num_points_in_curve_query"
        ],
        "body": [
            "local result --[[ integer ]] = curves.get_num_points_in_curve_query(unk0 --[[ integer ]])"
        ],
        "description": "CURVES::GET_NUM_POINTS_IN_CURVE_QUERY (0x8E551A7C) function."
    },
    "curves.get_num_curves_in_curve_query": {
        "prefix": [
            "curves.get_num_curves_in_curve_query",
            "get_num_curves_in_curve_query"
        ],
        "body": [
            "local result --[[ integer ]] = curves.get_num_curves_in_curve_query(unk0 --[[ integer ]])"
        ],
        "description": "CURVES::GET_NUM_CURVES_IN_CURVE_QUERY (0xBADCF1E9) function."
    },
    "curves.get_point_from_curve_query": {
        "prefix": [
            "curves.get_point_from_curve_query",
            "get_point_from_curve_query"
        ],
        "body": [
            "local result --[[ integer ]] = curves.get_point_from_curve_query(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CURVES::GET_POINT_FROM_CURVE_QUERY (0xE531DCAE) function."
    },
    "curves.get_curve_from_curve_index_in_curve_query": {
        "prefix": [
            "curves.get_curve_from_curve_index_in_curve_query",
            "get_curve_from_curve_index_in_curve_query"
        ],
        "body": [
            "local result --[[ integer ]] = curves.get_curve_from_curve_index_in_curve_query(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CURVES::GET_CURVE_FROM_CURVE_INDEX_IN_CURVE_QUERY (0xB4D1D8A3) function."
    },
    "curves.get_curve_from_point_index_in_curve_query": {
        "prefix": [
            "curves.get_curve_from_point_index_in_curve_query",
            "get_curve_from_point_index_in_curve_query"
        ],
        "body": [
            "local result --[[ integer ]] = curves.get_curve_from_point_index_in_curve_query(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CURVES::GET_CURVE_FROM_POINT_INDEX_IN_CURVE_QUERY (0xBD4E48A6) function."
    },
    "curves.get_closest_point_to_curve_curve_query": {
        "prefix": [
            "curves.get_closest_point_to_curve_curve_query",
            "get_closest_point_to_curve_curve_query"
        ],
        "body": [
            "local result --[[ integer ]] = curves.get_closest_point_to_curve_curve_query(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CURVES::GET_CLOSEST_POINT_TO_CURVE_CURVE_QUERY (0x90B514B9) function."
    },
    "curves.remove_curve_from_curve_query_using_curve": {
        "prefix": [
            "curves.remove_curve_from_curve_query_using_curve",
            "remove_curve_from_curve_query_using_curve"
        ],
        "body": [
            "curves.remove_curve_from_curve_query_using_curve(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CURVES::REMOVE_CURVE_FROM_CURVE_QUERY_USING_CURVE (0x4F8FAF8F) function."
    },
    "curves._travel_distance_on_curve_from_curve_point": {
        "prefix": [
            "curves._travel_distance_on_curve_from_curve_point",
            "_travel_distance_on_curve_from_curve_point"
        ],
        "body": [
            "curves._travel_distance_on_curve_from_curve_point(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CURVES::_TRAVEL_DISTANCE_ON_CURVE_FROM_CURVE_POINT (0x04D89A35) function."
    },
    "curves._travel_distance_on_curve_from_curve_point_2": {
        "prefix": [
            "curves._travel_distance_on_curve_from_curve_point_2",
            "_travel_distance_on_curve_from_curve_point_2"
        ],
        "body": [
            "curves._travel_distance_on_curve_from_curve_point_2(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CURVES::_TRAVEL_DISTANCE_ON_CURVE_FROM_CURVE_POINT_2 (0x19D652F9) function."
    },
    "curves.curve_calculate_distance_by_step_size": {
        "prefix": [
            "curves.curve_calculate_distance_by_step_size",
            "curve_calculate_distance_by_step_size"
        ],
        "body": [
            "local result --[[ integer ]] = curves.curve_calculate_distance_by_step_size(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CURVES::CURVE_CALCULATE_DISTANCE_BY_STEP_SIZE (0x39DA0B3A) function."
    },
    "curves.curve_calculate_distance_by_forced_component_subdivision_bounds": {
        "prefix": [
            "curves.curve_calculate_distance_by_forced_component_subdivision_bounds",
            "curve_calculate_distance_by_forced_component_subdivision_bounds"
        ],
        "body": [
            "local result --[[ integer ]] = curves.curve_calculate_distance_by_forced_component_subdivision_bounds(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CURVES::CURVE_CALCULATE_DISTANCE_BY_FORCED_COMPONENT_SUBDIVISION_BOUNDS (0x49D2C1DA) function."
    },
    "curves.release_curve": {
        "prefix": [
            "curves.release_curve",
            "release_curve"
        ],
        "body": [
            "curves.release_curve(unk0 --[[ integer ]])"
        ],
        "description": "CURVES::RELEASE_CURVE (0x8270CE81) function."
    },
    "curves.get_curve_type": {
        "prefix": [
            "curves.get_curve_type",
            "get_curve_type"
        ],
        "body": [
            "local result --[[ integer ]] = curves.get_curve_type(unk0 --[[ integer ]])"
        ],
        "description": "CURVES::GET_CURVE_TYPE (0xE1007398) function."
    },
    "curves.get_curve_name": {
        "prefix": [
            "curves.get_curve_name",
            "get_curve_name"
        ],
        "body": [
            "local result --[[ integer ]] = curves.get_curve_name(unk0 --[[ integer ]])"
        ],
        "description": "CURVES::GET_CURVE_NAME (0x9A933060) function."
    },
    "curves.get_curve_point": {
        "prefix": [
            "curves.get_curve_point",
            "get_curve_point"
        ],
        "body": [
            "curves.get_curve_point(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "CURVES::GET_CURVE_POINT (0x1CDF1EC4) function."
    },
    "curves.set_curve_active": {
        "prefix": [
            "curves.set_curve_active",
            "set_curve_active"
        ],
        "body": [
            "curves.set_curve_active(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CURVES::SET_CURVE_ACTIVE (0x74460602) function."
    },
    "curves.set_curve_weight": {
        "prefix": [
            "curves.set_curve_weight",
            "set_curve_weight"
        ],
        "body": [
            "curves.set_curve_weight(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CURVES::SET_CURVE_WEIGHT (0xA7BB9E5E) function."
    },
    "cutscene.cutscene_manager_does_cutscene_exist": {
        "prefix": [
            "cutscene.cutscene_manager_does_cutscene_exist",
            "cutscene_manager_does_cutscene_exist"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_does_cutscene_exist(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_DOES_CUTSCENE_EXIST (0xD89902F1) function."
    },
    "cutscene.cutscene_manager_load_cutfile": {
        "prefix": [
            "cutscene.cutscene_manager_load_cutfile",
            "cutscene_manager_load_cutfile"
        ],
        "body": [
            "cutscene.cutscene_manager_load_cutfile(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_LOAD_CUTFILE (0x99D215B4) function."
    },
    "cutscene.cutscene_manager_is_cutfile_loaded": {
        "prefix": [
            "cutscene.cutscene_manager_is_cutfile_loaded",
            "cutscene_manager_is_cutfile_loaded"
        ],
        "body": [
            "local result --[[ boolean ]] = cutscene.cutscene_manager_is_cutfile_loaded()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_IS_CUTFILE_LOADED (0xA6CFA220) function."
    },
    "cutscene.cutscene_manager_get_loaded_cutfile": {
        "prefix": [
            "cutscene.cutscene_manager_get_loaded_cutfile",
            "cutscene_manager_get_loaded_cutfile"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_loaded_cutfile()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_LOADED_CUTFILE (0x0FE90DCB) function."
    },
    "cutscene.cutscene_manager_resume_loading": {
        "prefix": [
            "cutscene.cutscene_manager_resume_loading",
            "cutscene_manager_resume_loading"
        ],
        "body": [
            "cutscene.cutscene_manager_resume_loading()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_RESUME_LOADING (0x7716B12B) function."
    },
    "cutscene.cutscene_manager_load_cutscene": {
        "prefix": [
            "cutscene.cutscene_manager_load_cutscene",
            "cutscene_manager_load_cutscene"
        ],
        "body": [
            "cutscene.cutscene_manager_load_cutscene(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_LOAD_CUTSCENE (0xFD300D15) function."
    },
    "cutscene.cutscene_manager_is_cutscene_loaded": {
        "prefix": [
            "cutscene.cutscene_manager_is_cutscene_loaded",
            "cutscene_manager_is_cutscene_loaded"
        ],
        "body": [
            "local result --[[ boolean ]] = cutscene.cutscene_manager_is_cutscene_loaded()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_IS_CUTSCENE_LOADED (0xEDF1D0B4) function."
    },
    "cutscene.cutscene_manager_unload_cutscene": {
        "prefix": [
            "cutscene.cutscene_manager_unload_cutscene",
            "cutscene_manager_unload_cutscene"
        ],
        "body": [
            "cutscene.cutscene_manager_unload_cutscene()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_UNLOAD_CUTSCENE (0xE7F781B8) function."
    },
    "cutscene.cutscene_manager_play_cutscene": {
        "prefix": [
            "cutscene.cutscene_manager_play_cutscene",
            "cutscene_manager_play_cutscene"
        ],
        "body": [
            "cutscene.cutscene_manager_play_cutscene()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_PLAY_CUTSCENE (0x98A9AC9E) function."
    },
    "cutscene.cutscene_manager_stop_cutscene": {
        "prefix": [
            "cutscene.cutscene_manager_stop_cutscene",
            "cutscene_manager_stop_cutscene"
        ],
        "body": [
            "cutscene.cutscene_manager_stop_cutscene(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_STOP_CUTSCENE (0x9E6CAD1D) function."
    },
    "cutscene.cutscene_manager_is_cutscene_playing": {
        "prefix": [
            "cutscene.cutscene_manager_is_cutscene_playing",
            "cutscene_manager_is_cutscene_playing"
        ],
        "body": [
            "local result --[[ boolean ]] = cutscene.cutscene_manager_is_cutscene_playing()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_IS_CUTSCENE_PLAYING (0xA61FA36B) function."
    },
    "cutscene.cutscene_manager_is_cutscene_finished": {
        "prefix": [
            "cutscene.cutscene_manager_is_cutscene_finished",
            "cutscene_manager_is_cutscene_finished"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_is_cutscene_finished()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_IS_CUTSCENE_FINISHED (0xDE339CE1) function."
    },
    "cutscene.cutscene_manager_reset_gamecamera_on_exit": {
        "prefix": [
            "cutscene.cutscene_manager_reset_gamecamera_on_exit",
            "cutscene_manager_reset_gamecamera_on_exit"
        ],
        "body": [
            "cutscene.cutscene_manager_reset_gamecamera_on_exit(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_RESET_GAMECAMERA_ON_EXIT (0x9E6A776F) function."
    },
    "cutscene.cutscene_manager_orient_gamecamera_on_exit": {
        "prefix": [
            "cutscene.cutscene_manager_orient_gamecamera_on_exit",
            "cutscene_manager_orient_gamecamera_on_exit"
        ],
        "body": [
            "cutscene.cutscene_manager_orient_gamecamera_on_exit(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_ORIENT_GAMECAMERA_ON_EXIT (0x47FAE768) function."
    },
    "cutscene.cutscene_manager_set_skip_ui_stack_pop": {
        "prefix": [
            "cutscene.cutscene_manager_set_skip_ui_stack_pop",
            "cutscene_manager_set_skip_ui_stack_pop"
        ],
        "body": [
            "cutscene.cutscene_manager_set_skip_ui_stack_pop(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_SET_SKIP_UI_STACK_POP (0xE808BFFB) function."
    },
    "cutscene.cutscene_manager_set_hide_noncutscene_actors": {
        "prefix": [
            "cutscene.cutscene_manager_set_hide_noncutscene_actors",
            "cutscene_manager_set_hide_noncutscene_actors"
        ],
        "body": [
            "cutscene.cutscene_manager_set_hide_noncutscene_actors(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_SET_HIDE_NONCUTSCENE_ACTORS (0xE0BE8235) function."
    },
    "cutscene.cutscene_manager_can_set_post_cutscene_poses": {
        "prefix": [
            "cutscene.cutscene_manager_can_set_post_cutscene_poses",
            "cutscene_manager_can_set_post_cutscene_poses"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_can_set_post_cutscene_poses()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_CAN_SET_POST_CUTSCENE_POSES (0x7653788C) function."
    },
    "cutscene.cutscene_manager_clear_can_set_post_cutscene_poses": {
        "prefix": [
            "cutscene.cutscene_manager_clear_can_set_post_cutscene_poses",
            "cutscene_manager_clear_can_set_post_cutscene_poses"
        ],
        "body": [
            "cutscene.cutscene_manager_clear_can_set_post_cutscene_poses()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_CLEAR_CAN_SET_POST_CUTSCENE_POSES (0x98D0F458) function."
    },
    "cutscene.cutscene_manager_get_current_time": {
        "prefix": [
            "cutscene.cutscene_manager_get_current_time",
            "cutscene_manager_get_current_time"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_current_time()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CURRENT_TIME (0xAC5043C5) function."
    },
    "cutscene.cutscene_manager_get_current_frame": {
        "prefix": [
            "cutscene.cutscene_manager_get_current_frame",
            "cutscene_manager_get_current_frame"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_current_frame()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CURRENT_FRAME (0x7263860F) function."
    },
    "cutscene.cutscene_manager_get_total_frames": {
        "prefix": [
            "cutscene.cutscene_manager_get_total_frames",
            "cutscene_manager_get_total_frames"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_total_frames()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_TOTAL_FRAMES (0x2DB208A1) function."
    },
    "cutscene.cutscene_manager_get_num_cutscene_actors": {
        "prefix": [
            "cutscene.cutscene_manager_get_num_cutscene_actors",
            "cutscene_manager_get_num_cutscene_actors"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_num_cutscene_actors()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_NUM_CUTSCENE_ACTORS (0xA5691922) function."
    },
    "cutscene.cutscene_manager_get_cutscene_actor_name": {
        "prefix": [
            "cutscene.cutscene_manager_get_cutscene_actor_name",
            "cutscene_manager_get_cutscene_actor_name"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_cutscene_actor_name(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CUTSCENE_ACTOR_NAME (0xC6557710) function."
    },
    "cutscene.cutscene_manager_get_cutscene_actor": {
        "prefix": [
            "cutscene.cutscene_manager_get_cutscene_actor",
            "cutscene_manager_get_cutscene_actor"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_cutscene_actor(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CUTSCENE_ACTOR (0xED0BA189) function."
    },
    "cutscene.cutscene_manager_get_cutscene_actor_by_index_start_orient": {
        "prefix": [
            "cutscene.cutscene_manager_get_cutscene_actor_by_index_start_orient",
            "cutscene_manager_get_cutscene_actor_by_index_start_orient"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_cutscene_actor_by_index_start_orient(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CUTSCENE_ACTOR_BY_INDEX_START_ORIENT (0xB2F2A7F2) function."
    },
    "cutscene.cutscene_manager_get_cutscene_actor_by_index_end_orient": {
        "prefix": [
            "cutscene.cutscene_manager_get_cutscene_actor_by_index_end_orient",
            "cutscene_manager_get_cutscene_actor_by_index_end_orient"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_cutscene_actor_by_index_end_orient(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CUTSCENE_ACTOR_BY_INDEX_END_ORIENT (0x9410D992) function."
    },
    "cutscene.cutscene_manager_get_num_cutscene_props": {
        "prefix": [
            "cutscene.cutscene_manager_get_num_cutscene_props",
            "cutscene_manager_get_num_cutscene_props"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_num_cutscene_props()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_NUM_CUTSCENE_PROPS (0xD9E4A8DA) function."
    },
    "cutscene.cutscene_manager_get_cutscene_prop_name": {
        "prefix": [
            "cutscene.cutscene_manager_get_cutscene_prop_name",
            "cutscene_manager_get_cutscene_prop_name"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_cutscene_prop_name(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CUTSCENE_PROP_NAME (0xEBAB5F62) function."
    },
    "cutscene.cutscene_manager_get_cutscene_prop": {
        "prefix": [
            "cutscene.cutscene_manager_get_cutscene_prop",
            "cutscene_manager_get_cutscene_prop"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_cutscene_prop(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CUTSCENE_PROP (0x5DB05BBC) function."
    },
    "cutscene.cutscene_manager_get_cutscene_prop_by_index_start_orient": {
        "prefix": [
            "cutscene.cutscene_manager_get_cutscene_prop_by_index_start_orient",
            "cutscene_manager_get_cutscene_prop_by_index_start_orient"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_cutscene_prop_by_index_start_orient(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CUTSCENE_PROP_BY_INDEX_START_ORIENT (0x79C748BE) function."
    },
    "cutscene.cutscene_manager_get_cutscene_prop_by_index_end_orient": {
        "prefix": [
            "cutscene.cutscene_manager_get_cutscene_prop_by_index_end_orient",
            "cutscene_manager_get_cutscene_prop_by_index_end_orient"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_cutscene_prop_by_index_end_orient(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_CUTSCENE_PROP_BY_INDEX_END_ORIENT (0xA56DCCF2) function."
    },
    "cutscene.cutscene_manager_hide_actor": {
        "prefix": [
            "cutscene.cutscene_manager_hide_actor",
            "cutscene_manager_hide_actor"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_hide_actor(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_HIDE_ACTOR (0x3D014AB1) function."
    },
    "cutscene.cutscene_manager_show_actor": {
        "prefix": [
            "cutscene.cutscene_manager_show_actor",
            "cutscene_manager_show_actor"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_show_actor(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_SHOW_ACTOR (0xB550D120) function."
    },
    "cutscene.cutscene_manager_get_initial_streaming_load_scene_ext": {
        "prefix": [
            "cutscene.cutscene_manager_get_initial_streaming_load_scene_ext",
            "cutscene_manager_get_initial_streaming_load_scene_ext"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_initial_streaming_load_scene_ext(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_INITIAL_STREAMING_LOAD_SCENE_EXT (0xD79C7D6A) function."
    },
    "cutscene.cutscene_manager_set_final_streaming_load_scene_ext": {
        "prefix": [
            "cutscene.cutscene_manager_set_final_streaming_load_scene_ext",
            "cutscene_manager_set_final_streaming_load_scene_ext"
        ],
        "body": [
            "cutscene.cutscene_manager_set_final_streaming_load_scene_ext(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_SET_FINAL_STREAMING_LOAD_SCENE_EXT (0xB0479CB8) function."
    },
    "cutscene.cutscene_manager_set_asset_override_actor": {
        "prefix": [
            "cutscene.cutscene_manager_set_asset_override_actor",
            "cutscene_manager_set_asset_override_actor"
        ],
        "body": [
            "cutscene.cutscene_manager_set_asset_override_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_SET_ASSET_OVERRIDE_ACTOR (0x7007019D) function."
    },
    "cutscene.cutscene_manager_get_script_event_data": {
        "prefix": [
            "cutscene.cutscene_manager_get_script_event_data",
            "cutscene_manager_get_script_event_data"
        ],
        "body": [
            "local result --[[ integer ]] = cutscene.cutscene_manager_get_script_event_data()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_GET_SCRIPT_EVENT_DATA (0x24F97294) function."
    },
    "cutscene.cutscene_manager_clear_script_event": {
        "prefix": [
            "cutscene.cutscene_manager_clear_script_event",
            "cutscene_manager_clear_script_event"
        ],
        "body": [
            "cutscene.cutscene_manager_clear_script_event()"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_CLEAR_SCRIPT_EVENT (0x2B45FADE) function."
    },
    "cutscene.cutscene_manager_set_was_john_now_jack_in_rcm_cutscene": {
        "prefix": [
            "cutscene.cutscene_manager_set_was_john_now_jack_in_rcm_cutscene",
            "cutscene_manager_set_was_john_now_jack_in_rcm_cutscene"
        ],
        "body": [
            "cutscene.cutscene_manager_set_was_john_now_jack_in_rcm_cutscene(unk0 --[[ integer ]])"
        ],
        "description": "CUTSCENE::CUTSCENE_MANAGER_SET_WAS_JOHN_NOW_JACK_IN_RCM_CUTSCENE (0x50A2051C) function."
    },
    "decorator.decor_get_bool_verbose": {
        "prefix": [
            "decorator.decor_get_bool_verbose",
            "decor_get_bool_verbose"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_get_bool_verbose(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_GET_BOOL_VERBOSE (0x9AC89564) function."
    },
    "decorator.decor_get_float_verbose": {
        "prefix": [
            "decorator.decor_get_float_verbose",
            "decor_get_float_verbose"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_get_float_verbose(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_GET_FLOAT_VERBOSE (0xFAC315B7) function."
    },
    "decorator.decor_get_int_verbose": {
        "prefix": [
            "decorator.decor_get_int_verbose",
            "decor_get_int_verbose"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_get_int_verbose(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_GET_INT_VERBOSE (0x1F003E6C) function."
    },
    "decorator.decor_set_bool": {
        "prefix": [
            "decorator.decor_set_bool",
            "decor_set_bool"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_set_bool(object --[[ integer ]], decorname --[[ string ]], set --[[ boolean ]])"
        ],
        "description": "DECORATOR::DECOR_SET_BOOL (0x8E101F5C) function."
    },
    "decorator.decor_set_float": {
        "prefix": [
            "decorator.decor_set_float",
            "decor_set_float"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_set_float(object --[[ integer ]], decorname --[[ string ]], value --[[ number ]])"
        ],
        "description": "DECORATOR::DECOR_SET_FLOAT (0xBC7BD5CB) function."
    },
    "decorator.decor_set_int": {
        "prefix": [
            "decorator.decor_set_int",
            "decor_set_int"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_set_int(object --[[ integer ]], decorname --[[ string ]], value --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_SET_INT (0xDB718B21) function."
    },
    "decorator.decor_set_vector": {
        "prefix": [
            "decorator.decor_set_vector",
            "decor_set_vector"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_set_vector(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_SET_VECTOR (0xAAED0B69) function."
    },
    "decorator.decor_set_string": {
        "prefix": [
            "decorator.decor_set_string",
            "decor_set_string"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_set_string(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_SET_STRING (0x53D3FB4A) function."
    },
    "decorator.decor_set_object": {
        "prefix": [
            "decorator.decor_set_object",
            "decor_set_object"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_set_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_SET_OBJECT (0x44F8BCC5) function."
    },
    "decorator.decor_check_string": {
        "prefix": [
            "decorator.decor_check_string",
            "decor_check_string"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_check_string(decor --[[ integer ]], eventtype --[[ string ]], eventname --[[ string ]])"
        ],
        "description": "DECORATOR::DECOR_CHECK_STRING (0xEDF99C77) function."
    },
    "decorator.decor_get_string_hash": {
        "prefix": [
            "decorator.decor_get_string_hash",
            "decor_get_string_hash"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_get_string_hash(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_GET_STRING_HASH (0x6A0FE2A0) function."
    },
    "decorator.decor_get_bool": {
        "prefix": [
            "decorator.decor_get_bool",
            "decor_get_bool"
        ],
        "body": [
            "local result --[[ boolean ]] = decorator.decor_get_bool(object --[[ integer ]], decorname --[[ string ]])"
        ],
        "description": "DECORATOR::DECOR_GET_BOOL (0xDBCE51E0) function."
    },
    "decorator.decor_get_float": {
        "prefix": [
            "decorator.decor_get_float",
            "decor_get_float"
        ],
        "body": [
            "local result --[[ number ]] = decorator.decor_get_float(object --[[ integer ]], decorname --[[ string ]])"
        ],
        "description": "DECORATOR::DECOR_GET_FLOAT (0x8DE5382F) function."
    },
    "decorator.decor_get_int": {
        "prefix": [
            "decorator.decor_get_int",
            "decor_get_int"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_get_int(object --[[ integer ]], decorname --[[ string ]])"
        ],
        "description": "DECORATOR::DECOR_GET_INT (0xDDDE59B5) function."
    },
    "decorator.decor_get_vector": {
        "prefix": [
            "decorator.decor_get_vector",
            "decor_get_vector"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_get_vector(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_GET_VECTOR (0x56E84C59) function."
    },
    "decorator.decor_get_object": {
        "prefix": [
            "decorator.decor_get_object",
            "decor_get_object"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_get_object(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_GET_OBJECT (0x24F2E859) function."
    },
    "decorator.decor_check_exist": {
        "prefix": [
            "decorator.decor_check_exist",
            "decor_check_exist"
        ],
        "body": [
            "local result --[[ boolean ]] = decorator.decor_check_exist(object --[[ integer ]], decorname --[[ string ]])"
        ],
        "description": "DECORATOR::DECOR_CHECK_EXIST (0xA0773F5C) function."
    },
    "decorator.decor_remove": {
        "prefix": [
            "decorator.decor_remove",
            "decor_remove"
        ],
        "body": [
            "local result --[[ boolean ]] = decorator.decor_remove(object --[[ integer ]], decorname --[[ string ]])"
        ],
        "description": "DECORATOR::DECOR_REMOVE (0xE0E2640B) function."
    },
    "decorator.decor_remove_all": {
        "prefix": [
            "decorator.decor_remove_all",
            "decor_remove_all"
        ],
        "body": [
            "local result --[[ integer ]] = decorator.decor_remove_all(unk0 --[[ integer ]])"
        ],
        "description": "DECORATOR::DECOR_REMOVE_ALL (0xFDB9E349) function."
    },
    "dlc.dlc_pre_init_content": {
        "prefix": [
            "dlc.dlc_pre_init_content",
            "dlc_pre_init_content"
        ],
        "body": [
            "dlc.dlc_pre_init_content()"
        ],
        "description": "DLC::DLC_PRE_INIT_CONTENT (0x0728B211) function."
    },
    "dlc.dlc_init_content": {
        "prefix": [
            "dlc.dlc_init_content",
            "dlc_init_content"
        ],
        "body": [
            "dlc.dlc_init_content()"
        ],
        "description": "DLC::DLC_INIT_CONTENT (0xEC86DB0E) function."
    },
    "dlc.dlc_preinitialize_fragment_stubs": {
        "prefix": [
            "dlc.dlc_preinitialize_fragment_stubs",
            "dlc_preinitialize_fragment_stubs"
        ],
        "body": [
            "dlc.dlc_preinitialize_fragment_stubs(unk0 --[[ string ]])"
        ],
        "description": "DLC::DLC_PREINITIALIZE_FRAGMENT_STUBS (0x57D9950B) function."
    },
    "dlc.dlc_init_stringtable_streamables": {
        "prefix": [
            "dlc.dlc_init_stringtable_streamables",
            "dlc_init_stringtable_streamables"
        ],
        "body": [
            "dlc.dlc_init_stringtable_streamables(unk0 --[[ string ]], unk1 --[[ integer ]])"
        ],
        "description": "DLC::DLC_INIT_STRINGTABLE_STREAMABLES (0xF4D0807E) function."
    },
    "dlc.dlc_is_content_purchased_flags": {
        "prefix": [
            "dlc.dlc_is_content_purchased_flags",
            "dlc_is_content_purchased_flags"
        ],
        "body": [
            "local result --[[ boolean ]] = dlc.dlc_is_content_purchased_flags(unk0 --[[ integer ]])"
        ],
        "description": "DLC::DLC_IS_CONTENT_PURCHASED_FLAGS (0x853F71F6) function."
    },
    "dlc.dlc_unmount_pack": {
        "prefix": [
            "dlc.dlc_unmount_pack",
            "dlc_unmount_pack"
        ],
        "body": [
            "dlc.dlc_unmount_pack()"
        ],
        "description": "DLC::DLC_UNMOUNT_PACK (0x2F78AEFA) function."
    },
    "door.find_nearest_door": {
        "prefix": [
            "door.find_nearest_door",
            "find_nearest_door"
        ],
        "body": [
            "local result --[[ integer ]] = door.find_nearest_door(position --[[ vector3 ]], radius --[[ number ]])"
        ],
        "description": "DOOR::FIND_NEAREST_DOOR (0x9CB5372B) function."
    },
    "door.get_door_from_object": {
        "prefix": [
            "door.get_door_from_object",
            "get_door_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = door.get_door_from_object(object --[[ integer ]])"
        ],
        "description": "DOOR::GET_DOOR_FROM_OBJECT (0x9CE0AA24) function."
    },
    "door.is_door_valid": {
        "prefix": [
            "door.is_door_valid",
            "is_door_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = door.is_door_valid(door --[[ integer ]])"
        ],
        "description": "DOOR::IS_DOOR_VALID (0x7F0F079B) function."
    },
    "door.is_door_locked": {
        "prefix": [
            "door.is_door_locked",
            "is_door_locked"
        ],
        "body": [
            "local result --[[ boolean ]] = door.is_door_locked(door --[[ integer ]])"
        ],
        "description": "DOOR::IS_DOOR_LOCKED (0x19FB9518) function."
    },
    "door.set_door_lock": {
        "prefix": [
            "door.set_door_lock",
            "set_door_lock"
        ],
        "body": [
            "door.set_door_lock(door --[[ integer ]], locked --[[ boolean ]])"
        ],
        "description": "DOOR::SET_DOOR_LOCK (0x184924E2) function."
    },
    "door.is_door_closed": {
        "prefix": [
            "door.is_door_closed",
            "is_door_closed"
        ],
        "body": [
            "local result --[[ boolean ]] = door.is_door_closed(door --[[ integer ]])"
        ],
        "description": "DOOR::IS_DOOR_CLOSED (0x48659CD7) function."
    },
    "door.is_door_opened": {
        "prefix": [
            "door.is_door_opened",
            "is_door_opened"
        ],
        "body": [
            "local result --[[ boolean ]] = door.is_door_opened(door --[[ integer ]])"
        ],
        "description": "DOOR::IS_DOOR_OPENED (0x211DD9D2) function."
    },
    "door.is_door_opening": {
        "prefix": [
            "door.is_door_opening",
            "is_door_opening"
        ],
        "body": [
            "local result --[[ boolean ]] = door.is_door_opening(door --[[ integer ]])"
        ],
        "description": "DOOR::IS_DOOR_OPENING (0x52BB0836) function."
    },
    "door.is_door_closing": {
        "prefix": [
            "door.is_door_closing",
            "is_door_closing"
        ],
        "body": [
            "local result --[[ boolean ]] = door.is_door_closing(door --[[ integer ]])"
        ],
        "description": "DOOR::IS_DOOR_CLOSING (0xCBA9F32C) function."
    },
    "door.set_door_auto_close": {
        "prefix": [
            "door.set_door_auto_close",
            "set_door_auto_close"
        ],
        "body": [
            "door.set_door_auto_close(door --[[ integer ]], autoclose --[[ boolean ]])"
        ],
        "description": "DOOR::SET_DOOR_AUTO_CLOSE (0xD3300956) function."
    },
    "door.set_door_current_speed": {
        "prefix": [
            "door.set_door_current_speed",
            "set_door_current_speed"
        ],
        "body": [
            "door.set_door_current_speed(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "DOOR::SET_DOOR_CURRENT_SPEED (0x5BCFC899) function."
    },
    "door.open_door": {
        "prefix": [
            "door.open_door",
            "open_door"
        ],
        "body": [
            "door.open_door(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "DOOR::OPEN_DOOR (0x30503E81) function."
    },
    "door.open_door_direction": {
        "prefix": [
            "door.open_door_direction",
            "open_door_direction"
        ],
        "body": [
            "door.open_door_direction(door --[[ integer ]], clockwise --[[ boolean ]])"
        ],
        "description": "DOOR::OPEN_DOOR_DIRECTION (0xAACB4435) function."
    },
    "door.open_door_fast": {
        "prefix": [
            "door.open_door_fast",
            "open_door_fast"
        ],
        "body": [
            "door.open_door_fast(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "DOOR::OPEN_DOOR_FAST (0xCF89BC95) function."
    },
    "door.open_door_direction_fast": {
        "prefix": [
            "door.open_door_direction_fast",
            "open_door_direction_fast"
        ],
        "body": [
            "door.open_door_direction_fast(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "DOOR::OPEN_DOOR_DIRECTION_FAST (0xBA51D02E) function."
    },
    "door.close_door": {
        "prefix": [
            "door.close_door",
            "close_door"
        ],
        "body": [
            "door.close_door(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "DOOR::CLOSE_DOOR (0x075B1736) function."
    },
    "door.close_door_fast": {
        "prefix": [
            "door.close_door_fast",
            "close_door_fast"
        ],
        "body": [
            "door.close_door_fast(unk0 --[[ integer ]])"
        ],
        "description": "DOOR::CLOSE_DOOR_FAST (0xFEEC0767) function."
    },
    "door.set_all_door_locks_visible": {
        "prefix": [
            "door.set_all_door_locks_visible",
            "set_all_door_locks_visible"
        ],
        "body": [
            "door.set_all_door_locks_visible(unk0 --[[ integer ]])"
        ],
        "description": "DOOR::SET_ALL_DOOR_LOCKS_VISIBLE (0x3B25299D) function."
    },
    "door.set_door_lock_visible": {
        "prefix": [
            "door.set_door_lock_visible",
            "set_door_lock_visible"
        ],
        "body": [
            "door.set_door_lock_visible(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "DOOR::SET_DOOR_LOCK_VISIBLE (0x468DDDB3) function."
    },
    "door.is_door_open_in_direction": {
        "prefix": [
            "door.is_door_open_in_direction",
            "is_door_open_in_direction"
        ],
        "body": [
            "local result --[[ integer ]] = door.is_door_open_in_direction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "DOOR::IS_DOOR_OPEN_IN_DIRECTION (0xDAD47AE6) function."
    },
    "entity.is_actor_valid": {
        "prefix": [
            "entity.is_actor_valid",
            "is_actor_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_valid(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_VALID (0xBA6C3E92) function."
    },
    "entity.get_actorenum_from_string": {
        "prefix": [
            "entity.get_actorenum_from_string",
            "get_actorenum_from_string"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actorenum_from_string(actorname --[[ string ]])"
        ],
        "description": "ENTITY::GET_ACTORENUM_FROM_STRING (0x8B217CAC) function."
    },
    "entity.is_actor_on_foot": {
        "prefix": [
            "entity.is_actor_on_foot",
            "is_actor_on_foot"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_on_foot(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_ON_FOOT (0x63D6551C) function."
    },
    "entity.get_actor_offset_world_coords": {
        "prefix": [
            "entity.get_actor_offset_world_coords",
            "get_actor_offset_world_coords"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_offset_world_coords(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_OFFSET_WORLD_COORDS (0xB7CE8FCC) function."
    },
    "entity.transform_actor_to_world": {
        "prefix": [
            "entity.transform_actor_to_world",
            "transform_actor_to_world"
        ],
        "body": [
            "local result --[[ integer ]] = entity.transform_actor_to_world(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ENTITY::TRANSFORM_ACTOR_TO_WORLD (0xB89CC342) function."
    },
    "entity.actors_in_range": {
        "prefix": [
            "entity.actors_in_range",
            "actors_in_range"
        ],
        "body": [
            "local result --[[ integer ]] = entity.actors_in_range(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ENTITY::ACTORS_IN_RANGE (0x50A3BF5D) function."
    },
    "entity.get_actor_velocity": {
        "prefix": [
            "entity.get_actor_velocity",
            "get_actor_velocity"
        ],
        "body": [
            "local result --[[ vector3 ]] = entity.get_actor_velocity(actor --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_VELOCITY (0xAD6AF65C) function."
    },
    "entity.get_actor_height": {
        "prefix": [
            "entity.get_actor_height",
            "get_actor_height"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_height(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_HEIGHT (0xE173CE48) function."
    },
    "entity.set_global_actor_weapon_bias": {
        "prefix": [
            "entity.set_global_actor_weapon_bias",
            "set_global_actor_weapon_bias"
        ],
        "body": [
            "entity.set_global_actor_weapon_bias(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_GLOBAL_ACTOR_WEAPON_BIAS (0xAB8A1C15) function."
    },
    "entity.reset_global_actor_weapon_bias": {
        "prefix": [
            "entity.reset_global_actor_weapon_bias",
            "reset_global_actor_weapon_bias"
        ],
        "body": [
            "entity.reset_global_actor_weapon_bias()"
        ],
        "description": "ENTITY::RESET_GLOBAL_ACTOR_WEAPON_BIAS (0xDAD46FAB) function."
    },
    "entity.locate_actor_of_type": {
        "prefix": [
            "entity.locate_actor_of_type",
            "locate_actor_of_type"
        ],
        "body": [
            "local result --[[ integer ]] = entity.locate_actor_of_type(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "ENTITY::LOCATE_ACTOR_OF_TYPE (0xA2DEC153) function."
    },
    "entity.is_area_obstructed": {
        "prefix": [
            "entity.is_area_obstructed",
            "is_area_obstructed"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_area_obstructed(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_AREA_OBSTRUCTED (0x5F655C68) function."
    },
    "entity.is_area_obstructed2": {
        "prefix": [
            "entity.is_area_obstructed2",
            "is_area_obstructed2"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_area_obstructed2(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_AREA_OBSTRUCTED2 (0x0733E811) function."
    },
    "entity.get_actorenum_species": {
        "prefix": [
            "entity.get_actorenum_species",
            "get_actorenum_species"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actorenum_species(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTORENUM_SPECIES (0x6AC01FCB) function."
    },
    "entity.get_actorenum_actor_base_type": {
        "prefix": [
            "entity.get_actorenum_actor_base_type",
            "get_actorenum_actor_base_type"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actorenum_actor_base_type(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTORENUM_ACTOR_BASE_TYPE (0xEE0AB3DD) function."
    },
    "entity.get_actorenum_avatar_group": {
        "prefix": [
            "entity.get_actorenum_avatar_group",
            "get_actorenum_avatar_group"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actorenum_avatar_group(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTORENUM_AVATAR_GROUP (0x6AFF3122) function."
    },
    "entity.get_actorenum_mp_anim_set_name": {
        "prefix": [
            "entity.get_actorenum_mp_anim_set_name",
            "get_actorenum_mp_anim_set_name"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actorenum_mp_anim_set_name(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTORENUM_MP_ANIM_SET_NAME (0x7D397CAA) function."
    },
    "entity.decor_handles_relative": {
        "prefix": [
            "entity.decor_handles_relative",
            "decor_handles_relative"
        ],
        "body": [
            "local result --[[ integer ]] = entity.decor_handles_relative(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::DECOR_HANDLES_RELATIVE (0x8DAC4359) function."
    },
    "entity.get_actor_gait_type": {
        "prefix": [
            "entity.get_actor_gait_type",
            "get_actor_gait_type"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_gait_type(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_GAIT_TYPE (0xAC232F6E) function."
    },
    "entity.get_actor_posture": {
        "prefix": [
            "entity.get_actor_posture",
            "get_actor_posture"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_posture(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_POSTURE (0xDB993A4F) function."
    },
    "entity.set_actor_posture": {
        "prefix": [
            "entity.set_actor_posture",
            "set_actor_posture"
        ],
        "body": [
            "entity.set_actor_posture(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_POSTURE (0x708D9BD3) function."
    },
    "entity.reset_actor_gaits": {
        "prefix": [
            "entity.reset_actor_gaits",
            "reset_actor_gaits"
        ],
        "body": [
            "entity.reset_actor_gaits(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::RESET_ACTOR_GAITS (0xDCC91F8C) function."
    },
    "entity.is_actor_male": {
        "prefix": [
            "entity.is_actor_male",
            "is_actor_male"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_male(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_MALE (0x2091F142) function."
    },
    "entity.set_actor_sex": {
        "prefix": [
            "entity.set_actor_sex",
            "set_actor_sex"
        ],
        "body": [
            "entity.set_actor_sex(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_SEX (0x9C42B7A2) function."
    },
    "entity.set_actor_is_companion": {
        "prefix": [
            "entity.set_actor_is_companion",
            "set_actor_is_companion"
        ],
        "body": [
            "entity.set_actor_is_companion(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_IS_COMPANION (0x4C94EB9E) function."
    },
    "entity.set_actor_is_the_beastmaster": {
        "prefix": [
            "entity.set_actor_is_the_beastmaster",
            "set_actor_is_the_beastmaster"
        ],
        "body": [
            "entity.set_actor_is_the_beastmaster(actor --[[ integer ]], value --[[ boolean ]])"
        ],
        "description": "ENTITY::SET_ACTOR_IS_THE_BEASTMASTER (0x8392855D) function."
    },
    "entity.set_actor_time_of_last_crime": {
        "prefix": [
            "entity.set_actor_time_of_last_crime",
            "set_actor_time_of_last_crime"
        ],
        "body": [
            "local result --[[ integer ]] = entity.set_actor_time_of_last_crime(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_TIME_OF_LAST_CRIME (0xE9D86A7A) function."
    },
    "entity.destroy_impaired_actors": {
        "prefix": [
            "entity.destroy_impaired_actors",
            "destroy_impaired_actors"
        ],
        "body": [
            "entity.destroy_impaired_actors()"
        ],
        "description": "ENTITY::DESTROY_IMPAIRED_ACTORS (0x2CB5D7AF) function."
    },
    "entity.is_player_weapon_zoomed": {
        "prefix": [
            "entity.is_player_weapon_zoomed",
            "is_player_weapon_zoomed"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_player_weapon_zoomed(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_PLAYER_WEAPON_ZOOMED (0x0A842786) function."
    },
    "entity.is_actor_animal": {
        "prefix": [
            "entity.is_actor_animal",
            "is_actor_animal"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_animal(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_ANIMAL (0x8E0769F3) function."
    },
    "entity.is_actor_crouching": {
        "prefix": [
            "entity.is_actor_crouching",
            "is_actor_crouching"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_crouching(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_CROUCHING (0xF6BF4242) function."
    },
    "entity.is_actor_flying": {
        "prefix": [
            "entity.is_actor_flying",
            "is_actor_flying"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_flying(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_FLYING (0x25670955) function."
    },
    "entity.is_actor_human": {
        "prefix": [
            "entity.is_actor_human",
            "is_actor_human"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_human(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_HUMAN (0x882C84DC) function."
    },
    "entity.is_actor_jumping": {
        "prefix": [
            "entity.is_actor_jumping",
            "is_actor_jumping"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_jumping(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_JUMPING (0xDFF96719) function."
    },
    "entity.is_actor_shooting": {
        "prefix": [
            "entity.is_actor_shooting",
            "is_actor_shooting"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_shooting(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_SHOOTING (0x4B441DC4) function."
    },
    "entity.is_actor_blindfiring": {
        "prefix": [
            "entity.is_actor_blindfiring",
            "is_actor_blindfiring"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_blindfiring(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_BLINDFIRING (0x6396ABB7) function."
    },
    "entity.is_actor_reloading": {
        "prefix": [
            "entity.is_actor_reloading",
            "is_actor_reloading"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_reloading(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_RELOADING (0x39C518DB) function."
    },
    "entity.is_actor_throwing": {
        "prefix": [
            "entity.is_actor_throwing",
            "is_actor_throwing"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_throwing(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_THROWING (0x886BD8AD) function."
    },
    "entity.is_actor_whistling": {
        "prefix": [
            "entity.is_actor_whistling",
            "is_actor_whistling"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_whistling(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_WHISTLING (0x3612AC73) function."
    },
    "entity.is_actor_on_ladder": {
        "prefix": [
            "entity.is_actor_on_ladder",
            "is_actor_on_ladder"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_on_ladder(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_ON_LADDER (0xE975BE40) function."
    },
    "entity.is_actor_outdoors": {
        "prefix": [
            "entity.is_actor_outdoors",
            "is_actor_outdoors"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_outdoors(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_OUTDOORS (0xE27EBCBD) function."
    },
    "entity.suspend_mover": {
        "prefix": [
            "entity.suspend_mover",
            "suspend_mover"
        ],
        "body": [
            "entity.suspend_mover(actor --[[ integer ]])"
        ],
        "description": "ENTITY::SUSPEND_MOVER (0x017D270E) function."
    },
    "entity.enable_mover": {
        "prefix": [
            "entity.enable_mover",
            "enable_mover"
        ],
        "body": [
            "entity.enable_mover(actor --[[ integer ]])"
        ],
        "description": "ENTITY::ENABLE_MOVER (0xE29F0A39) function."
    },
    "entity.set_mover_frozen": {
        "prefix": [
            "entity.set_mover_frozen",
            "set_mover_frozen"
        ],
        "body": [
            "entity.set_mover_frozen(actor --[[ integer ]], value --[[ boolean ]])"
        ],
        "description": "ENTITY::SET_MOVER_FROZEN (0x13E6B5EE) function."
    },
    "entity.is_mover_frozen": {
        "prefix": [
            "entity.is_mover_frozen",
            "is_mover_frozen"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_mover_frozen(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_MOVER_FROZEN (0x9C12BD5A) function."
    },
    "entity.set_actor_use_coarse_bounds": {
        "prefix": [
            "entity.set_actor_use_coarse_bounds",
            "set_actor_use_coarse_bounds"
        ],
        "body": [
            "local result --[[ integer ]] = entity.set_actor_use_coarse_bounds(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_USE_COARSE_BOUNDS (0x63925367) function."
    },
    "entity.supress_mover_collisions": {
        "prefix": [
            "entity.supress_mover_collisions",
            "supress_mover_collisions"
        ],
        "body": [
            "entity.supress_mover_collisions(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ENTITY::SUPRESS_MOVER_COLLISIONS (0x61664EC0) function."
    },
    "entity.is_actor_on_ground": {
        "prefix": [
            "entity.is_actor_on_ground",
            "is_actor_on_ground"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_on_ground(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_ON_GROUND (0x709EC06C) function."
    },
    "entity.is_actor_in_water": {
        "prefix": [
            "entity.is_actor_in_water",
            "is_actor_in_water"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_in_water(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_IN_WATER (0x7D65D9C7) function."
    },
    "entity.is_actor_in_water_ofdepth": {
        "prefix": [
            "entity.is_actor_in_water_ofdepth",
            "is_actor_in_water_ofdepth"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_in_water_ofdepth(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_IN_WATER_OFDEPTH (0xA6AA7B9E) function."
    },
    "entity.get_actor_stuck_state": {
        "prefix": [
            "entity.get_actor_stuck_state",
            "get_actor_stuck_state"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_stuck_state(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_STUCK_STATE (0x7B4F9EAC) function."
    },
    "entity.is_actor_rideable": {
        "prefix": [
            "entity.is_actor_rideable",
            "is_actor_rideable"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.is_actor_rideable(actor --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_RIDEABLE (0x8842C62D) function."
    },
    "entity.set_actor_rideable": {
        "prefix": [
            "entity.set_actor_rideable",
            "set_actor_rideable"
        ],
        "body": [
            "entity.set_actor_rideable(actor --[[ integer ]], rideable --[[ boolean ]])"
        ],
        "description": "ENTITY::SET_ACTOR_RIDEABLE (0x19F3CB6B) function."
    },
    "entity.get_vehicle_bump_count": {
        "prefix": [
            "entity.get_vehicle_bump_count",
            "get_vehicle_bump_count"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_vehicle_bump_count(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_VEHICLE_BUMP_COUNT (0x04CF7C3E) function."
    },
    "entity.reset_vehicle_bump_count": {
        "prefix": [
            "entity.reset_vehicle_bump_count",
            "reset_vehicle_bump_count"
        ],
        "body": [
            "entity.reset_vehicle_bump_count(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::RESET_VEHICLE_BUMP_COUNT (0x0E9BA223) function."
    },
    "entity.set_custom_anim_speed": {
        "prefix": [
            "entity.set_custom_anim_speed",
            "set_custom_anim_speed"
        ],
        "body": [
            "entity.set_custom_anim_speed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_CUSTOM_ANIM_SPEED (0x5FEA3E61) function."
    },
    "entity.actor_reset_anims": {
        "prefix": [
            "entity.actor_reset_anims",
            "actor_reset_anims"
        ],
        "body": [
            "local result --[[ integer ]] = entity.actor_reset_anims(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::ACTOR_RESET_ANIMS (0x35D8B4AA) function."
    },
    "entity._schedule_stop_custom_unfreeze": {
        "prefix": [
            "entity._schedule_stop_custom_unfreeze",
            "_schedule_stop_custom_unfreeze"
        ],
        "body": [
            "local result --[[ integer ]] = entity._schedule_stop_custom_unfreeze(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::_SCHEDULE_STOP_CUSTOM_UNFREEZE (0x817B6952) function."
    },
    "entity._schedule_stop_custom_unsuspend": {
        "prefix": [
            "entity._schedule_stop_custom_unsuspend",
            "_schedule_stop_custom_unsuspend"
        ],
        "body": [
            "local result --[[ integer ]] = entity._schedule_stop_custom_unsuspend(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::_SCHEDULE_STOP_CUSTOM_UNSUSPEND (0x4A1D2E25) function."
    },
    "entity._schedule_stop_replication": {
        "prefix": [
            "entity._schedule_stop_replication",
            "_schedule_stop_replication"
        ],
        "body": [
            "local result --[[ integer ]] = entity._schedule_stop_replication(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::_SCHEDULE_STOP_REPLICATION (0xC17BAD12) function."
    },
    "entity.set_actor_can_play_bored_idles": {
        "prefix": [
            "entity.set_actor_can_play_bored_idles",
            "set_actor_can_play_bored_idles"
        ],
        "body": [
            "entity.set_actor_can_play_bored_idles(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_CAN_PLAY_BORED_IDLES (0x0B5E1904) function."
    },
    "entity.set_actor_can_play_gestures": {
        "prefix": [
            "entity.set_actor_can_play_gestures",
            "set_actor_can_play_gestures"
        ],
        "body": [
            "entity.set_actor_can_play_gestures(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_CAN_PLAY_GESTURES (0x50ED77F1) function."
    },
    "entity.actor_enable_variable_mesh": {
        "prefix": [
            "entity.actor_enable_variable_mesh",
            "actor_enable_variable_mesh"
        ],
        "body": [
            "entity.actor_enable_variable_mesh(actor --[[ integer ]], variablemesh --[[ integer ]], enabled --[[ boolean ]])"
        ],
        "description": "ENTITY::ACTOR_ENABLE_VARIABLE_MESH (0xDA2F6203) function."
    },
    "entity.actor_is_variable_mesh_enabled": {
        "prefix": [
            "entity.actor_is_variable_mesh_enabled",
            "actor_is_variable_mesh_enabled"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.actor_is_variable_mesh_enabled(actor --[[ integer ]], id --[[ integer ]])"
        ],
        "description": "ENTITY::ACTOR_IS_VARIABLE_MESH_ENABLED (0x5DE31288) function."
    },
    "entity.actor_set_grabbed_by_cutscene": {
        "prefix": [
            "entity.actor_set_grabbed_by_cutscene",
            "actor_set_grabbed_by_cutscene"
        ],
        "body": [
            "entity.actor_set_grabbed_by_cutscene(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::ACTOR_SET_GRABBED_BY_CUTSCENE (0x6D3E430D) function."
    },
    "entity.actor_is_grabbed_by_cutscene": {
        "prefix": [
            "entity.actor_is_grabbed_by_cutscene",
            "actor_is_grabbed_by_cutscene"
        ],
        "body": [
            "local result --[[ integer ]] = entity.actor_is_grabbed_by_cutscene(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::ACTOR_IS_GRABBED_BY_CUTSCENE (0x776999DB) function."
    },
    "entity.is_actor_fully_faded_ext": {
        "prefix": [
            "entity.is_actor_fully_faded_ext",
            "is_actor_fully_faded_ext"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_fully_faded_ext(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_FULLY_FADED_EXT (0x0CC3D8F6) function."
    },
    "entity.set_actor_hearing_max_range": {
        "prefix": [
            "entity.set_actor_hearing_max_range",
            "set_actor_hearing_max_range"
        ],
        "body": [
            "local result --[[ integer ]] = entity.set_actor_hearing_max_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_HEARING_MAX_RANGE (0x55AACDFD) function."
    },
    "entity.set_actor_vision_field_of_view": {
        "prefix": [
            "entity.set_actor_vision_field_of_view",
            "set_actor_vision_field_of_view"
        ],
        "body": [
            "entity.set_actor_vision_field_of_view(actor --[[ integer ]], value --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_VISION_FIELD_OF_VIEW (0xF8F3FE84) function."
    },
    "entity.get_actor_vision_max_range": {
        "prefix": [
            "entity.get_actor_vision_max_range",
            "get_actor_vision_max_range"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_vision_max_range(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_VISION_MAX_RANGE (0x4A4B4B26) function."
    },
    "entity.set_actor_vision_max_range": {
        "prefix": [
            "entity.set_actor_vision_max_range",
            "set_actor_vision_max_range"
        ],
        "body": [
            "local result --[[ integer ]] = entity.set_actor_vision_max_range(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_VISION_MAX_RANGE (0x4E3E9B70) function."
    },
    "entity.set_universal_vision_range_multiplier": {
        "prefix": [
            "entity.set_universal_vision_range_multiplier",
            "set_universal_vision_range_multiplier"
        ],
        "body": [
            "local result --[[ integer ]] = entity.set_universal_vision_range_multiplier(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_UNIVERSAL_VISION_RANGE_MULTIPLIER (0x5C8DD257) function."
    },
    "entity.set_actor_vision_xray": {
        "prefix": [
            "entity.set_actor_vision_xray",
            "set_actor_vision_xray"
        ],
        "body": [
            "local result --[[ integer ]] = entity.set_actor_vision_xray(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_VISION_XRAY (0x8D5175A8) function."
    },
    "entity.get_actor_vision_xray": {
        "prefix": [
            "entity.get_actor_vision_xray",
            "get_actor_vision_xray"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_vision_xray(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_VISION_XRAY (0xBFABD82E) function."
    },
    "entity.get_actor_current_weapon_ai_parameters": {
        "prefix": [
            "entity.get_actor_current_weapon_ai_parameters",
            "get_actor_current_weapon_ai_parameters"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_current_weapon_ai_parameters(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_CURRENT_WEAPON_AI_PARAMETERS (0xAAC96EFF) function."
    },
    "entity.get_actor_allow_bump_reactions": {
        "prefix": [
            "entity.get_actor_allow_bump_reactions",
            "get_actor_allow_bump_reactions"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_allow_bump_reactions(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_ALLOW_BUMP_REACTIONS (0x9CD3385E) function."
    },
    "entity.set_actor_allow_bump_reactions": {
        "prefix": [
            "entity.set_actor_allow_bump_reactions",
            "set_actor_allow_bump_reactions"
        ],
        "body": [
            "entity.set_actor_allow_bump_reactions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_ALLOW_BUMP_REACTIONS (0xC52B5F18) function."
    },
    "entity.set_actor_allow_nm_bump_reactions": {
        "prefix": [
            "entity.set_actor_allow_nm_bump_reactions",
            "set_actor_allow_nm_bump_reactions"
        ],
        "body": [
            "entity.set_actor_allow_nm_bump_reactions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_ALLOW_NM_BUMP_REACTIONS (0xEB7B0FAA) function."
    },
    "entity.set_rcm_actor_call_over_enable": {
        "prefix": [
            "entity.set_rcm_actor_call_over_enable",
            "set_rcm_actor_call_over_enable"
        ],
        "body": [
            "entity.set_rcm_actor_call_over_enable(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_RCM_ACTOR_CALL_OVER_ENABLE (0x2C6A5FAC) function."
    },
    "entity.set_rcm_was_john_now_jack": {
        "prefix": [
            "entity.set_rcm_was_john_now_jack",
            "set_rcm_was_john_now_jack"
        ],
        "body": [
            "entity.set_rcm_was_john_now_jack(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_RCM_WAS_JOHN_NOW_JACK (0xE4AA7B35) function."
    },
    "entity.set_rcm_actor_call_over_suppress": {
        "prefix": [
            "entity.set_rcm_actor_call_over_suppress",
            "set_rcm_actor_call_over_suppress"
        ],
        "body": [
            "entity.set_rcm_actor_call_over_suppress(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_RCM_ACTOR_CALL_OVER_SUPPRESS (0xD15B53F8) function."
    },
    "entity.set_actor_allow_player_greet_responses": {
        "prefix": [
            "entity.set_actor_allow_player_greet_responses",
            "set_actor_allow_player_greet_responses"
        ],
        "body": [
            "entity.set_actor_allow_player_greet_responses(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_ALLOW_PLAYER_GREET_RESPONSES (0xC28A5950) function."
    },
    "entity.set_actor_allow_weapon_reactions": {
        "prefix": [
            "entity.set_actor_allow_weapon_reactions",
            "set_actor_allow_weapon_reactions"
        ],
        "body": [
            "entity.set_actor_allow_weapon_reactions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_ALLOW_WEAPON_REACTIONS (0x003D7C2F) function."
    },
    "entity.set_actor_allow_weapon_reaction_flee": {
        "prefix": [
            "entity.set_actor_allow_weapon_reaction_flee",
            "set_actor_allow_weapon_reaction_flee"
        ],
        "body": [
            "entity.set_actor_allow_weapon_reaction_flee(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_ALLOW_WEAPON_REACTION_FLEE (0xBAF9D599) function."
    },
    "entity.get_actor_weapon_reaction_actor_type": {
        "prefix": [
            "entity.get_actor_weapon_reaction_actor_type",
            "get_actor_weapon_reaction_actor_type"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_weapon_reaction_actor_type(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_WEAPON_REACTION_ACTOR_TYPE (0x78B7976E) function."
    },
    "entity.set_actor_weapon_reaction_actor_type": {
        "prefix": [
            "entity.set_actor_weapon_reaction_actor_type",
            "set_actor_weapon_reaction_actor_type"
        ],
        "body": [
            "entity.set_actor_weapon_reaction_actor_type(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_WEAPON_REACTION_ACTOR_TYPE (0x18BA1216) function."
    },
    "entity.set_actor_weapon_reaction_no_flee_hack": {
        "prefix": [
            "entity.set_actor_weapon_reaction_no_flee_hack",
            "set_actor_weapon_reaction_no_flee_hack"
        ],
        "body": [
            "entity.set_actor_weapon_reaction_no_flee_hack(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_WEAPON_REACTION_NO_FLEE_HACK (0xD9934D6E) function."
    },
    "entity.set_player_cause_weapon_reaction_combat": {
        "prefix": [
            "entity.set_player_cause_weapon_reaction_combat",
            "set_player_cause_weapon_reaction_combat"
        ],
        "body": [
            "entity.set_player_cause_weapon_reaction_combat(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_PLAYER_CAUSE_WEAPON_REACTION_COMBAT (0xFFDA2D88) function."
    },
    "entity.set_actor_allow_disarm": {
        "prefix": [
            "entity.set_actor_allow_disarm",
            "set_actor_allow_disarm"
        ],
        "body": [
            "entity.set_actor_allow_disarm(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_ALLOW_DISARM (0x76A72D9A) function."
    },
    "entity.set_animal_can_attack": {
        "prefix": [
            "entity.set_animal_can_attack",
            "set_animal_can_attack"
        ],
        "body": [
            "entity.set_animal_can_attack(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ANIMAL_CAN_ATTACK (0x2B403538) function."
    },
    "entity.get_current_gringo": {
        "prefix": [
            "entity.get_current_gringo",
            "get_current_gringo"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_current_gringo(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_CURRENT_GRINGO (0x5D9DB7A5) function."
    },
    "entity.set_actor_gringo_restriction": {
        "prefix": [
            "entity.set_actor_gringo_restriction",
            "set_actor_gringo_restriction"
        ],
        "body": [
            "entity.set_actor_gringo_restriction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_GRINGO_RESTRICTION (0x527CB774) function."
    },
    "entity.clear_actor_gringo_restriction": {
        "prefix": [
            "entity.clear_actor_gringo_restriction",
            "clear_actor_gringo_restriction"
        ],
        "body": [
            "entity.clear_actor_gringo_restriction(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::CLEAR_ACTOR_GRINGO_RESTRICTION (0x660DBDDD) function."
    },
    "entity.make_actor_ready_for_action": {
        "prefix": [
            "entity.make_actor_ready_for_action",
            "make_actor_ready_for_action"
        ],
        "body": [
            "local result --[[ integer ]] = entity.make_actor_ready_for_action(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::MAKE_ACTOR_READY_FOR_ACTION (0xF04335A6) function."
    },
    "entity.is_actor_ready_for_action": {
        "prefix": [
            "entity.is_actor_ready_for_action",
            "is_actor_ready_for_action"
        ],
        "body": [
            "local result --[[ integer ]] = entity.is_actor_ready_for_action(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::IS_ACTOR_READY_FOR_ACTION (0xFB2B0CCF) function."
    },
    "entity.report_gringo_use_phase": {
        "prefix": [
            "entity.report_gringo_use_phase",
            "report_gringo_use_phase"
        ],
        "body": [
            "entity.report_gringo_use_phase(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::REPORT_GRINGO_USE_PHASE (0xA41B161C) function."
    },
    "entity.clear_all_corpses": {
        "prefix": [
            "entity.clear_all_corpses",
            "clear_all_corpses"
        ],
        "body": [
            "entity.clear_all_corpses()"
        ],
        "description": "ENTITY::CLEAR_ALL_CORPSES (0x9028B082) function."
    },
    "entity.can_player_die": {
        "prefix": [
            "entity.can_player_die",
            "can_player_die"
        ],
        "body": [
            "local result --[[ boolean ]] = entity.can_player_die()"
        ],
        "description": "ENTITY::CAN_PLAYER_DIE (0x90F9555B) function."
    },
    "entity.clear_actor_max_speed": {
        "prefix": [
            "entity.clear_actor_max_speed",
            "clear_actor_max_speed"
        ],
        "body": [
            "entity.clear_actor_max_speed(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::CLEAR_ACTOR_MAX_SPEED (0xA9691E66) function."
    },
    "entity.set_actor_max_speed": {
        "prefix": [
            "entity.set_actor_max_speed",
            "set_actor_max_speed"
        ],
        "body": [
            "entity.set_actor_max_speed(actor --[[ integer ]], speed --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_MAX_SPEED (0x9CB01B27) function."
    },
    "entity.set_actor_max_speed_absolute": {
        "prefix": [
            "entity.set_actor_max_speed_absolute",
            "set_actor_max_speed_absolute"
        ],
        "body": [
            "entity.set_actor_max_speed_absolute(actor --[[ integer ]], speed --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_MAX_SPEED_ABSOLUTE (0x950B8870) function."
    },
    "entity.clear_actor_min_speed": {
        "prefix": [
            "entity.clear_actor_min_speed",
            "clear_actor_min_speed"
        ],
        "body": [
            "entity.clear_actor_min_speed(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::CLEAR_ACTOR_MIN_SPEED (0x036D75D5) function."
    },
    "entity.set_actor_min_speed": {
        "prefix": [
            "entity.set_actor_min_speed",
            "set_actor_min_speed"
        ],
        "body": [
            "entity.set_actor_min_speed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_MIN_SPEED (0xA854EE99) function."
    },
    "entity.get_actor_max_speed_absolute": {
        "prefix": [
            "entity.get_actor_max_speed_absolute",
            "get_actor_max_speed_absolute"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_max_speed_absolute(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_MAX_SPEED_ABSOLUTE (0x56DE7F21) function."
    },
    "entity.set_actor_speed": {
        "prefix": [
            "entity.set_actor_speed",
            "set_actor_speed"
        ],
        "body": [
            "entity.set_actor_speed(actor --[[ integer ]], speed --[[ number ]])"
        ],
        "description": "ENTITY::SET_ACTOR_SPEED (0x09D78931) function."
    },
    "entity.clear_last_attack": {
        "prefix": [
            "entity.clear_last_attack",
            "clear_last_attack"
        ],
        "body": [
            "entity.clear_last_attack(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::CLEAR_LAST_ATTACK (0x68D4A021) function."
    },
    "entity.get_last_attack_target": {
        "prefix": [
            "entity.get_last_attack_target",
            "get_last_attack_target"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_last_attack_target(actor --[[ integer ]])"
        ],
        "description": "ENTITY::GET_LAST_ATTACK_TARGET (0xEB40C2FC) function."
    },
    "entity.get_last_attack_time": {
        "prefix": [
            "entity.get_last_attack_time",
            "get_last_attack_time"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_last_attack_time(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_LAST_ATTACK_TIME (0x69FA5315) function."
    },
    "entity.get_damage_by_local_player": {
        "prefix": [
            "entity.get_damage_by_local_player",
            "get_damage_by_local_player"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_damage_by_local_player(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_DAMAGE_BY_LOCAL_PLAYER (0x8C221B4D) function."
    },
    "entity.get_actor_combat_class": {
        "prefix": [
            "entity.get_actor_combat_class",
            "get_actor_combat_class"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_combat_class(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_COMBAT_CLASS (0x0129B715) function."
    },
    "entity._dlc_shotgun_spread_override": {
        "prefix": [
            "entity._dlc_shotgun_spread_override",
            "_dlc_shotgun_spread_override"
        ],
        "body": [
            "entity._dlc_shotgun_spread_override(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ number ]])"
        ],
        "description": "ENTITY::_DLC_SHOTGUN_SPREAD_OVERRIDE (0x8062BD74) function."
    },
    "entity.begin_duel": {
        "prefix": [
            "entity.begin_duel",
            "begin_duel"
        ],
        "body": [
            "local result --[[ integer ]] = entity.begin_duel(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]], unk12 --[[ integer ]])"
        ],
        "description": "ENTITY::BEGIN_DUEL (0x44B7FF7E) function."
    },
    "entity.add_duel_hostage": {
        "prefix": [
            "entity.add_duel_hostage",
            "add_duel_hostage"
        ],
        "body": [
            "local result --[[ integer ]] = entity.add_duel_hostage(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::ADD_DUEL_HOSTAGE (0x82A6B8FC) function."
    },
    "entity.get_current_duel_score": {
        "prefix": [
            "entity.get_current_duel_score",
            "get_current_duel_score"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_current_duel_score(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_CURRENT_DUEL_SCORE (0x33CE5435) function."
    },
    "entity.set_duel_difficulty": {
        "prefix": [
            "entity.set_duel_difficulty",
            "set_duel_difficulty"
        ],
        "body": [
            "local result --[[ integer ]] = entity.set_duel_difficulty(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_DUEL_DIFFICULTY (0x3E5C3C2D) function."
    },
    "entity.set_actor_exempt_from_ambient_restrictions": {
        "prefix": [
            "entity.set_actor_exempt_from_ambient_restrictions",
            "set_actor_exempt_from_ambient_restrictions"
        ],
        "body": [
            "entity.set_actor_exempt_from_ambient_restrictions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_EXEMPT_FROM_AMBIENT_RESTRICTIONS (0x4D0A87BF) function."
    },
    "entity.add_capability": {
        "prefix": [
            "entity.add_capability",
            "add_capability"
        ],
        "body": [
            "entity.add_capability(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::ADD_CAPABILITY (0x6695E185) function."
    },
    "entity.remove_capability": {
        "prefix": [
            "entity.remove_capability",
            "remove_capability"
        ],
        "body": [
            "entity.remove_capability(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::REMOVE_CAPABILITY (0x29AEB2DB) function."
    },
    "entity.has_capability": {
        "prefix": [
            "entity.has_capability",
            "has_capability"
        ],
        "body": [
            "local result --[[ integer ]] = entity.has_capability(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::HAS_CAPABILITY (0xD3D8E8ED) function."
    },
    "entity.get_last_on_screen_time_for_actor": {
        "prefix": [
            "entity.get_last_on_screen_time_for_actor",
            "get_last_on_screen_time_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_last_on_screen_time_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_LAST_ON_SCREEN_TIME_FOR_ACTOR (0x2B8C3258) function."
    },
    "entity.net_set_node_replication": {
        "prefix": [
            "entity.net_set_node_replication",
            "net_set_node_replication"
        ],
        "body": [
            "local result --[[ integer ]] = entity.net_set_node_replication(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ENTITY::NET_SET_NODE_REPLICATION (0xA4B5275C) function."
    },
    "entity.set_actor_action_signal": {
        "prefix": [
            "entity.set_actor_action_signal",
            "set_actor_action_signal"
        ],
        "body": [
            "entity.set_actor_action_signal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_ACTION_SIGNAL (0x382E7CCC) function."
    },
    "entity.toggle_actor_action_signal_on": {
        "prefix": [
            "entity.toggle_actor_action_signal_on",
            "toggle_actor_action_signal_on"
        ],
        "body": [
            "entity.toggle_actor_action_signal_on(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ENTITY::TOGGLE_ACTOR_ACTION_SIGNAL_ON (0x415F9BC3) function."
    },
    "entity.toggle_actor_action_signal_off": {
        "prefix": [
            "entity.toggle_actor_action_signal_off",
            "toggle_actor_action_signal_off"
        ],
        "body": [
            "entity.toggle_actor_action_signal_off(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::TOGGLE_ACTOR_ACTION_SIGNAL_OFF (0x4F605632) function."
    },
    "entity.get_actor_melee_targeted_by": {
        "prefix": [
            "entity.get_actor_melee_targeted_by",
            "get_actor_melee_targeted_by"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_melee_targeted_by(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_MELEE_TARGETED_BY (0x02365961) function."
    },
    "entity.set_actor_auto_transition_to_driver_seat": {
        "prefix": [
            "entity.set_actor_auto_transition_to_driver_seat",
            "set_actor_auto_transition_to_driver_seat"
        ],
        "body": [
            "entity.set_actor_auto_transition_to_driver_seat(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_AUTO_TRANSITION_TO_DRIVER_SEAT (0x47930AA4) function."
    },
    "entity.set_actor_move_conflict_high_priority": {
        "prefix": [
            "entity.set_actor_move_conflict_high_priority",
            "set_actor_move_conflict_high_priority"
        ],
        "body": [
            "entity.set_actor_move_conflict_high_priority(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_MOVE_CONFLICT_HIGH_PRIORITY (0x7A746D3A) function."
    },
    "entity.set_actor_move_conflict_allowed_to_run_over_small_animals": {
        "prefix": [
            "entity.set_actor_move_conflict_allowed_to_run_over_small_animals",
            "set_actor_move_conflict_allowed_to_run_over_small_animals"
        ],
        "body": [
            "entity.set_actor_move_conflict_allowed_to_run_over_small_animals(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_MOVE_CONFLICT_ALLOWED_TO_RUN_OVER_SMALL_ANIMALS (0x32CB0E86) function."
    },
    "entity.set_actor_is_ambient": {
        "prefix": [
            "entity.set_actor_is_ambient",
            "set_actor_is_ambient"
        ],
        "body": [
            "entity.set_actor_is_ambient(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_IS_AMBIENT (0x4CB24141) function."
    },
    "entity.set_actor_is_shopkeeper": {
        "prefix": [
            "entity.set_actor_is_shopkeeper",
            "set_actor_is_shopkeeper"
        ],
        "body": [
            "entity.set_actor_is_shopkeeper(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_IS_SHOPKEEPER (0x0880DBF5) function."
    },
    "entity.set_actor_should_taunt": {
        "prefix": [
            "entity.set_actor_should_taunt",
            "set_actor_should_taunt"
        ],
        "body": [
            "entity.set_actor_should_taunt(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_SHOULD_TAUNT (0x199600FA) function."
    },
    "entity.set_actor_can_bump": {
        "prefix": [
            "entity.set_actor_can_bump",
            "set_actor_can_bump"
        ],
        "body": [
            "entity.set_actor_can_bump(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_CAN_BUMP (0xB9744BE7) function."
    },
    "entity.set_actor_max_freshness": {
        "prefix": [
            "entity.set_actor_max_freshness",
            "set_actor_max_freshness"
        ],
        "body": [
            "local result --[[ integer ]] = entity.set_actor_max_freshness(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "ENTITY::SET_ACTOR_MAX_FRESHNESS (0xBADB24FB) function."
    },
    "entity.get_actor_max_freshness": {
        "prefix": [
            "entity.get_actor_max_freshness",
            "get_actor_max_freshness"
        ],
        "body": [
            "local result --[[ integer ]] = entity.get_actor_max_freshness(unk0 --[[ integer ]])"
        ],
        "description": "ENTITY::GET_ACTOR_MAX_FRESHNESS (0xF1D2A13E) function."
    },
    "entity.make_bird_fly_from_point": {
        "prefix": [
            "entity.make_bird_fly_from_point",
            "make_bird_fly_from_point"
        ],
        "body": [
            "entity.make_bird_fly_from_point(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "ENTITY::MAKE_BIRD_FLY_FROM_POINT (0x5E54E254) function."
    },
    "event.is_event_valid": {
        "prefix": [
            "event.is_event_valid",
            "is_event_valid"
        ],
        "body": [
            "local result --[[ integer ]] = event.is_event_valid(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::IS_EVENT_VALID (0x4911EB99) function."
    },
    "event.get_event_from_object": {
        "prefix": [
            "event.get_event_from_object",
            "get_event_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_event_from_object(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::GET_EVENT_FROM_OBJECT (0x184BD1BC) function."
    },
    "event.get_object_from_event": {
        "prefix": [
            "event.get_object_from_event",
            "get_object_from_event"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_object_from_event(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::GET_OBJECT_FROM_EVENT (0xB64DDA6F) function."
    },
    "event.copy_event": {
        "prefix": [
            "event.copy_event",
            "copy_event"
        ],
        "body": [
            "local result --[[ integer ]] = event.copy_event(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "EVENT::COPY_EVENT (0xF7DA8F09) function."
    },
    "event.get_event_layout": {
        "prefix": [
            "event.get_event_layout",
            "get_event_layout"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_event_layout()"
        ],
        "description": "EVENT::GET_EVENT_LAYOUT (0xD938B523) function."
    },
    "event.get_event_type": {
        "prefix": [
            "event.get_event_type",
            "get_event_type"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_event_type(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::GET_EVENT_TYPE (0x6D660453) function."
    },
    "event.get_event_target_as_object": {
        "prefix": [
            "event.get_event_target_as_object",
            "get_event_target_as_object"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_event_target_as_object(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::GET_EVENT_TARGET_AS_OBJECT (0xE2ED95CC) function."
    },
    "event.get_event_target_as_physinst": {
        "prefix": [
            "event.get_event_target_as_physinst",
            "get_event_target_as_physinst"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_event_target_as_physinst(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::GET_EVENT_TARGET_AS_PHYSINST (0xBDD4D4D5) function."
    },
    "event.get_event_perpetrator": {
        "prefix": [
            "event.get_event_perpetrator",
            "get_event_perpetrator"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_event_perpetrator(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::GET_EVENT_PERPETRATOR (0x0B5431C9) function."
    },
    "event.add_new_event_response": {
        "prefix": [
            "event.add_new_event_response",
            "add_new_event_response"
        ],
        "body": [
            "local result --[[ integer ]] = event.add_new_event_response(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "EVENT::ADD_NEW_EVENT_RESPONSE (0x17CF885F) function."
    },
    "event.add_new_ranged_event_response": {
        "prefix": [
            "event.add_new_ranged_event_response",
            "add_new_ranged_event_response"
        ],
        "body": [
            "local result --[[ integer ]] = event.add_new_ranged_event_response(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "EVENT::ADD_NEW_RANGED_EVENT_RESPONSE (0x8DF144C2) function."
    },
    "event.remove_event_response": {
        "prefix": [
            "event.remove_event_response",
            "remove_event_response"
        ],
        "body": [
            "local result --[[ integer ]] = event.remove_event_response(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "EVENT::REMOVE_EVENT_RESPONSE (0xFEE731AF) function."
    },
    "event.ranged_event_response_init_complete": {
        "prefix": [
            "event.ranged_event_response_init_complete",
            "ranged_event_response_init_complete"
        ],
        "body": [
            "event.ranged_event_response_init_complete()"
        ],
        "description": "EVENT::RANGED_EVENT_RESPONSE_INIT_COMPLETE (0x85D62384) function."
    },
    "event.register_for_creation_event": {
        "prefix": [
            "event.register_for_creation_event",
            "register_for_creation_event"
        ],
        "body": [
            "event.register_for_creation_event(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::REGISTER_FOR_CREATION_EVENT (0xFB227D11) function."
    },
    "event.get_event_time": {
        "prefix": [
            "event.get_event_time",
            "get_event_time"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_event_time(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::GET_EVENT_TIME (0x82112B85) function."
    },
    "event._get_iteration_set": {
        "prefix": [
            "event._get_iteration_set",
            "_get_iteration_set"
        ],
        "body": [
            "local result --[[ integer ]] = event._get_iteration_set(setid --[[ integer ]])"
        ],
        "description": "EVENT::_GET_ITERATION_SET (0xBC58F1EA) function."
    },
    "event.create_event_trap": {
        "prefix": [
            "event.create_event_trap",
            "create_event_trap"
        ],
        "body": [
            "local result --[[ integer ]] = event.create_event_trap(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "EVENT::CREATE_EVENT_TRAP (0x24C18749) function."
    },
    "event.event_trap_on_volume": {
        "prefix": [
            "event.event_trap_on_volume",
            "event_trap_on_volume"
        ],
        "body": [
            "event.event_trap_on_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "EVENT::EVENT_TRAP_ON_VOLUME (0x88943B5B) function."
    },
    "event.event_trap_on_perpetrator": {
        "prefix": [
            "event.event_trap_on_perpetrator",
            "event_trap_on_perpetrator"
        ],
        "body": [
            "event.event_trap_on_perpetrator(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "EVENT::EVENT_TRAP_ON_PERPETRATOR (0x6B5DF46D) function."
    },
    "event.event_trap_on_target": {
        "prefix": [
            "event.event_trap_on_target",
            "event_trap_on_target"
        ],
        "body": [
            "event.event_trap_on_target(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "EVENT::EVENT_TRAP_ON_TARGET (0x0AA5D947) function."
    },
    "event.event_trap_on_owner": {
        "prefix": [
            "event.event_trap_on_owner",
            "event_trap_on_owner"
        ],
        "body": [
            "event.event_trap_on_owner(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "EVENT::EVENT_TRAP_ON_OWNER (0x1105FB64) function."
    },
    "event.event_trap_store_events": {
        "prefix": [
            "event.event_trap_store_events",
            "event_trap_store_events"
        ],
        "body": [
            "event.event_trap_store_events(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "EVENT::EVENT_TRAP_STORE_EVENTS (0x08765C6B) function."
    },
    "event.event_trap_clear_events": {
        "prefix": [
            "event.event_trap_clear_events",
            "event_trap_clear_events"
        ],
        "body": [
            "event.event_trap_clear_events(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::EVENT_TRAP_CLEAR_EVENTS (0xDE9AA6E5) function."
    },
    "event.event_trap_successful_trap": {
        "prefix": [
            "event.event_trap_successful_trap",
            "event_trap_successful_trap"
        ],
        "body": [
            "local result --[[ integer ]] = event.event_trap_successful_trap(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::EVENT_TRAP_SUCCESSFUL_TRAP (0x54F8EAA4) function."
    },
    "event.event_trap_clear_trap_flag": {
        "prefix": [
            "event.event_trap_clear_trap_flag",
            "event_trap_clear_trap_flag"
        ],
        "body": [
            "event.event_trap_clear_trap_flag(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::EVENT_TRAP_CLEAR_TRAP_FLAG (0xAA24E0CC) function."
    },
    "event.get_num_event_responses": {
        "prefix": [
            "event.get_num_event_responses",
            "get_num_event_responses"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_num_event_responses()"
        ],
        "description": "EVENT::GET_NUM_EVENT_RESPONSES (0x19F62133) function."
    },
    "event.get_event_response_id": {
        "prefix": [
            "event.get_event_response_id",
            "get_event_response_id"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_event_response_id(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::GET_EVENT_RESPONSE_ID (0xB573FF63) function."
    },
    "event.get_event_for_response": {
        "prefix": [
            "event.get_event_for_response",
            "get_event_for_response"
        ],
        "body": [
            "local result --[[ integer ]] = event.get_event_for_response(unk0 --[[ integer ]])"
        ],
        "description": "EVENT::GET_EVENT_FOR_RESPONSE (0x586714AE) function."
    },
    "explosion._create_explosion": {
        "prefix": [
            "explosion._create_explosion",
            "_create_explosion"
        ],
        "body": [
            "explosion._create_explosion(position --[[ vector3 ]], explosionname --[[ string ]], owner --[[ integer ]], damagesphere --[[ vector3 ]], unk --[[ boolean ]])"
        ],
        "description": "EXPLOSION::_CREATE_EXPLOSION (0xE7023D23) function."
    },
    "explosion.enable_replication_set_explosion": {
        "prefix": [
            "explosion.enable_replication_set_explosion",
            "enable_replication_set_explosion"
        ],
        "body": [
            "explosion.enable_replication_set_explosion(unk0 --[[ integer ]])"
        ],
        "description": "EXPLOSION::ENABLE_REPLICATION_SET_EXPLOSION (0x651F6299) function."
    },
    "faction.reload_factions": {
        "prefix": [
            "faction.reload_factions",
            "reload_factions"
        ],
        "body": [
            "faction.reload_factions(unk0 --[[ integer ]])"
        ],
        "description": "FACTION::RELOAD_FACTIONS (0x40ABFD17) function."
    },
    "faction.reset_factions": {
        "prefix": [
            "faction.reset_factions",
            "reset_factions"
        ],
        "body": [
            "faction.reset_factions()"
        ],
        "description": "FACTION::RESET_FACTIONS (0x28413943) function."
    },
    "faction.get_actor_faction": {
        "prefix": [
            "faction.get_actor_faction",
            "get_actor_faction"
        ],
        "body": [
            "local result --[[ integer ]] = faction.get_actor_faction(actor --[[ integer ]])"
        ],
        "description": "FACTION::GET_ACTOR_FACTION (0x52E2A611) function."
    },
    "faction.set_actor_faction": {
        "prefix": [
            "faction.set_actor_faction",
            "set_actor_faction"
        ],
        "body": [
            "faction.set_actor_faction(actor --[[ integer ]], factionid --[[ integer ]])"
        ],
        "description": "FACTION::SET_ACTOR_FACTION (0xCC63951A) function."
    },
    "faction.is_faction_valid": {
        "prefix": [
            "faction.is_faction_valid",
            "is_faction_valid"
        ],
        "body": [
            "local result --[[ integer ]] = faction.is_faction_valid(unk0 --[[ integer ]])"
        ],
        "description": "FACTION::IS_FACTION_VALID (0x5E2F718D) function."
    },
    "faction.verify_faction_enum": {
        "prefix": [
            "faction.verify_faction_enum",
            "verify_faction_enum"
        ],
        "body": [
            "faction.verify_faction_enum(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "FACTION::VERIFY_FACTION_ENUM (0x22424394) function."
    },
    "faction.set_faction_is_lawful_to_attack": {
        "prefix": [
            "faction.set_faction_is_lawful_to_attack",
            "set_faction_is_lawful_to_attack"
        ],
        "body": [
            "faction.set_faction_is_lawful_to_attack(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "FACTION::SET_FACTION_IS_LAWFUL_TO_ATTACK (0xDCB960C5) function."
    },
    "faction.set_factions_status_one_way": {
        "prefix": [
            "faction.set_factions_status_one_way",
            "set_factions_status_one_way"
        ],
        "body": [
            "faction.set_factions_status_one_way(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "FACTION::SET_FACTIONS_STATUS_ONE_WAY (0xD771AF0B) function."
    },
    "faction.set_factions_status_two_way": {
        "prefix": [
            "faction.set_factions_status_two_way",
            "set_factions_status_two_way"
        ],
        "body": [
            "faction.set_factions_status_two_way(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "FACTION::SET_FACTIONS_STATUS_TWO_WAY (0x4C28B11E) function."
    },
    "faction.set_ambient_factions_status_two_way": {
        "prefix": [
            "faction.set_ambient_factions_status_two_way",
            "set_ambient_factions_status_two_way"
        ],
        "body": [
            "faction.set_ambient_factions_status_two_way(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "FACTION::SET_AMBIENT_FACTIONS_STATUS_TWO_WAY (0x6118212B) function."
    },
    "faction.reset_factions_status_two_way": {
        "prefix": [
            "faction.reset_factions_status_two_way",
            "reset_factions_status_two_way"
        ],
        "body": [
            "faction.reset_factions_status_two_way(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "FACTION::RESET_FACTIONS_STATUS_TWO_WAY (0x902781BF) function."
    },
    "faction.reset_ambient_factions_status_two_way": {
        "prefix": [
            "faction.reset_ambient_factions_status_two_way",
            "reset_ambient_factions_status_two_way"
        ],
        "body": [
            "faction.reset_ambient_factions_status_two_way(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "FACTION::RESET_AMBIENT_FACTIONS_STATUS_TWO_WAY (0xF9C5DC76) function."
    },
    "faction.set_faction_to_faction_accuracy_scale_factor": {
        "prefix": [
            "faction.set_faction_to_faction_accuracy_scale_factor",
            "set_faction_to_faction_accuracy_scale_factor"
        ],
        "body": [
            "faction.set_faction_to_faction_accuracy_scale_factor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "FACTION::SET_FACTION_TO_FACTION_ACCURACY_SCALE_FACTOR (0x463F75F8) function."
    },
    "faction.set_faction_to_faction_damage_scale_factor": {
        "prefix": [
            "faction.set_faction_to_faction_damage_scale_factor",
            "set_faction_to_faction_damage_scale_factor"
        ],
        "body": [
            "faction.set_faction_to_faction_damage_scale_factor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "FACTION::SET_FACTION_TO_FACTION_DAMAGE_SCALE_FACTOR (0xA9A18E5A) function."
    },
    "faction.clear_faction_status_to_individual_actor": {
        "prefix": [
            "faction.clear_faction_status_to_individual_actor",
            "clear_faction_status_to_individual_actor"
        ],
        "body": [
            "faction.clear_faction_status_to_individual_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "FACTION::CLEAR_FACTION_STATUS_TO_INDIVIDUAL_ACTOR (0xEF639583) function."
    },
    "faction.get_faction_status_to_individual_actor": {
        "prefix": [
            "faction.get_faction_status_to_individual_actor",
            "get_faction_status_to_individual_actor"
        ],
        "body": [
            "local result --[[ integer ]] = faction.get_faction_status_to_individual_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "FACTION::GET_FACTION_STATUS_TO_INDIVIDUAL_ACTOR (0x784398CB) function."
    },
    "faction.set_faction_status_to_individual_actor": {
        "prefix": [
            "faction.set_faction_status_to_individual_actor",
            "set_faction_status_to_individual_actor"
        ],
        "body": [
            "faction.set_faction_status_to_individual_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "FACTION::SET_FACTION_STATUS_TO_INDIVIDUAL_ACTOR (0xBC44D31D) function."
    },
    "fx.enable_pip": {
        "prefix": [
            "fx.enable_pip",
            "enable_pip"
        ],
        "body": [
            "fx.enable_pip(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "FX::ENABLE_PIP (0xA5A6A3E3) function."
    },
    "fx.is_pip_enabled": {
        "prefix": [
            "fx.is_pip_enabled",
            "is_pip_enabled"
        ],
        "body": [
            "local result --[[ integer ]] = fx.is_pip_enabled(unk0 --[[ integer ]])"
        ],
        "description": "FX::IS_PIP_ENABLED (0x3736FF43) function."
    },
    "fx.clear_decals": {
        "prefix": [
            "fx.clear_decals",
            "clear_decals"
        ],
        "body": [
            "fx.clear_decals()"
        ],
        "description": "FX::CLEAR_DECALS (0x43939FD8) function."
    },
    "fx.create_decal": {
        "prefix": [
            "fx.create_decal",
            "create_decal"
        ],
        "body": [
            "fx.create_decal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "FX::CREATE_DECAL (0x21588246) function."
    },
    "fx.create_direction_decal": {
        "prefix": [
            "fx.create_direction_decal",
            "create_direction_decal"
        ],
        "body": [
            "fx.create_direction_decal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "FX::CREATE_DIRECTION_DECAL (0xFB4CFBA0) function."
    },
    "fx.create_decal_with_normal": {
        "prefix": [
            "fx.create_decal_with_normal",
            "create_decal_with_normal"
        ],
        "body": [
            "fx.create_decal_with_normal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]])"
        ],
        "description": "FX::CREATE_DECAL_WITH_NORMAL (0x7BCE4845) function."
    },
    "fx.at_fired_last": {
        "prefix": [
            "fx.at_fired_last",
            "at_fired_last"
        ],
        "body": [
            "fx.at_fired_last(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "FX::AT_FIRED_LAST (0x013A0D25) function."
    },
    "fx._set_melee_marker_size": {
        "prefix": [
            "fx._set_melee_marker_size",
            "_set_melee_marker_size"
        ],
        "body": [
            "fx._set_melee_marker_size(unk0 --[[ integer ]])"
        ],
        "description": "FX::_SET_MELEE_MARKER_SIZE (0x1182C34F) function."
    },
    "fx._set_melee_marker_color": {
        "prefix": [
            "fx._set_melee_marker_color",
            "_set_melee_marker_color"
        ],
        "body": [
            "fx._set_melee_marker_color(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "FX::_SET_MELEE_MARKER_COLOR (0xD0FB6AF0) function."
    },
    "fx._set_melee_marker_strobe_intensity": {
        "prefix": [
            "fx._set_melee_marker_strobe_intensity",
            "_set_melee_marker_strobe_intensity"
        ],
        "body": [
            "fx._set_melee_marker_strobe_intensity(unk0 --[[ integer ]])"
        ],
        "description": "FX::_SET_MELEE_MARKER_STROBE_INTENSITY (0xC00F8181) function."
    },
    "fx._fx_enable_script_melee_marker": {
        "prefix": [
            "fx._fx_enable_script_melee_marker",
            "_fx_enable_script_melee_marker"
        ],
        "body": [
            "fx._fx_enable_script_melee_marker(unk0 --[[ integer ]])"
        ],
        "description": "FX::_FX_ENABLE_SCRIPT_MELEE_MARKER (0x4897DD37) function."
    },
    "fx.ppp_load_preset": {
        "prefix": [
            "fx.ppp_load_preset",
            "ppp_load_preset"
        ],
        "body": [
            "fx.ppp_load_preset(preset --[[ string ]])"
        ],
        "description": "FX::PPP_LOAD_PRESET (0x6E946AF8) function."
    },
    "fx.ppp_unload_preset": {
        "prefix": [
            "fx.ppp_unload_preset",
            "ppp_unload_preset"
        ],
        "body": [
            "fx.ppp_unload_preset(preset --[[ string ]])"
        ],
        "description": "FX::PPP_UNLOAD_PRESET (0xB6CA7EBF) function."
    },
    "fx.reset_analog_positions": {
        "prefix": [
            "fx.reset_analog_positions",
            "reset_analog_positions"
        ],
        "body": [
            "fx.reset_analog_positions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "FX::RESET_ANALOG_POSITIONS (0x4710FD93) function."
    },
    "fx.ppp_get_element_magnitude": {
        "prefix": [
            "fx.ppp_get_element_magnitude",
            "ppp_get_element_magnitude"
        ],
        "body": [
            "local result --[[ integer ]] = fx.ppp_get_element_magnitude(unk0 --[[ integer ]])"
        ],
        "description": "FX::PPP_GET_ELEMENT_MAGNITUDE (0x6A0A241A) function."
    },
    "fx.cancel_deadeye": {
        "prefix": [
            "fx.cancel_deadeye",
            "cancel_deadeye"
        ],
        "body": [
            "fx.cancel_deadeye()"
        ],
        "description": "FX::CANCEL_DEADEYE (0xCB0BDCE9) function."
    },
    "fx.fire_shock": {
        "prefix": [
            "fx.fire_shock",
            "fire_shock"
        ],
        "body": [
            "fx.fire_shock(unk0 --[[ integer ]])"
        ],
        "description": "FX::FIRE_SHOCK (0xFA43DCC5) function."
    },
    "fx.set_shock_speed": {
        "prefix": [
            "fx.set_shock_speed",
            "set_shock_speed"
        ],
        "body": [
            "fx.set_shock_speed(unk0 --[[ integer ]])"
        ],
        "description": "FX::SET_SHOCK_SPEED (0xEC906A7A) function."
    },
    "fx.set_shock_amplitude": {
        "prefix": [
            "fx.set_shock_amplitude",
            "set_shock_amplitude"
        ],
        "body": [
            "fx.set_shock_amplitude(unk0 --[[ integer ]])"
        ],
        "description": "FX::SET_SHOCK_AMPLITUDE (0xC9FCD3EC) function."
    },
    "fx.dof_push": {
        "prefix": [
            "fx.dof_push",
            "dof_push"
        ],
        "body": [
            "fx.dof_push()"
        ],
        "description": "FX::DOF_PUSH (0xF665F9D1) function."
    },
    "fx.dof_pop": {
        "prefix": [
            "fx.dof_pop",
            "dof_pop"
        ],
        "body": [
            "fx.dof_pop()"
        ],
        "description": "FX::DOF_POP (0x5EBE0C41) function."
    },
    "fx.dof_set": {
        "prefix": [
            "fx.dof_set",
            "dof_set"
        ],
        "body": [
            "fx.dof_set(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "FX::DOF_SET (0xEA8964CC) function."
    },
    "fx.dof_set_kernel": {
        "prefix": [
            "fx.dof_set_kernel",
            "dof_set_kernel"
        ],
        "body": [
            "fx.dof_set_kernel(unk0 --[[ integer ]])"
        ],
        "description": "FX::DOF_SET_KERNEL (0x47A8DDED) function."
    },
    "fx.add_glow_to_object": {
        "prefix": [
            "fx.add_glow_to_object",
            "add_glow_to_object"
        ],
        "body": [
            "local result --[[ integer ]] = fx.add_glow_to_object(unk0 --[[ integer ]], unk1 --[[ number ]], unk2 --[[ number ]], unk3 --[[ number ]])"
        ],
        "description": "FX::ADD_GLOW_TO_OBJECT (0x3B32AB84) function."
    },
    "fx.remove_glow_indicator": {
        "prefix": [
            "fx.remove_glow_indicator",
            "remove_glow_indicator"
        ],
        "body": [
            "fx.remove_glow_indicator(unk0 --[[ integer ]])"
        ],
        "description": "FX::REMOVE_GLOW_INDICATOR (0xCBDD5832) function."
    },
    "fx.create_object_glow": {
        "prefix": [
            "fx.create_object_glow",
            "create_object_glow"
        ],
        "body": [
            "fx.create_object_glow(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "FX::CREATE_OBJECT_GLOW (0x1065D334) function."
    },
    "fx.destroy_object_glow": {
        "prefix": [
            "fx.destroy_object_glow",
            "destroy_object_glow"
        ],
        "body": [
            "fx.destroy_object_glow(unk0 --[[ integer ]])"
        ],
        "description": "FX::DESTROY_OBJECT_GLOW (0xFC261530) function."
    },
    "fx.clear_tumbleweeds": {
        "prefix": [
            "fx.clear_tumbleweeds",
            "clear_tumbleweeds"
        ],
        "body": [
            "fx.clear_tumbleweeds()"
        ],
        "description": "FX::CLEAR_TUMBLEWEEDS (0x8852F896) function."
    },
    "fx.allow_tumbleweeds": {
        "prefix": [
            "fx.allow_tumbleweeds",
            "allow_tumbleweeds"
        ],
        "body": [
            "fx.allow_tumbleweeds(unk0 --[[ integer ]])"
        ],
        "description": "FX::ALLOW_TUMBLEWEEDS (0xFDE8DFCE) function."
    },
    "fx.add_zombie_to_actor": {
        "prefix": [
            "fx.add_zombie_to_actor",
            "add_zombie_to_actor"
        ],
        "body": [
            "local result --[[ integer ]] = fx.add_zombie_to_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "FX::ADD_ZOMBIE_TO_ACTOR (0x1EE7153B) function."
    },
    "fx.add_blood_to_actor": {
        "prefix": [
            "fx.add_blood_to_actor",
            "add_blood_to_actor"
        ],
        "body": [
            "fx.add_blood_to_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "FX::ADD_BLOOD_TO_ACTOR (0x5685A440) function."
    },
    "fx.clear_character_blood": {
        "prefix": [
            "fx.clear_character_blood",
            "clear_character_blood"
        ],
        "body": [
            "fx.clear_character_blood()"
        ],
        "description": "FX::CLEAR_CHARACTER_BLOOD (0x1A676EDF) function."
    },
    "fx.clear_player_blood": {
        "prefix": [
            "fx.clear_player_blood",
            "clear_player_blood"
        ],
        "body": [
            "fx.clear_player_blood()"
        ],
        "description": "FX::CLEAR_PLAYER_BLOOD (0x807C9D01) function."
    },
    "fx.set_player_blood_fade_rate": {
        "prefix": [
            "fx.set_player_blood_fade_rate",
            "set_player_blood_fade_rate"
        ],
        "body": [
            "fx.set_player_blood_fade_rate(unk0 --[[ integer ]])"
        ],
        "description": "FX::SET_PLAYER_BLOOD_FADE_RATE (0x9D9E093E) function."
    },
    "fx.prick_player_finger": {
        "prefix": [
            "fx.prick_player_finger",
            "prick_player_finger"
        ],
        "body": [
            "fx.prick_player_finger(unk0 --[[ integer ]])"
        ],
        "description": "FX::PRICK_PLAYER_FINGER (0x32F2D6F1) function."
    },
    "fx.burn_actor": {
        "prefix": [
            "fx.burn_actor",
            "burn_actor"
        ],
        "body": [
            "fx.burn_actor(actor --[[ integer ]], unk1 --[[ number ]], unk2 --[[ integer ]])"
        ],
        "description": "FX::BURN_ACTOR (0xA257C16D) function."
    },
    "fx.limit_blood_on_actor": {
        "prefix": [
            "fx.limit_blood_on_actor",
            "limit_blood_on_actor"
        ],
        "body": [
            "fx.limit_blood_on_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "FX::LIMIT_BLOOD_ON_ACTOR (0x3627F773) function."
    },
    "fx.load_ptfx_dlc_assets": {
        "prefix": [
            "fx.load_ptfx_dlc_assets",
            "load_ptfx_dlc_assets"
        ],
        "body": [
            "fx.load_ptfx_dlc_assets(packname --[[ string ]])"
        ],
        "description": "FX::LOAD_PTFX_DLC_ASSETS (0x48123591) function."
    },
    "fx.addshader": {
        "prefix": [
            "fx.addshader",
            "addshader"
        ],
        "body": [
            "fx.addshader(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "FX::ADDSHADER (0xA0AE0C98) function."
    },
    "game.disable_player_gringo_use": {
        "prefix": [
            "game.disable_player_gringo_use",
            "disable_player_gringo_use"
        ],
        "body": [
            "game.disable_player_gringo_use(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GAME::DISABLE_PLAYER_GRINGO_USE (0x6FCF6BC8) function."
    },
    "game.is_mission_script": {
        "prefix": [
            "game.is_mission_script",
            "is_mission_script"
        ],
        "body": [
            "local result --[[ integer ]] = game.is_mission_script()"
        ],
        "description": "GAME::IS_MISSION_SCRIPT (0x5A9D0738) function."
    },
    "game.set_is_mission_script": {
        "prefix": [
            "game.set_is_mission_script",
            "set_is_mission_script"
        ],
        "body": [
            "game.set_is_mission_script(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SET_IS_MISSION_SCRIPT (0x15040CD2) function."
    },
    "game.set_script_avoids_stringtable": {
        "prefix": [
            "game.set_script_avoids_stringtable",
            "set_script_avoids_stringtable"
        ],
        "body": [
            "game.set_script_avoids_stringtable(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SET_SCRIPT_AVOIDS_STRINGTABLE (0x45589499) function."
    },
    "game.get_game_state": {
        "prefix": [
            "game.get_game_state",
            "get_game_state"
        ],
        "body": [
            "local result --[[ integer ]] = game.get_game_state()"
        ],
        "description": "GAME::GET_GAME_STATE (0xDD9BD22B) function."
    },
    "game.set_pause_script": {
        "prefix": [
            "game.set_pause_script",
            "set_pause_script"
        ],
        "body": [
            "game.set_pause_script(scriptpath --[[ string ]])"
        ],
        "description": "GAME::SET_PAUSE_SCRIPT (0x9B71351C) function."
    },
    "game.enable_use_contexts": {
        "prefix": [
            "game.enable_use_contexts",
            "enable_use_contexts"
        ],
        "body": [
            "game.enable_use_contexts(value --[[ boolean ]])"
        ],
        "description": "GAME::ENABLE_USE_CONTEXTS (0xFEA58D57) function."
    },
    "game.are_use_contexts_enabled": {
        "prefix": [
            "game.are_use_contexts_enabled",
            "are_use_contexts_enabled"
        ],
        "body": [
            "local result --[[ integer ]] = game.are_use_contexts_enabled()"
        ],
        "description": "GAME::ARE_USE_CONTEXTS_ENABLED (0x2ADA3DD4) function."
    },
    "game.is_script_use_context_valid": {
        "prefix": [
            "game.is_script_use_context_valid",
            "is_script_use_context_valid"
        ],
        "body": [
            "local result --[[ integer ]] = game.is_script_use_context_valid(unk0 --[[ integer ]])"
        ],
        "description": "GAME::IS_SCRIPT_USE_CONTEXT_VALID (0x115CD0CC) function."
    },
    "game.add_script_use_context_in_volume": {
        "prefix": [
            "game.add_script_use_context_in_volume",
            "add_script_use_context_in_volume"
        ],
        "body": [
            "local result --[[ integer ]] = game.add_script_use_context_in_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "GAME::ADD_SCRIPT_USE_CONTEXT_IN_VOLUME (0x039E7F1D) function."
    },
    "game.add_script_use_context": {
        "prefix": [
            "game.add_script_use_context",
            "add_script_use_context"
        ],
        "body": [
            "local result --[[ integer ]] = game.add_script_use_context(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "GAME::ADD_SCRIPT_USE_CONTEXT (0xD7591B0E) function."
    },
    "game.add_script_use_context_stick": {
        "prefix": [
            "game.add_script_use_context_stick",
            "add_script_use_context_stick"
        ],
        "body": [
            "local result --[[ integer ]] = game.add_script_use_context_stick(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "GAME::ADD_SCRIPT_USE_CONTEXT_STICK (0xF48F8F09) function."
    },
    "game.is_script_use_context_pressed": {
        "prefix": [
            "game.is_script_use_context_pressed",
            "is_script_use_context_pressed"
        ],
        "body": [
            "local result --[[ integer ]] = game.is_script_use_context_pressed(unk0 --[[ integer ]])"
        ],
        "description": "GAME::IS_SCRIPT_USE_CONTEXT_PRESSED (0x45C1C061) function."
    },
    "game.was_script_use_context_ever_pressed": {
        "prefix": [
            "game.was_script_use_context_ever_pressed",
            "was_script_use_context_ever_pressed"
        ],
        "body": [
            "local result --[[ integer ]] = game.was_script_use_context_ever_pressed(unk0 --[[ integer ]])"
        ],
        "description": "GAME::WAS_SCRIPT_USE_CONTEXT_EVER_PRESSED (0x971559CA) function."
    },
    "game.set_use_context_text": {
        "prefix": [
            "game.set_use_context_text",
            "set_use_context_text"
        ],
        "body": [
            "game.set_use_context_text(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "GAME::SET_USE_CONTEXT_TEXT (0x3ECD8FEE) function."
    },
    "game.release_script_use_context": {
        "prefix": [
            "game.release_script_use_context",
            "release_script_use_context"
        ],
        "body": [
            "game.release_script_use_context(unk0 --[[ integer ]])"
        ],
        "description": "GAME::RELEASE_SCRIPT_USE_CONTEXT (0x4F52CB58) function."
    },
    "game.net_mailbox_is_signed_into_sc": {
        "prefix": [
            "game.net_mailbox_is_signed_into_sc",
            "net_mailbox_is_signed_into_sc"
        ],
        "body": [
            "local result --[[ boolean ]] = game.net_mailbox_is_signed_into_sc()"
        ],
        "description": "GAME::NET_MAILBOX_IS_SIGNED_INTO_SC (0xA3E1EF71) function."
    },
    "game.net_mailbox_get_max_num_challenges": {
        "prefix": [
            "game.net_mailbox_get_max_num_challenges",
            "net_mailbox_get_max_num_challenges"
        ],
        "body": [
            "local result --[[ integer ]] = game.net_mailbox_get_max_num_challenges()"
        ],
        "description": "GAME::NET_MAILBOX_GET_MAX_NUM_CHALLENGES (0x6B439149) function."
    },
    "game.net_mailbox_get_challenge_by_index": {
        "prefix": [
            "game.net_mailbox_get_challenge_by_index",
            "net_mailbox_get_challenge_by_index"
        ],
        "body": [
            "local result --[[ integer ]] = game.net_mailbox_get_challenge_by_index(unk0 --[[ integer ]])"
        ],
        "description": "GAME::NET_MAILBOX_GET_CHALLENGE_BY_INDEX (0xE85942F0) function."
    },
    "game.net_mailbox_get_challenge_by_id": {
        "prefix": [
            "game.net_mailbox_get_challenge_by_id",
            "net_mailbox_get_challenge_by_id"
        ],
        "body": [
            "local result --[[ integer ]] = game.net_mailbox_get_challenge_by_id(unk0 --[[ integer ]])"
        ],
        "description": "GAME::NET_MAILBOX_GET_CHALLENGE_BY_ID (0xD4FBCCE0) function."
    },
    "game.net_mailbox_is_challenge_valid": {
        "prefix": [
            "game.net_mailbox_is_challenge_valid",
            "net_mailbox_is_challenge_valid"
        ],
        "body": [
            "local result --[[ integer ]] = game.net_mailbox_is_challenge_valid(unk0 --[[ integer ]])"
        ],
        "description": "GAME::NET_MAILBOX_IS_CHALLENGE_VALID (0xC9E96F78) function."
    },
    "game.sc_challenge_launch": {
        "prefix": [
            "game.sc_challenge_launch",
            "sc_challenge_launch"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_launch(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_LAUNCH (0xCBBE41DD) function."
    },
    "game.sc_challenge_clean_up": {
        "prefix": [
            "game.sc_challenge_clean_up",
            "sc_challenge_clean_up"
        ],
        "body": [
            "game.sc_challenge_clean_up(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_CLEAN_UP (0xB7DE2AF2) function."
    },
    "game.sc_challenge_is_running": {
        "prefix": [
            "game.sc_challenge_is_running",
            "sc_challenge_is_running"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_is_running(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_IS_RUNNING (0x79F09AC7) function."
    },
    "game.sc_challenge_is_active": {
        "prefix": [
            "game.sc_challenge_is_active",
            "sc_challenge_is_active"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_is_active(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_IS_ACTIVE (0x5D7197BC) function."
    },
    "game.sc_challenge_get_community_total": {
        "prefix": [
            "game.sc_challenge_get_community_total",
            "sc_challenge_get_community_total"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_get_community_total(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_GET_COMMUNITY_TOTAL (0xFFC55DA4) function."
    },
    "game.sc_challenge_get_community_value": {
        "prefix": [
            "game.sc_challenge_get_community_value",
            "sc_challenge_get_community_value"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_get_community_value(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_GET_COMMUNITY_VALUE (0xCEEEAE1D) function."
    },
    "game.sc_challenge_process_expiration": {
        "prefix": [
            "game.sc_challenge_process_expiration",
            "sc_challenge_process_expiration"
        ],
        "body": [
            "game.sc_challenge_process_expiration(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_PROCESS_EXPIRATION (0x1876B04E) function."
    },
    "game.sc_challenge_get_expiration_state": {
        "prefix": [
            "game.sc_challenge_get_expiration_state",
            "sc_challenge_get_expiration_state"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_get_expiration_state(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_GET_EXPIRATION_STATE (0x4BD61354) function."
    },
    "game.sc_challenge_reset_expiration_state": {
        "prefix": [
            "game.sc_challenge_reset_expiration_state",
            "sc_challenge_reset_expiration_state"
        ],
        "body": [
            "game.sc_challenge_reset_expiration_state(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_RESET_EXPIRATION_STATE (0xF5F97702) function."
    },
    "game.sc_challenge_is_var_valid": {
        "prefix": [
            "game.sc_challenge_is_var_valid",
            "sc_challenge_is_var_valid"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_is_var_valid(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_IS_VAR_VALID (0xFD6197EB) function."
    },
    "game.sc_challenge_get_var_float": {
        "prefix": [
            "game.sc_challenge_get_var_float",
            "sc_challenge_get_var_float"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_get_var_float(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_GET_VAR_FLOAT (0xC322556E) function."
    },
    "game.sc_challenge_get_var_int": {
        "prefix": [
            "game.sc_challenge_get_var_int",
            "sc_challenge_get_var_int"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_get_var_int(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_GET_VAR_INT (0x2390DD18) function."
    },
    "game.sc_challenge_get_var_bool": {
        "prefix": [
            "game.sc_challenge_get_var_bool",
            "sc_challenge_get_var_bool"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_get_var_bool(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_GET_VAR_BOOL (0xB40622F1) function."
    },
    "game.sc_challenge_release": {
        "prefix": [
            "game.sc_challenge_release",
            "sc_challenge_release"
        ],
        "body": [
            "game.sc_challenge_release(unk0 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_RELEASE (0xD2513200) function."
    },
    "game.sc_challenge_get_leaderboard_id": {
        "prefix": [
            "game.sc_challenge_get_leaderboard_id",
            "sc_challenge_get_leaderboard_id"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_get_leaderboard_id(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GAME::SC_CHALLENGE_GET_LEADERBOARD_ID (0xC21048BF) function."
    },
    "game.sc_challenge_get_min_lb_refresh_delay_secs": {
        "prefix": [
            "game.sc_challenge_get_min_lb_refresh_delay_secs",
            "sc_challenge_get_min_lb_refresh_delay_secs"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_get_min_lb_refresh_delay_secs()"
        ],
        "description": "GAME::SC_CHALLENGE_GET_MIN_LB_REFRESH_DELAY_SECS (0x5725C84F) function."
    },
    "game.sc_challenge_get_min_submit_delay_secs": {
        "prefix": [
            "game.sc_challenge_get_min_submit_delay_secs",
            "sc_challenge_get_min_submit_delay_secs"
        ],
        "body": [
            "local result --[[ integer ]] = game.sc_challenge_get_min_submit_delay_secs()"
        ],
        "description": "GAME::SC_CHALLENGE_GET_MIN_SUBMIT_DELAY_SECS (0x2374C1E0) function."
    },
    "gateway.gateway_get_actor": {
        "prefix": [
            "gateway.gateway_get_actor",
            "gateway_get_actor"
        ],
        "body": [
            "local result --[[ integer ]] = gateway.gateway_get_actor(unk0 --[[ integer ]])"
        ],
        "description": "GATEWAY::GATEWAY_GET_ACTOR (0x820699A8) function."
    },
    "gateway.gateway_set_actor": {
        "prefix": [
            "gateway.gateway_set_actor",
            "gateway_set_actor"
        ],
        "body": [
            "gateway.gateway_set_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GATEWAY::GATEWAY_SET_ACTOR (0x26D24123) function."
    },
    "gateway.gateway_get_volume": {
        "prefix": [
            "gateway.gateway_get_volume",
            "gateway_get_volume"
        ],
        "body": [
            "local result --[[ integer ]] = gateway.gateway_get_volume(unk0 --[[ integer ]])"
        ],
        "description": "GATEWAY::GATEWAY_GET_VOLUME (0x987AD426) function."
    },
    "gateway.gateway_get_marker": {
        "prefix": [
            "gateway.gateway_get_marker",
            "gateway_get_marker"
        ],
        "body": [
            "local result --[[ integer ]] = gateway.gateway_get_marker(unk0 --[[ integer ]])"
        ],
        "description": "GATEWAY::GATEWAY_GET_MARKER (0xB62A4FB1) function."
    },
    "gateway.gateway_update": {
        "prefix": [
            "gateway.gateway_update",
            "gateway_update"
        ],
        "body": [
            "local result --[[ integer ]] = gateway.gateway_update(unk0 --[[ integer ]])"
        ],
        "description": "GATEWAY::GATEWAY_UPDATE (0x96BD89B6) function."
    },
    "gateway.actor_data_gravity_limit": {
        "prefix": [
            "gateway.actor_data_gravity_limit",
            "actor_data_gravity_limit"
        ],
        "body": [
            "gateway.actor_data_gravity_limit(unk0 --[[ integer ]])"
        ],
        "description": "GATEWAY::ACTOR_DATA_GRAVITY_LIMIT (0xF03CC7A7) function."
    },
    "gateway.gateway_disable": {
        "prefix": [
            "gateway.gateway_disable",
            "gateway_disable"
        ],
        "body": [
            "gateway.gateway_disable(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GATEWAY::GATEWAY_DISABLE (0x620A3C17) function."
    },
    "gateway.gateways_are_disabled": {
        "prefix": [
            "gateway.gateways_are_disabled",
            "gateways_are_disabled"
        ],
        "body": [
            "local result --[[ integer ]] = gateway.gateways_are_disabled()"
        ],
        "description": "GATEWAY::GATEWAYS_ARE_DISABLED (0x3AE1062C) function."
    },
    "gateway.gateway_is_disabled": {
        "prefix": [
            "gateway.gateway_is_disabled",
            "gateway_is_disabled"
        ],
        "body": [
            "local result --[[ integer ]] = gateway.gateway_is_disabled(unk0 --[[ integer ]])"
        ],
        "description": "GATEWAY::GATEWAY_IS_DISABLED (0xB9F2F8BB) function."
    },
    "gravestone.is_gravestone_sector_ready": {
        "prefix": [
            "gravestone.is_gravestone_sector_ready",
            "is_gravestone_sector_ready"
        ],
        "body": [
            "local result --[[ boolean ]] = gravestone.is_gravestone_sector_ready()"
        ],
        "description": "GRAVESTONE::IS_GRAVESTONE_SECTOR_READY (0xF62EE158) function."
    },
    "gravestone.set_current_gravestone_sector": {
        "prefix": [
            "gravestone.set_current_gravestone_sector",
            "set_current_gravestone_sector"
        ],
        "body": [
            "gravestone.set_current_gravestone_sector(unk0 --[[ integer ]])"
        ],
        "description": "GRAVESTONE::SET_CURRENT_GRAVESTONE_SECTOR (0x449D4A89) function."
    },
    "gravestone.create_gravestone_text_in_layout": {
        "prefix": [
            "gravestone.create_gravestone_text_in_layout",
            "create_gravestone_text_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = gravestone.create_gravestone_text_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "GRAVESTONE::CREATE_GRAVESTONE_TEXT_IN_LAYOUT (0xAEC955F8) function."
    },
    "gravestone.create_wantedposter_text": {
        "prefix": [
            "gravestone.create_wantedposter_text",
            "create_wantedposter_text"
        ],
        "body": [
            "local result --[[ integer ]] = gravestone.create_wantedposter_text(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "GRAVESTONE::CREATE_WANTEDPOSTER_TEXT (0x211DE185) function."
    },
    "gravestone.create_mp_text": {
        "prefix": [
            "gravestone.create_mp_text",
            "create_mp_text"
        ],
        "body": [
            "local result --[[ integer ]] = gravestone.create_mp_text(object --[[ integer ]], unk1 --[[ string ]], unk2 --[[ string ]], unk3 --[[ vector2 ]], unk4 --[[ number ]], unk5 --[[ vector2 ]], unk6 --[[ number ]], unk7 --[[ integer ]])"
        ],
        "description": "GRAVESTONE::CREATE_MP_TEXT (0x5BF5A39C) function."
    },
    "greeting.set_greeting_context": {
        "prefix": [
            "greeting.set_greeting_context",
            "set_greeting_context"
        ],
        "body": [
            "greeting.set_greeting_context(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_CONTEXT (0x9953D4FC) function."
    },
    "greeting.set_non_verbal_greeting_probability": {
        "prefix": [
            "greeting.set_non_verbal_greeting_probability",
            "set_non_verbal_greeting_probability"
        ],
        "body": [
            "greeting.set_non_verbal_greeting_probability(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_NON_VERBAL_GREETING_PROBABILITY (0x751809BB) function."
    },
    "greeting.set_greeting_look_at_angle_default": {
        "prefix": [
            "greeting.set_greeting_look_at_angle_default",
            "set_greeting_look_at_angle_default"
        ],
        "body": [
            "greeting.set_greeting_look_at_angle_default(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_LOOK_AT_ANGLE_DEFAULT (0x25A42C69) function."
    },
    "greeting.set_greeting_look_at_angle_actor_specific": {
        "prefix": [
            "greeting.set_greeting_look_at_angle_actor_specific",
            "set_greeting_look_at_angle_actor_specific"
        ],
        "body": [
            "greeting.set_greeting_look_at_angle_actor_specific(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_LOOK_AT_ANGLE_ACTOR_SPECIFIC (0x40121E4F) function."
    },
    "greeting.set_greeting_probability_npc_default": {
        "prefix": [
            "greeting.set_greeting_probability_npc_default",
            "set_greeting_probability_npc_default"
        ],
        "body": [
            "greeting.set_greeting_probability_npc_default(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_PROBABILITY_NPC_DEFAULT (0x86CB8CFB) function."
    },
    "greeting.set_greeting_probability_player_default": {
        "prefix": [
            "greeting.set_greeting_probability_player_default",
            "set_greeting_probability_player_default"
        ],
        "body": [
            "greeting.set_greeting_probability_player_default(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_PROBABILITY_PLAYER_DEFAULT (0xD6AD0016) function."
    },
    "greeting.set_greeting_probability_actor_specific": {
        "prefix": [
            "greeting.set_greeting_probability_actor_specific",
            "set_greeting_probability_actor_specific"
        ],
        "body": [
            "greeting.set_greeting_probability_actor_specific(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_PROBABILITY_ACTOR_SPECIFIC (0xDE84B637) function."
    },
    "greeting.set_greeting_min_time_interval": {
        "prefix": [
            "greeting.set_greeting_min_time_interval",
            "set_greeting_min_time_interval"
        ],
        "body": [
            "greeting.set_greeting_min_time_interval(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_MIN_TIME_INTERVAL (0x8C00C0BE) function."
    },
    "greeting.set_greeting_min_time_interval_same_target": {
        "prefix": [
            "greeting.set_greeting_min_time_interval_same_target",
            "set_greeting_min_time_interval_same_target"
        ],
        "body": [
            "greeting.set_greeting_min_time_interval_same_target(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_MIN_TIME_INTERVAL_SAME_TARGET (0x7CC67B30) function."
    },
    "greeting.set_greeting_max_distance": {
        "prefix": [
            "greeting.set_greeting_max_distance",
            "set_greeting_max_distance"
        ],
        "body": [
            "greeting.set_greeting_max_distance(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_MAX_DISTANCE (0xD4ECD97D) function."
    },
    "greeting.set_greeting_min_movement_speed": {
        "prefix": [
            "greeting.set_greeting_min_movement_speed",
            "set_greeting_min_movement_speed"
        ],
        "body": [
            "greeting.set_greeting_min_movement_speed(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_MIN_MOVEMENT_SPEED (0x826BB889) function."
    },
    "greeting.set_greeting_max_movement_angle": {
        "prefix": [
            "greeting.set_greeting_max_movement_angle",
            "set_greeting_max_movement_angle"
        ],
        "body": [
            "greeting.set_greeting_max_movement_angle(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_MAX_MOVEMENT_ANGLE (0x5473B93A) function."
    },
    "greeting.set_greeting_anim_signal_timeout_duration": {
        "prefix": [
            "greeting.set_greeting_anim_signal_timeout_duration",
            "set_greeting_anim_signal_timeout_duration"
        ],
        "body": [
            "greeting.set_greeting_anim_signal_timeout_duration(unk0 --[[ integer ]])"
        ],
        "description": "GREETING::SET_GREETING_ANIM_SIGNAL_TIMEOUT_DURATION (0x1B1EFCCB) function."
    },
    "gringo.is_gringo_active": {
        "prefix": [
            "gringo.is_gringo_active",
            "is_gringo_active"
        ],
        "body": [
            "local result --[[ boolean ]] = gringo.is_gringo_active()"
        ],
        "description": "GRINGO::IS_GRINGO_ACTIVE (0x86F2C24D) function."
    },
    "gringo.is_gringo_ready": {
        "prefix": [
            "gringo.is_gringo_ready",
            "is_gringo_ready"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.is_gringo_ready(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::IS_GRINGO_READY (0xB9BFCB41) function."
    },
    "gringo.gringo_is_active": {
        "prefix": [
            "gringo.gringo_is_active",
            "gringo_is_active"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_is_active(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_IS_ACTIVE (0xB8A48688) function."
    },
    "gringo.gringo_get_target": {
        "prefix": [
            "gringo.gringo_get_target",
            "gringo_get_target"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_target(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_TARGET (0xC70FDA39) function."
    },
    "gringo.gringo_wait": {
        "prefix": [
            "gringo.gringo_wait",
            "gringo_wait"
        ],
        "body": [
            "gringo.gringo_wait(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_WAIT (0x738FA66B) function."
    },
    "gringo.gringo_stop": {
        "prefix": [
            "gringo.gringo_stop",
            "gringo_stop"
        ],
        "body": [
            "gringo.gringo_stop()"
        ],
        "description": "GRINGO::GRINGO_STOP (0x59647303) function."
    },
    "gringo.gringo_stay_active": {
        "prefix": [
            "gringo.gringo_stay_active",
            "gringo_stay_active"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_stay_active(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_STAY_ACTIVE (0x9175FCFA) function."
    },
    "gringo.gringo_deactivate": {
        "prefix": [
            "gringo.gringo_deactivate",
            "gringo_deactivate"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_deactivate(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_DEACTIVATE (0x25636669) function."
    },
    "gringo.gringo_deactivate_and_reset_actors": {
        "prefix": [
            "gringo.gringo_deactivate_and_reset_actors",
            "gringo_deactivate_and_reset_actors"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_deactivate_and_reset_actors(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_DEACTIVATE_AND_RESET_ACTORS (0xA9F5CDCB) function."
    },
    "gringo.gringo_enable_type": {
        "prefix": [
            "gringo.gringo_enable_type",
            "gringo_enable_type"
        ],
        "body": [
            "gringo.gringo_enable_type(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ENABLE_TYPE (0xCB58D301) function."
    },
    "gringo.gringo_disable_type": {
        "prefix": [
            "gringo.gringo_disable_type",
            "gringo_disable_type"
        ],
        "body": [
            "gringo.gringo_disable_type(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_DISABLE_TYPE (0xCB91CC6E) function."
    },
    "gringo.gringo_enable_spawn": {
        "prefix": [
            "gringo.gringo_enable_spawn",
            "gringo_enable_spawn"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_enable_spawn(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ENABLE_SPAWN (0xA5EDCA4A) function."
    },
    "gringo.locate_gringo_of_type": {
        "prefix": [
            "gringo.locate_gringo_of_type",
            "locate_gringo_of_type"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.locate_gringo_of_type(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::LOCATE_GRINGO_OF_TYPE (0xB1FCFFDC) function."
    },
    "gringo.locate_gringo_of_type_by_id": {
        "prefix": [
            "gringo.locate_gringo_of_type_by_id",
            "locate_gringo_of_type_by_id"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.locate_gringo_of_type_by_id(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::LOCATE_GRINGO_OF_TYPE_BY_ID (0x99356925) function."
    },
    "gringo.locate_gringos_of_type": {
        "prefix": [
            "gringo.locate_gringos_of_type",
            "locate_gringos_of_type"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.locate_gringos_of_type(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "GRINGO::LOCATE_GRINGOS_OF_TYPE (0xBD269877) function."
    },
    "gringo.locate_gringo_of_name": {
        "prefix": [
            "gringo.locate_gringo_of_name",
            "locate_gringo_of_name"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.locate_gringo_of_name(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::LOCATE_GRINGO_OF_NAME (0x08D76BB0) function."
    },
    "gringo.locate_gringos_of_name": {
        "prefix": [
            "gringo.locate_gringos_of_name",
            "locate_gringos_of_name"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.locate_gringos_of_name(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "GRINGO::LOCATE_GRINGOS_OF_NAME (0xE9612679) function."
    },
    "gringo.gringo_actor_can_use": {
        "prefix": [
            "gringo.gringo_actor_can_use",
            "gringo_actor_can_use"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_actor_can_use(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ACTOR_CAN_USE (0xFA37C0FA) function."
    },
    "gringo.gringo_setup_prop_association": {
        "prefix": [
            "gringo.gringo_setup_prop_association",
            "gringo_setup_prop_association"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_setup_prop_association(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SETUP_PROP_ASSOCIATION (0x38771B89) function."
    },
    "gringo.gringo_setup_attr_association": {
        "prefix": [
            "gringo.gringo_setup_attr_association",
            "gringo_setup_attr_association"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_setup_attr_association(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SETUP_ATTR_ASSOCIATION (0xC426D16F) function."
    },
    "gringo.gringo_load_animation": {
        "prefix": [
            "gringo.gringo_load_animation",
            "gringo_load_animation"
        ],
        "body": [
            "gringo.gringo_load_animation(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_LOAD_ANIMATION (0x78B655B1) function."
    },
    "gringo.gringo_unload_animation": {
        "prefix": [
            "gringo.gringo_unload_animation",
            "gringo_unload_animation"
        ],
        "body": [
            "gringo.gringo_unload_animation(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_UNLOAD_ANIMATION (0x777842E3) function."
    },
    "gringo.gringo_load_animation_for_user": {
        "prefix": [
            "gringo.gringo_load_animation_for_user",
            "gringo_load_animation_for_user"
        ],
        "body": [
            "gringo.gringo_load_animation_for_user(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_LOAD_ANIMATION_FOR_USER (0x7D600F2F) function."
    },
    "gringo.gringo_unload_animation_for_user": {
        "prefix": [
            "gringo.gringo_unload_animation_for_user",
            "gringo_unload_animation_for_user"
        ],
        "body": [
            "gringo.gringo_unload_animation_for_user(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_UNLOAD_ANIMATION_FOR_USER (0xBEF32D17) function."
    },
    "gringo.gringo_has_animset_loaded": {
        "prefix": [
            "gringo.gringo_has_animset_loaded",
            "gringo_has_animset_loaded"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_has_animset_loaded(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_HAS_ANIMSET_LOADED (0x2C57A529) function."
    },
    "gringo.gringo_load_animation_for_actor_enum_ext": {
        "prefix": [
            "gringo.gringo_load_animation_for_actor_enum_ext",
            "gringo_load_animation_for_actor_enum_ext"
        ],
        "body": [
            "gringo.gringo_load_animation_for_actor_enum_ext(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_LOAD_ANIMATION_FOR_ACTOR_ENUM_EXT (0x8EB5CE58) function."
    },
    "gringo.gringo_unload_animation_for_actor_enum_ext": {
        "prefix": [
            "gringo.gringo_unload_animation_for_actor_enum_ext",
            "gringo_unload_animation_for_actor_enum_ext"
        ],
        "body": [
            "gringo.gringo_unload_animation_for_actor_enum_ext(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_UNLOAD_ANIMATION_FOR_ACTOR_ENUM_EXT (0x7A759A53) function."
    },
    "gringo.gringo_has_animset_loaded_for_actor_enum_ext": {
        "prefix": [
            "gringo.gringo_has_animset_loaded_for_actor_enum_ext",
            "gringo_has_animset_loaded_for_actor_enum_ext"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_has_animset_loaded_for_actor_enum_ext(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_HAS_ANIMSET_LOADED_FOR_ACTOR_ENUM_EXT (0x0DC149BD) function."
    },
    "gringo.gringo_enable_player_control": {
        "prefix": [
            "gringo.gringo_enable_player_control",
            "gringo_enable_player_control"
        ],
        "body": [
            "gringo.gringo_enable_player_control(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ENABLE_PLAYER_CONTROL (0x0B853FD5) function."
    },
    "gringo.gringo_set_usable_by_player": {
        "prefix": [
            "gringo.gringo_set_usable_by_player",
            "gringo_set_usable_by_player"
        ],
        "body": [
            "gringo.gringo_set_usable_by_player(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_USABLE_BY_PLAYER (0x80317230) function."
    },
    "gringo.gringo_usable_by_actor_enum": {
        "prefix": [
            "gringo.gringo_usable_by_actor_enum",
            "gringo_usable_by_actor_enum"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_usable_by_actor_enum(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_USABLE_BY_ACTOR_ENUM (0xE2DCFF34) function."
    },
    "gringo.gringo_debug_is_selected": {
        "prefix": [
            "gringo.gringo_debug_is_selected",
            "gringo_debug_is_selected"
        ],
        "body": [
            "local result --[[ boolean ]] = gringo.gringo_debug_is_selected()"
        ],
        "description": "GRINGO::GRINGO_DEBUG_IS_SELECTED (0xF4015EFC) function."
    },
    "gringo._gringo_player_override_on": {
        "prefix": [
            "gringo._gringo_player_override_on",
            "_gringo_player_override_on"
        ],
        "body": [
            "local result --[[ boolean ]] = gringo._gringo_player_override_on()"
        ],
        "description": "GRINGO::_GRINGO_PLAYER_OVERRIDE_ON (0x0A0E660E) function."
    },
    "gringo.gringo_get_my_object_ref": {
        "prefix": [
            "gringo.gringo_get_my_object_ref",
            "gringo_get_my_object_ref"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_my_object_ref()"
        ],
        "description": "GRINGO::GRINGO_GET_MY_OBJECT_REF (0x5F7176D6) function."
    },
    "gringo.gringo_get_my_gringo_id": {
        "prefix": [
            "gringo.gringo_get_my_gringo_id",
            "gringo_get_my_gringo_id"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_my_gringo_id()"
        ],
        "description": "GRINGO::GRINGO_GET_MY_GRINGO_ID (0xAE7B3880) function."
    },
    "gringo._gringo_is_break_toggle_set": {
        "prefix": [
            "gringo._gringo_is_break_toggle_set",
            "_gringo_is_break_toggle_set"
        ],
        "body": [
            "local result --[[ integer ]] = gringo._gringo_is_break_toggle_set()"
        ],
        "description": "GRINGO::_GRINGO_IS_BREAK_TOGGLE_SET (0xBBB2780E) function."
    },
    "gringo.gringo_set_all_uses_ownership": {
        "prefix": [
            "gringo.gringo_set_all_uses_ownership",
            "gringo_set_all_uses_ownership"
        ],
        "body": [
            "gringo.gringo_set_all_uses_ownership(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_ALL_USES_OWNERSHIP (0x761BA4BD) function."
    },
    "gringo.gringo_set_use_ownership": {
        "prefix": [
            "gringo.gringo_set_use_ownership",
            "gringo_set_use_ownership"
        ],
        "body": [
            "gringo.gringo_set_use_ownership(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_USE_OWNERSHIP (0x6E86FCB5) function."
    },
    "gringo.gringo_set_child_use_activations": {
        "prefix": [
            "gringo.gringo_set_child_use_activations",
            "gringo_set_child_use_activations"
        ],
        "body": [
            "gringo.gringo_set_child_use_activations(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_CHILD_USE_ACTIVATIONS (0x89DE8A75) function."
    },
    "gringo.gringo_set_common_layer_use_activations": {
        "prefix": [
            "gringo.gringo_set_common_layer_use_activations",
            "gringo_set_common_layer_use_activations"
        ],
        "body": [
            "gringo.gringo_set_common_layer_use_activations(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_COMMON_LAYER_USE_ACTIVATIONS (0x53B9569C) function."
    },
    "gringo.gringo_handles_movement": {
        "prefix": [
            "gringo.gringo_handles_movement",
            "gringo_handles_movement"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_handles_movement(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_HANDLES_MOVEMENT (0xEDF3BF37) function."
    },
    "gringo.is_gringo_component_valid": {
        "prefix": [
            "gringo.is_gringo_component_valid",
            "is_gringo_component_valid"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.is_gringo_component_valid(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::IS_GRINGO_COMPONENT_VALID (0xBD503DC2) function."
    },
    "gringo.gringo_component_check_name": {
        "prefix": [
            "gringo.gringo_component_check_name",
            "gringo_component_check_name"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_component_check_name(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_COMPONENT_CHECK_NAME (0xA766EA5C) function."
    },
    "gringo.gringo_get_component_hash": {
        "prefix": [
            "gringo.gringo_get_component_hash",
            "gringo_get_component_hash"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_component_hash(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_COMPONENT_HASH (0x14E53D6F) function."
    },
    "gringo.gringo_is_component_of_type": {
        "prefix": [
            "gringo.gringo_is_component_of_type",
            "gringo_is_component_of_type"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_is_component_of_type(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_IS_COMPONENT_OF_TYPE (0x284DD17C) function."
    },
    "gringo.gringo_get_first_named_child": {
        "prefix": [
            "gringo.gringo_get_first_named_child",
            "gringo_get_first_named_child"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_first_named_child(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_FIRST_NAMED_CHILD (0xE4C686BA) function."
    },
    "gringo.gringo_get_first_child": {
        "prefix": [
            "gringo.gringo_get_first_child",
            "gringo_get_first_child"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_first_child(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_FIRST_CHILD (0x3E8F94BE) function."
    },
    "gringo.gringo_get_index_of_next_named_child": {
        "prefix": [
            "gringo.gringo_get_index_of_next_named_child",
            "gringo_get_index_of_next_named_child"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_index_of_next_named_child(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_INDEX_OF_NEXT_NAMED_CHILD (0xDD807723) function."
    },
    "gringo.gringo_get_index_of_next_child": {
        "prefix": [
            "gringo.gringo_get_index_of_next_child",
            "gringo_get_index_of_next_child"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_index_of_next_child(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_INDEX_OF_NEXT_CHILD (0xD6EE9534) function."
    },
    "gringo.gringo_get_child_component_count": {
        "prefix": [
            "gringo.gringo_get_child_component_count",
            "gringo_get_child_component_count"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_child_component_count(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_CHILD_COMPONENT_COUNT (0x3FA5FC03) function."
    },
    "gringo.gringo_get_indexed_child_component": {
        "prefix": [
            "gringo.gringo_get_indexed_child_component",
            "gringo_get_indexed_child_component"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_indexed_child_component(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_INDEXED_CHILD_COMPONENT (0xAD313D88) function."
    },
    "gringo.gringo_get_prop_from_component": {
        "prefix": [
            "gringo.gringo_get_prop_from_component",
            "gringo_get_prop_from_component"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_prop_from_component(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_PROP_FROM_COMPONENT (0xA20141C0) function."
    },
    "gringo.gringo_get_prop_from_component_ext": {
        "prefix": [
            "gringo.gringo_get_prop_from_component_ext",
            "gringo_get_prop_from_component_ext"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_prop_from_component_ext(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_PROP_FROM_COMPONENT_EXT (0x9AD6D5B1) function."
    },
    "gringo.gringo_get_parent_component": {
        "prefix": [
            "gringo.gringo_get_parent_component",
            "gringo_get_parent_component"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_parent_component(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_PARENT_COMPONENT (0xD282013F) function."
    },
    "gringo.gringo_get_user_pos_with_offset": {
        "prefix": [
            "gringo.gringo_get_user_pos_with_offset",
            "gringo_get_user_pos_with_offset"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_user_pos_with_offset(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_USER_POS_WITH_OFFSET (0xBC32DA9A) function."
    },
    "gringo.gringo_set_message_return": {
        "prefix": [
            "gringo.gringo_set_message_return",
            "gringo_set_message_return"
        ],
        "body": [
            "gringo.gringo_set_message_return(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_MESSAGE_RETURN (0x37D0F3E9) function."
    },
    "gringo.gringo_get_msg_component_context": {
        "prefix": [
            "gringo.gringo_get_msg_component_context",
            "gringo_get_msg_component_context"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_msg_component_context()"
        ],
        "description": "GRINGO::GRINGO_GET_MSG_COMPONENT_CONTEXT (0xCA589BAB) function."
    },
    "gringo.gringo_has_pending_message": {
        "prefix": [
            "gringo.gringo_has_pending_message",
            "gringo_has_pending_message"
        ],
        "body": [
            "local result --[[ boolean ]] = gringo.gringo_has_pending_message()"
        ],
        "description": "GRINGO::GRINGO_HAS_PENDING_MESSAGE (0xF550F8E7) function."
    },
    "gringo.gringo_get_message_type": {
        "prefix": [
            "gringo.gringo_get_message_type",
            "gringo_get_message_type"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_message_type()"
        ],
        "description": "GRINGO::GRINGO_GET_MESSAGE_TYPE (0x54745DB0) function."
    },
    "gringo.gringo_get_requesting_actor": {
        "prefix": [
            "gringo.gringo_get_requesting_actor",
            "gringo_get_requesting_actor"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_requesting_actor()"
        ],
        "description": "GRINGO::GRINGO_GET_REQUESTING_ACTOR (0x2F096285) function."
    },
    "gringo.gringo_set_request_string": {
        "prefix": [
            "gringo.gringo_set_request_string",
            "gringo_set_request_string"
        ],
        "body": [
            "gringo.gringo_set_request_string(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_REQUEST_STRING (0x7F3020EB) function."
    },
    "gringo.gringo_set_request_failure_reason": {
        "prefix": [
            "gringo.gringo_set_request_failure_reason",
            "gringo_set_request_failure_reason"
        ],
        "body": [
            "gringo.gringo_set_request_failure_reason(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_REQUEST_FAILURE_REASON (0x8CAF5C5C) function."
    },
    "gringo.gringo_is_force_quitting": {
        "prefix": [
            "gringo.gringo_is_force_quitting",
            "gringo_is_force_quitting"
        ],
        "body": [
            "local result --[[ boolean ]] = gringo.gringo_is_force_quitting()"
        ],
        "description": "GRINGO::GRINGO_IS_FORCE_QUITTING (0x926FD361) function."
    },
    "gringo.gringo_is_capable_of_use": {
        "prefix": [
            "gringo.gringo_is_capable_of_use",
            "gringo_is_capable_of_use"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_is_capable_of_use(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_IS_CAPABLE_OF_USE (0x3DEA631B) function."
    },
    "gringo.gringo_should_suspend_mover": {
        "prefix": [
            "gringo.gringo_should_suspend_mover",
            "gringo_should_suspend_mover"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_should_suspend_mover(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SHOULD_SUSPEND_MOVER (0x5CFBF505) function."
    },
    "gringo.gringo_should_fix_mover": {
        "prefix": [
            "gringo.gringo_should_fix_mover",
            "gringo_should_fix_mover"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_should_fix_mover(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SHOULD_FIX_MOVER (0x3A31175A) function."
    },
    "gringo.gringo_get_use_component_position": {
        "prefix": [
            "gringo.gringo_get_use_component_position",
            "gringo_get_use_component_position"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_use_component_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_USE_COMPONENT_POSITION (0x405E3903) function."
    },
    "gringo.gringo_get_use_component_position_ext": {
        "prefix": [
            "gringo.gringo_get_use_component_position_ext",
            "gringo_get_use_component_position_ext"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_use_component_position_ext(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_USE_COMPONENT_POSITION_EXT (0xCE210220) function."
    },
    "gringo.gringo_get_use_component_offset_position_ext": {
        "prefix": [
            "gringo.gringo_get_use_component_offset_position_ext",
            "gringo_get_use_component_offset_position_ext"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_use_component_offset_position_ext(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_USE_COMPONENT_OFFSET_POSITION_EXT (0xA9E00433) function."
    },
    "gringo.gringo_get_use_component_ext": {
        "prefix": [
            "gringo.gringo_get_use_component_ext",
            "gringo_get_use_component_ext"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_use_component_ext(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_USE_COMPONENT_EXT (0xECD4F604) function."
    },
    "gringo.gringo_get_use_component_position_local": {
        "prefix": [
            "gringo.gringo_get_use_component_position_local",
            "gringo_get_use_component_position_local"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_use_component_position_local(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_USE_COMPONENT_POSITION_LOCAL (0x5AF74E19) function."
    },
    "gringo.gringo_get_use_requires_obstacle": {
        "prefix": [
            "gringo.gringo_get_use_requires_obstacle",
            "gringo_get_use_requires_obstacle"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_use_requires_obstacle(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_USE_REQUIRES_OBSTACLE (0x51581898) function."
    },
    "gringo.gringo_is_character_blend_paused": {
        "prefix": [
            "gringo.gringo_is_character_blend_paused",
            "gringo_is_character_blend_paused"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_is_character_blend_paused(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_IS_CHARACTER_BLEND_PAUSED (0xD62D413C) function."
    },
    "gringo.gringo_get_tasked_user_external": {
        "prefix": [
            "gringo.gringo_get_tasked_user_external",
            "gringo_get_tasked_user_external"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_tasked_user_external(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_TASKED_USER_EXTERNAL (0x92FE8D74) function."
    },
    "gringo.gringo_set_reuse_delay": {
        "prefix": [
            "gringo.gringo_set_reuse_delay",
            "gringo_set_reuse_delay"
        ],
        "body": [
            "gringo.gringo_set_reuse_delay(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_REUSE_DELAY (0x8C2914C4) function."
    },
    "gringo.gringo_get_use_component_heading": {
        "prefix": [
            "gringo.gringo_get_use_component_heading",
            "gringo_get_use_component_heading"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_use_component_heading(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_USE_COMPONENT_HEADING (0x5B46757F) function."
    },
    "gringo.gringo_get_use_component_heading_ext": {
        "prefix": [
            "gringo.gringo_get_use_component_heading_ext",
            "gringo_get_use_component_heading_ext"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_use_component_heading_ext(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_USE_COMPONENT_HEADING_EXT (0xD14515A3) function."
    },
    "gringo.gringo_set_availability": {
        "prefix": [
            "gringo.gringo_set_availability",
            "gringo_set_availability"
        ],
        "body": [
            "gringo.gringo_set_availability(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_AVAILABILITY (0xF95DDBF2) function."
    },
    "gringo.gringo_get_availability": {
        "prefix": [
            "gringo.gringo_get_availability",
            "gringo_get_availability"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_availability(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_AVAILABILITY (0x6ADC74CE) function."
    },
    "gringo.gringo_set_availability_ext": {
        "prefix": [
            "gringo.gringo_set_availability_ext",
            "gringo_set_availability_ext"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_set_availability_ext(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_AVAILABILITY_EXT (0xB78BC233) function."
    },
    "gringo.gringo_get_request_mid_action": {
        "prefix": [
            "gringo.gringo_get_request_mid_action",
            "gringo_get_request_mid_action"
        ],
        "body": [
            "local result --[[ boolean ]] = gringo.gringo_get_request_mid_action()"
        ],
        "description": "GRINGO::GRINGO_GET_REQUEST_MID_ACTION (0x5388F37D) function."
    },
    "gringo.gringo_set_component_user": {
        "prefix": [
            "gringo.gringo_set_component_user",
            "gringo_set_component_user"
        ],
        "body": [
            "gringo.gringo_set_component_user(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_COMPONENT_USER (0x94F442D0) function."
    },
    "gringo.gringo_get_component_user": {
        "prefix": [
            "gringo.gringo_get_component_user",
            "gringo_get_component_user"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_component_user(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_COMPONENT_USER (0x15A0E28B) function."
    },
    "gringo.gringo_clear_component_user": {
        "prefix": [
            "gringo.gringo_clear_component_user",
            "gringo_clear_component_user"
        ],
        "body": [
            "gringo.gringo_clear_component_user(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_CLEAR_COMPONENT_USER (0x90FBBB8B) function."
    },
    "gringo.gringo_query_named_component_user": {
        "prefix": [
            "gringo.gringo_query_named_component_user",
            "gringo_query_named_component_user"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_query_named_component_user(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_QUERY_NAMED_COMPONENT_USER (0x0208A8E0) function."
    },
    "gringo.gringo_reward_actor": {
        "prefix": [
            "gringo.gringo_reward_actor",
            "gringo_reward_actor"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_reward_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_REWARD_ACTOR (0x217B4264) function."
    },
    "gringo.gringo_report_use_finished": {
        "prefix": [
            "gringo.gringo_report_use_finished",
            "gringo_report_use_finished"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_report_use_finished(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_REPORT_USE_FINISHED (0x5C11B011) function."
    },
    "gringo.gringo_was_use_successful": {
        "prefix": [
            "gringo.gringo_was_use_successful",
            "gringo_was_use_successful"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_was_use_successful(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_WAS_USE_SUCCESSFUL (0x5F516FC3) function."
    },
    "gringo.gringo_satisfy_motives_of_actor": {
        "prefix": [
            "gringo.gringo_satisfy_motives_of_actor",
            "gringo_satisfy_motives_of_actor"
        ],
        "body": [
            "gringo.gringo_satisfy_motives_of_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SATISFY_MOTIVES_OF_ACTOR (0xB62FE25C) function."
    },
    "gringo.gringo_play_anim_on_actor": {
        "prefix": [
            "gringo.gringo_play_anim_on_actor",
            "gringo_play_anim_on_actor"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_play_anim_on_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_PLAY_ANIM_ON_ACTOR (0xE18BCD70) function."
    },
    "gringo.gringo_is_actor_playing_anim": {
        "prefix": [
            "gringo.gringo_is_actor_playing_anim",
            "gringo_is_actor_playing_anim"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_is_actor_playing_anim(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_IS_ACTOR_PLAYING_ANIM (0x35279C3F) function."
    },
    "gringo.gringo_return_actor_to_default_anims": {
        "prefix": [
            "gringo.gringo_return_actor_to_default_anims",
            "gringo_return_actor_to_default_anims"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_return_actor_to_default_anims(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_RETURN_ACTOR_TO_DEFAULT_ANIMS (0xB62D549E) function."
    },
    "gringo.gringo_owns_actor_anims": {
        "prefix": [
            "gringo.gringo_owns_actor_anims",
            "gringo_owns_actor_anims"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_owns_actor_anims(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_OWNS_ACTOR_ANIMS (0xE9C74577) function."
    },
    "gringo.gringo_play_anim_on_actor_with_prop_component": {
        "prefix": [
            "gringo.gringo_play_anim_on_actor_with_prop_component",
            "gringo_play_anim_on_actor_with_prop_component"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_play_anim_on_actor_with_prop_component(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_PLAY_ANIM_ON_ACTOR_WITH_PROP_COMPONENT (0xB8C419C3) function."
    },
    "gringo.gringo_actor_drop_attached_prop": {
        "prefix": [
            "gringo.gringo_actor_drop_attached_prop",
            "gringo_actor_drop_attached_prop"
        ],
        "body": [
            "gringo.gringo_actor_drop_attached_prop(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ACTOR_DROP_ATTACHED_PROP (0x0B9AE52F) function."
    },
    "gringo.attach_prop_to_anim": {
        "prefix": [
            "gringo.attach_prop_to_anim",
            "attach_prop_to_anim"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.attach_prop_to_anim(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "GRINGO::ATTACH_PROP_TO_ANIM (0x0436C0BF) function."
    },
    "gringo.gringo_attach_prop_to_anim": {
        "prefix": [
            "gringo.gringo_attach_prop_to_anim",
            "gringo_attach_prop_to_anim"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_attach_prop_to_anim(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ATTACH_PROP_TO_ANIM (0x4DB7C61C) function."
    },
    "gringo.gringo_get_prop_attach_slot": {
        "prefix": [
            "gringo.gringo_get_prop_attach_slot",
            "gringo_get_prop_attach_slot"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_prop_attach_slot(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_PROP_ATTACH_SLOT (0xB96874B4) function."
    },
    "gringo.attach_slot_from_string": {
        "prefix": [
            "gringo.attach_slot_from_string",
            "attach_slot_from_string"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.attach_slot_from_string(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::ATTACH_SLOT_FROM_STRING (0x4A61BD63) function."
    },
    "gringo.gringo_anim_get_ast_filename": {
        "prefix": [
            "gringo.gringo_anim_get_ast_filename",
            "gringo_anim_get_ast_filename"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_anim_get_ast_filename(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ANIM_GET_AST_FILENAME (0xADBF3ADF) function."
    },
    "gringo.gringo_anim_get_act_filename": {
        "prefix": [
            "gringo.gringo_anim_get_act_filename",
            "gringo_anim_get_act_filename"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_anim_get_act_filename(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ANIM_GET_ACT_FILENAME (0x721FC9A4) function."
    },
    "gringo.gringo_get_actor_specific_ast_filename": {
        "prefix": [
            "gringo.gringo_get_actor_specific_ast_filename",
            "gringo_get_actor_specific_ast_filename"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_actor_specific_ast_filename(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_ACTOR_SPECIFIC_AST_FILENAME (0x87BA5FE9) function."
    },
    "gringo.gringo_anim_get_act_rootnode": {
        "prefix": [
            "gringo.gringo_anim_get_act_rootnode",
            "gringo_anim_get_act_rootnode"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_anim_get_act_rootnode(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ANIM_GET_ACT_ROOTNODE (0x6263F909) function."
    },
    "gringo.gringo_anim_is_subnode_playing_by_hash": {
        "prefix": [
            "gringo.gringo_anim_is_subnode_playing_by_hash",
            "gringo_anim_is_subnode_playing_by_hash"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_anim_is_subnode_playing_by_hash(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ANIM_IS_SUBNODE_PLAYING_BY_HASH (0xB555A648) function."
    },
    "gringo.gringo_anim_play_node_by_hash": {
        "prefix": [
            "gringo.gringo_anim_play_node_by_hash",
            "gringo_anim_play_node_by_hash"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_anim_play_node_by_hash(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ANIM_PLAY_NODE_BY_HASH (0xAFD53217) function."
    },
    "gringo.gringo_actor_face": {
        "prefix": [
            "gringo.gringo_actor_face",
            "gringo_actor_face"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_actor_face(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ACTOR_FACE (0x29C63CE6) function."
    },
    "gringo.gringo_actor_move_to": {
        "prefix": [
            "gringo.gringo_actor_move_to",
            "gringo_actor_move_to"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_actor_move_to(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ACTOR_MOVE_TO (0x698105FC) function."
    },
    "gringo.gringo_actor_move_to_and_face": {
        "prefix": [
            "gringo.gringo_actor_move_to_and_face",
            "gringo_actor_move_to_and_face"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_actor_move_to_and_face(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ACTOR_MOVE_TO_AND_FACE (0x0AF4FCB9) function."
    },
    "gringo.gringo_actor_move_to_and_face_with_user_offset": {
        "prefix": [
            "gringo.gringo_actor_move_to_and_face_with_user_offset",
            "gringo_actor_move_to_and_face_with_user_offset"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_actor_move_to_and_face_with_user_offset(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_ACTOR_MOVE_TO_AND_FACE_WITH_USER_OFFSET (0xEEE9C799) function."
    },
    "gringo.gringo_set_prop_collisions": {
        "prefix": [
            "gringo.gringo_set_prop_collisions",
            "gringo_set_prop_collisions"
        ],
        "body": [
            "gringo.gringo_set_prop_collisions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_SET_PROP_COLLISIONS (0x98543454) function."
    },
    "gringo.gringo_reinit_prop": {
        "prefix": [
            "gringo.gringo_reinit_prop",
            "gringo_reinit_prop"
        ],
        "body": [
            "gringo.gringo_reinit_prop(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_REINIT_PROP (0x6BA667B5) function."
    },
    "gringo.gringo_is_prop_ready": {
        "prefix": [
            "gringo.gringo_is_prop_ready",
            "gringo_is_prop_ready"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_is_prop_ready(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_IS_PROP_READY (0x24BAABCA) function."
    },
    "gringo.gringo_get_physinst": {
        "prefix": [
            "gringo.gringo_get_physinst",
            "gringo_get_physinst"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_physinst(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_PHYSINST (0x5EC1CABF) function."
    },
    "gringo.gringo_prop_reset_gracefully": {
        "prefix": [
            "gringo.gringo_prop_reset_gracefully",
            "gringo_prop_reset_gracefully"
        ],
        "body": [
            "gringo.gringo_prop_reset_gracefully(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_PROP_RESET_GRACEFULLY (0x22D573D2) function."
    },
    "gringo.gringo_is_target_object_ready": {
        "prefix": [
            "gringo.gringo_is_target_object_ready",
            "gringo_is_target_object_ready"
        ],
        "body": [
            "local result --[[ boolean ]] = gringo.gringo_is_target_object_ready()"
        ],
        "description": "GRINGO::GRINGO_IS_TARGET_OBJECT_READY (0xFF1FC1EF) function."
    },
    "gringo.get_gringo_bool_attr": {
        "prefix": [
            "gringo.get_gringo_bool_attr",
            "get_gringo_bool_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.get_gringo_bool_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GET_GRINGO_BOOL_ATTR (0xFACF08C7) function."
    },
    "gringo.get_gringo_int_attr": {
        "prefix": [
            "gringo.get_gringo_int_attr",
            "get_gringo_int_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.get_gringo_int_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GET_GRINGO_INT_ATTR (0x8A86AF8B) function."
    },
    "gringo.get_gringo_object_ref_attr": {
        "prefix": [
            "gringo.get_gringo_object_ref_attr",
            "get_gringo_object_ref_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.get_gringo_object_ref_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GET_GRINGO_OBJECT_REF_ATTR (0x869D5D92) function."
    },
    "gringo.get_gringo_struct_attr": {
        "prefix": [
            "gringo.get_gringo_struct_attr",
            "get_gringo_struct_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.get_gringo_struct_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GET_GRINGO_STRUCT_ATTR (0xFA22A365) function."
    },
    "gringo.get_gringo_float_attr": {
        "prefix": [
            "gringo.get_gringo_float_attr",
            "get_gringo_float_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.get_gringo_float_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GET_GRINGO_FLOAT_ATTR (0x2EFD2B55) function."
    },
    "gringo.get_gringo_vector_attr": {
        "prefix": [
            "gringo.get_gringo_vector_attr",
            "get_gringo_vector_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.get_gringo_vector_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GET_GRINGO_VECTOR_ATTR (0x5851C408) function."
    },
    "gringo.get_gringo_relative_position_attr": {
        "prefix": [
            "gringo.get_gringo_relative_position_attr",
            "get_gringo_relative_position_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.get_gringo_relative_position_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GET_GRINGO_RELATIVE_POSITION_ATTR (0x1F74EE6C) function."
    },
    "gringo.get_gringo_relative_orientation_attr": {
        "prefix": [
            "gringo.get_gringo_relative_orientation_attr",
            "get_gringo_relative_orientation_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.get_gringo_relative_orientation_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GET_GRINGO_RELATIVE_ORIENTATION_ATTR (0x7E4681E8) function."
    },
    "gringo.get_gringo_string_attr": {
        "prefix": [
            "gringo.get_gringo_string_attr",
            "get_gringo_string_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.get_gringo_string_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::GET_GRINGO_STRING_ATTR (0x6BA58AC7) function."
    },
    "gringo.set_gringo_bool_attr": {
        "prefix": [
            "gringo.set_gringo_bool_attr",
            "set_gringo_bool_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.set_gringo_bool_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::SET_GRINGO_BOOL_ATTR (0xCF6822D7) function."
    },
    "gringo.set_gringo_int_attr": {
        "prefix": [
            "gringo.set_gringo_int_attr",
            "set_gringo_int_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.set_gringo_int_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::SET_GRINGO_INT_ATTR (0x377B2C54) function."
    },
    "gringo.set_gringo_object_ref_attr": {
        "prefix": [
            "gringo.set_gringo_object_ref_attr",
            "set_gringo_object_ref_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.set_gringo_object_ref_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::SET_GRINGO_OBJECT_REF_ATTR (0xAFF7D382) function."
    },
    "gringo.set_gringo_float_attr": {
        "prefix": [
            "gringo.set_gringo_float_attr",
            "set_gringo_float_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.set_gringo_float_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::SET_GRINGO_FLOAT_ATTR (0xBC3C401F) function."
    },
    "gringo.set_gringo_vector_attr": {
        "prefix": [
            "gringo.set_gringo_vector_attr",
            "set_gringo_vector_attr"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.set_gringo_vector_attr(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GRINGO::SET_GRINGO_VECTOR_ATTR (0x5C6831F9) function."
    },
    "gringo.gringo_query_bool": {
        "prefix": [
            "gringo.gringo_query_bool",
            "gringo_query_bool"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_query_bool(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_QUERY_BOOL (0x5C2174C7) function."
    },
    "gringo.gringo_query_int": {
        "prefix": [
            "gringo.gringo_query_int",
            "gringo_query_int"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_query_int(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_QUERY_INT (0x6B1F2FEB) function."
    },
    "gringo.gringo_query_object_ref": {
        "prefix": [
            "gringo.gringo_query_object_ref",
            "gringo_query_object_ref"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_query_object_ref(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_QUERY_OBJECT_REF (0x15D6F3C7) function."
    },
    "gringo.gringo_query_struct": {
        "prefix": [
            "gringo.gringo_query_struct",
            "gringo_query_struct"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_query_struct(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_QUERY_STRUCT (0x1528F08B) function."
    },
    "gringo.gringo_query_float": {
        "prefix": [
            "gringo.gringo_query_float",
            "gringo_query_float"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_query_float(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_QUERY_FLOAT (0x69CF9B75) function."
    },
    "gringo.gringo_query_string": {
        "prefix": [
            "gringo.gringo_query_string",
            "gringo_query_string"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_query_string(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_QUERY_STRING (0x30AF0FA8) function."
    },
    "gringo.gringo_query_prop": {
        "prefix": [
            "gringo.gringo_query_prop",
            "gringo_query_prop"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_query_prop(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_QUERY_PROP (0x2A7B1EFE) function."
    },
    "gringo.gringo_update_bool": {
        "prefix": [
            "gringo.gringo_update_bool",
            "gringo_update_bool"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_update_bool(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_UPDATE_BOOL (0x554330CA) function."
    },
    "gringo.gringo_update_int": {
        "prefix": [
            "gringo.gringo_update_int",
            "gringo_update_int"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_update_int(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_UPDATE_INT (0x0744FEE8) function."
    },
    "gringo.gringo_update_object_ref": {
        "prefix": [
            "gringo.gringo_update_object_ref",
            "gringo_update_object_ref"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_update_object_ref(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_UPDATE_OBJECT_REF (0x4685D538) function."
    },
    "gringo.gringo_update_struct": {
        "prefix": [
            "gringo.gringo_update_struct",
            "gringo_update_struct"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_update_struct(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_UPDATE_STRUCT (0x4DE50AD9) function."
    },
    "gringo.gringo_get_attribute_count": {
        "prefix": [
            "gringo.gringo_get_attribute_count",
            "gringo_get_attribute_count"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_attribute_count(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_ATTRIBUTE_COUNT (0x39B7D772) function."
    },
    "gringo.gringo_get_attribute": {
        "prefix": [
            "gringo.gringo_get_attribute",
            "gringo_get_attribute"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_attribute(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_ATTRIBUTE (0x19411B1F) function."
    },
    "gringo.gringo_is_attribute_valid": {
        "prefix": [
            "gringo.gringo_is_attribute_valid",
            "gringo_is_attribute_valid"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_is_attribute_valid(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_IS_ATTRIBUTE_VALID (0xBED45A9A) function."
    },
    "gringo.gringo_get_attribute_hash": {
        "prefix": [
            "gringo.gringo_get_attribute_hash",
            "gringo_get_attribute_hash"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_attribute_hash(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_ATTRIBUTE_HASH (0xD2680017) function."
    },
    "gringo.gringo_get_vector_attr_by_handle": {
        "prefix": [
            "gringo.gringo_get_vector_attr_by_handle",
            "gringo_get_vector_attr_by_handle"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_vector_attr_by_handle(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_VECTOR_ATTR_BY_HANDLE (0xF0991C9F) function."
    },
    "gringo.gringo_get_string_attr_by_handle": {
        "prefix": [
            "gringo.gringo_get_string_attr_by_handle",
            "gringo_get_string_attr_by_handle"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_string_attr_by_handle(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_STRING_ATTR_BY_HANDLE (0xD7BB1792) function."
    },
    "gringo.gringo_get_float_attr_by_handle": {
        "prefix": [
            "gringo.gringo_get_float_attr_by_handle",
            "gringo_get_float_attr_by_handle"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_float_attr_by_handle(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_FLOAT_ATTR_BY_HANDLE (0xF573B7DE) function."
    },
    "gringo.gringo_get_attr_type_by_handle": {
        "prefix": [
            "gringo.gringo_get_attr_type_by_handle",
            "gringo_get_attr_type_by_handle"
        ],
        "body": [
            "local result --[[ integer ]] = gringo.gringo_get_attr_type_by_handle(unk0 --[[ integer ]])"
        ],
        "description": "GRINGO::GRINGO_GET_ATTR_TYPE_BY_HANDLE (0xBF322F5C) function."
    },
    "gui.gui_make_window": {
        "prefix": [
            "gui.gui_make_window",
            "gui_make_window"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_make_window(parent --[[ integer ]], unk1 --[[ integer ]], windowname --[[ string ]], unk3 --[[ string ]])"
        ],
        "description": "GUI::GUI_MAKE_WINDOW (0xA20246AB) function."
    },
    "gui.gui_make_text": {
        "prefix": [
            "gui.gui_make_text",
            "gui_make_text"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_make_text(guihandle --[[ integer ]], position --[[ integer ]], menutitle --[[ string ]], gxttext --[[ string ]], unk4 --[[ number ]])"
        ],
        "description": "GUI::GUI_MAKE_TEXT (0x68FC1001) function."
    },
    "gui.gui_make_overlay": {
        "prefix": [
            "gui.gui_make_overlay",
            "gui_make_overlay"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_make_overlay(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "GUI::GUI_MAKE_OVERLAY (0xA2A68BAD) function."
    },
    "gui.gui_windows_with_values": {
        "prefix": [
            "gui.gui_windows_with_values",
            "gui_windows_with_values"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_windows_with_values(guihandle --[[ integer ]], windowname --[[ string ]])"
        ],
        "description": "GUI::GUI_WINDOWS_WITH_VALUES (0xF6207DF5) function."
    },
    "gui.gui_move_window_abs": {
        "prefix": [
            "gui.gui_move_window_abs",
            "gui_move_window_abs"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_move_window_abs(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GUI::GUI_MOVE_WINDOW_ABS (0xA7FF2899) function."
    },
    "gui.gui_close_window": {
        "prefix": [
            "gui.gui_close_window",
            "gui_close_window"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_close_window(unk0 --[[ integer ]])"
        ],
        "description": "GUI::GUI_CLOSE_WINDOW (0xFDED9B11) function."
    },
    "gui.gui_window_valid": {
        "prefix": [
            "gui.gui_window_valid",
            "gui_window_valid"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_window_valid(unk0 --[[ integer ]])"
        ],
        "description": "GUI::GUI_WINDOW_VALID (0xA2E6FECB) function."
    },
    "gui.gui_set_text": {
        "prefix": [
            "gui.gui_set_text",
            "gui_set_text"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_set_text(texthandle --[[ integer ]], menuname --[[ string ]])"
        ],
        "description": "GUI::GUI_SET_TEXT (0x5F3A1C35) function."
    },
    "gui.gui_set_text_justify": {
        "prefix": [
            "gui.gui_set_text_justify",
            "gui_set_text_justify"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_set_text_justify(texthandle --[[ integer ]], justifytype --[[ integer ]])"
        ],
        "description": "GUI::GUI_SET_TEXT_JUSTIFY (0x9CC6F183) function."
    },
    "gui.gui_set_text_color": {
        "prefix": [
            "gui.gui_set_text_color",
            "gui_set_text_color"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_set_text_color(texthandle --[[ integer ]], colorarea --[[ number ]])"
        ],
        "description": "GUI::GUI_SET_TEXT_COLOR (0x7600ED4B) function."
    },
    "gui.gui_main_window": {
        "prefix": [
            "gui.gui_main_window",
            "gui_main_window"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_main_window()"
        ],
        "description": "GUI::GUI_MAIN_WINDOW (0x5405B8AA) function."
    },
    "gui.gui_message_released_input": {
        "prefix": [
            "gui.gui_message_released_input",
            "gui_message_released_input"
        ],
        "body": [
            "local result --[[ integer ]] = gui.gui_message_released_input(unk0 --[[ integer ]])"
        ],
        "description": "GUI::GUI_MESSAGE_RELEASED_INPUT (0xD019FF37) function."
    },
    "gui.f2vstr": {
        "prefix": [
            "gui.f2vstr",
            "f2vstr"
        ],
        "body": [
            "local result --[[ string ]] = gui.f2vstr(unk0 --[[ integer ]])"
        ],
        "description": "GUI::F2VSTR (0x4803C120) function."
    },
    "gui.f2str": {
        "prefix": [
            "gui.f2str",
            "f2str"
        ],
        "body": [
            "local result --[[ string ]] = gui.f2str(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "GUI::F2STR (0xFA6BDD8E) function."
    },
    "gui.i2str": {
        "prefix": [
            "gui.i2str",
            "i2str"
        ],
        "body": [
            "local result --[[ string ]] = gui.i2str(unk0 --[[ string ]])"
        ],
        "description": "GUI::I2STR (0x47EF426D) function."
    },
    "gui.v2str": {
        "prefix": [
            "gui.v2str",
            "v2str"
        ],
        "body": [
            "local result --[[ string ]] = gui.v2str(unk0 --[[ integer ]])"
        ],
        "description": "GUI::V2STR (0x52C10147) function."
    },
    "gui.float_to_string_verbose": {
        "prefix": [
            "gui.float_to_string_verbose",
            "float_to_string_verbose"
        ],
        "body": [
            "local result --[[ string ]] = gui.float_to_string_verbose(unk0 --[[ integer ]])"
        ],
        "description": "GUI::FLOAT_TO_STRING_VERBOSE (0x5E339E16) function."
    },
    "gui.float_to_string_formated": {
        "prefix": [
            "gui.float_to_string_formated",
            "float_to_string_formated"
        ],
        "body": [
            "local result --[[ string ]] = gui.float_to_string_formated(flt --[[ number ]], unk3 --[[ integer ]], precision --[[ integer ]])"
        ],
        "description": "GUI::FLOAT_TO_STRING_FORMATED (0x8ED1FF95) function."
    },
    "gui.int_to_string": {
        "prefix": [
            "gui.int_to_string",
            "int_to_string"
        ],
        "body": [
            "local result --[[ string ]] = gui.int_to_string(i --[[ integer ]])"
        ],
        "description": "GUI::INT_TO_STRING (0xA883AFCC) function."
    },
    "gui.vector_to_string": {
        "prefix": [
            "gui.vector_to_string",
            "vector_to_string"
        ],
        "body": [
            "local result --[[ string ]] = gui.vector_to_string(vector --[[ vector3 ]])"
        ],
        "description": "GUI::VECTOR_TO_STRING (0x6B8E4CDD) function."
    },
    "health.get_last_attacker": {
        "prefix": [
            "health.get_last_attacker",
            "get_last_attacker"
        ],
        "body": [
            "local result --[[ integer ]] = health.get_last_attacker(actor --[[ integer ]])"
        ],
        "description": "HEALTH::GET_LAST_ATTACKER (0x2C0F211D) function."
    },
    "health.get_last_hit_time": {
        "prefix": [
            "health.get_last_hit_time",
            "get_last_hit_time"
        ],
        "body": [
            "local result --[[ integer ]] = health.get_last_hit_time(actor --[[ integer ]])"
        ],
        "description": "HEALTH::GET_LAST_HIT_TIME (0x3A207AF2) function."
    },
    "health.get_last_hit_weapon": {
        "prefix": [
            "health.get_last_hit_weapon",
            "get_last_hit_weapon"
        ],
        "body": [
            "local result --[[ integer ]] = health.get_last_hit_weapon(actor --[[ integer ]])"
        ],
        "description": "HEALTH::GET_LAST_HIT_WEAPON (0x07B7AA6B) function."
    },
    "health.get_last_hit_flags": {
        "prefix": [
            "health.get_last_hit_flags",
            "get_last_hit_flags"
        ],
        "body": [
            "local result --[[ integer ]] = health.get_last_hit_flags(actor --[[ integer ]])"
        ],
        "description": "HEALTH::GET_LAST_HIT_FLAGS (0x08308EBA) function."
    },
    "health.get_last_damage": {
        "prefix": [
            "health.get_last_damage",
            "get_last_damage"
        ],
        "body": [
            "local result --[[ integer ]] = health.get_last_damage(actor --[[ integer ]])"
        ],
        "description": "HEALTH::GET_LAST_DAMAGE (0x45556269) function."
    },
    "health.get_last_hit_zone": {
        "prefix": [
            "health.get_last_hit_zone",
            "get_last_hit_zone"
        ],
        "body": [
            "local result --[[ boolean ]] = health.get_last_hit_zone(actor --[[ integer ]], out --[[ integer ]])"
        ],
        "description": "HEALTH::GET_LAST_HIT_ZONE (0x855F9A3B) function."
    },
    "health.get_corpse_last_hit_weapon": {
        "prefix": [
            "health.get_corpse_last_hit_weapon",
            "get_corpse_last_hit_weapon"
        ],
        "body": [
            "local result --[[ integer ]] = health.get_corpse_last_hit_weapon()"
        ],
        "description": "HEALTH::GET_CORPSE_LAST_HIT_WEAPON (0x4747F219) function."
    },
    "health.get_corpse_last_hit_zone": {
        "prefix": [
            "health.get_corpse_last_hit_zone",
            "get_corpse_last_hit_zone"
        ],
        "body": [
            "local result --[[ integer ]] = health.get_corpse_last_hit_zone()"
        ],
        "description": "HEALTH::GET_CORPSE_LAST_HIT_ZONE (0xF75FE17F) function."
    },
    "health.clear_last_hit": {
        "prefix": [
            "health.clear_last_hit",
            "clear_last_hit"
        ],
        "body": [
            "health.clear_last_hit(actor --[[ integer ]])"
        ],
        "description": "HEALTH::CLEAR_LAST_HIT (0x8D696237) function."
    },
    "health.kill_actor": {
        "prefix": [
            "health.kill_actor",
            "kill_actor"
        ],
        "body": [
            "health.kill_actor(actor --[[ integer ]])"
        ],
        "description": "HEALTH::KILL_ACTOR (0x8B08ECA2) function."
    },
    "health.kill_actor_with_killer": {
        "prefix": [
            "health.kill_actor_with_killer",
            "kill_actor_with_killer"
        ],
        "body": [
            "health.kill_actor_with_killer(actor --[[ integer ]], killer --[[ integer ]])"
        ],
        "description": "HEALTH::KILL_ACTOR_WITH_KILLER (0x6085F7AC) function."
    },
    "health.is_actor_alive": {
        "prefix": [
            "health.is_actor_alive",
            "is_actor_alive"
        ],
        "body": [
            "local result --[[ boolean ]] = health.is_actor_alive(actor --[[ integer ]])"
        ],
        "description": "HEALTH::IS_ACTOR_ALIVE (0x2F232639) function."
    },
    "health.is_actor_dead": {
        "prefix": [
            "health.is_actor_dead",
            "is_actor_dead"
        ],
        "body": [
            "local result --[[ boolean ]] = health.is_actor_dead(actor --[[ integer ]])"
        ],
        "description": "HEALTH::IS_ACTOR_DEAD (0x0D798FFE) function."
    },
    "health.is_actor_ragdoll": {
        "prefix": [
            "health.is_actor_ragdoll",
            "is_actor_ragdoll"
        ],
        "body": [
            "local result --[[ boolean ]] = health.is_actor_ragdoll(actor --[[ integer ]])"
        ],
        "description": "HEALTH::IS_ACTOR_RAGDOLL (0x3918D335) function."
    },
    "health.set_actor_health": {
        "prefix": [
            "health.set_actor_health",
            "set_actor_health"
        ],
        "body": [
            "health.set_actor_health(actor --[[ integer ]], health --[[ number ]])"
        ],
        "description": "HEALTH::SET_ACTOR_HEALTH (0xFA090024) function."
    },
    "health.get_actor_health": {
        "prefix": [
            "health.get_actor_health",
            "get_actor_health"
        ],
        "body": [
            "local result --[[ number ]] = health.get_actor_health(actor --[[ integer ]])"
        ],
        "description": "HEALTH::GET_ACTOR_HEALTH (0xF246F15D) function."
    },
    "health.get_actor_max_health": {
        "prefix": [
            "health.get_actor_max_health",
            "get_actor_max_health"
        ],
        "body": [
            "local result --[[ number ]] = health.get_actor_max_health(actor --[[ integer ]])"
        ],
        "description": "HEALTH::GET_ACTOR_MAX_HEALTH (0xB69A84AF) function."
    },
    "health.set_actor_max_health": {
        "prefix": [
            "health.set_actor_max_health",
            "set_actor_max_health"
        ],
        "body": [
            "health.set_actor_max_health(actor --[[ integer ]], maxhealth --[[ number ]])"
        ],
        "description": "HEALTH::SET_ACTOR_MAX_HEALTH (0x165BD4C5) function."
    },
    "health._actor_has_ko_points": {
        "prefix": [
            "health._actor_has_ko_points",
            "_actor_has_ko_points"
        ],
        "body": [
            "local result --[[ integer ]] = health._actor_has_ko_points(unk0 --[[ integer ]])"
        ],
        "description": "HEALTH::_ACTOR_HAS_KO_POINTS (0x7A207FFE) function."
    },
    "health.set_actor_ko_points": {
        "prefix": [
            "health.set_actor_ko_points",
            "set_actor_ko_points"
        ],
        "body": [
            "health.set_actor_ko_points(actor --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HEALTH::SET_ACTOR_KO_POINTS (0x3A2D7759) function."
    },
    "health.get_actor_ko_points": {
        "prefix": [
            "health.get_actor_ko_points",
            "get_actor_ko_points"
        ],
        "body": [
            "local result --[[ integer ]] = health.get_actor_ko_points(actor --[[ integer ]])"
        ],
        "description": "HEALTH::GET_ACTOR_KO_POINTS (0x44787A58) function."
    },
    "health.get_actor_max_ko_points": {
        "prefix": [
            "health.get_actor_max_ko_points",
            "get_actor_max_ko_points"
        ],
        "body": [
            "local result --[[ integer ]] = health.get_actor_max_ko_points(actor --[[ integer ]])"
        ],
        "description": "HEALTH::GET_ACTOR_MAX_KO_POINTS (0xAFC96669) function."
    },
    "health.set_actor_knockouttime": {
        "prefix": [
            "health.set_actor_knockouttime",
            "set_actor_knockouttime"
        ],
        "body": [
            "health.set_actor_knockouttime(actor --[[ integer ]], time --[[ number ]])"
        ],
        "description": "HEALTH::SET_ACTOR_KNOCKOUTTIME (0x4EEC6628) function."
    },
    "health.set_actor_knockouttime_default": {
        "prefix": [
            "health.set_actor_knockouttime_default",
            "set_actor_knockouttime_default"
        ],
        "body": [
            "health.set_actor_knockouttime_default(actor --[[ integer ]], time --[[ number ]])"
        ],
        "description": "HEALTH::SET_ACTOR_KNOCKOUTTIME_DEFAULT (0x479B997B) function."
    },
    "health.is_actor_drunk": {
        "prefix": [
            "health.is_actor_drunk",
            "is_actor_drunk"
        ],
        "body": [
            "local result --[[ boolean ]] = health.is_actor_drunk(actor --[[ integer ]])"
        ],
        "description": "HEALTH::IS_ACTOR_DRUNK (0xFF07D58C) function."
    },
    "health.set_actor_drunk": {
        "prefix": [
            "health.set_actor_drunk",
            "set_actor_drunk"
        ],
        "body": [
            "health.set_actor_drunk(actor --[[ integer ]], isdrunk --[[ boolean ]])"
        ],
        "description": "HEALTH::SET_ACTOR_DRUNK (0x9F57742C) function."
    },
    "health.set_actor_passed_out": {
        "prefix": [
            "health.set_actor_passed_out",
            "set_actor_passed_out"
        ],
        "body": [
            "health.set_actor_passed_out(actor --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HEALTH::SET_ACTOR_PASSED_OUT (0x2A9FD09F) function."
    },
    "health.set_actor_hanging_from_noose": {
        "prefix": [
            "health.set_actor_hanging_from_noose",
            "set_actor_hanging_from_noose"
        ],
        "body": [
            "health.set_actor_hanging_from_noose(actor --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HEALTH::SET_ACTOR_HANGING_FROM_NOOSE (0x5262C0F7) function."
    },
    "health._set_hit_info_dda_level": {
        "prefix": [
            "health._set_hit_info_dda_level",
            "_set_hit_info_dda_level"
        ],
        "body": [
            "health._set_hit_info_dda_level(unk0 --[[ integer ]])"
        ],
        "description": "HEALTH::_SET_HIT_INFO_DDA_LEVEL (0x6287203C) function."
    },
    "health._reset_hit_info_dda_level": {
        "prefix": [
            "health._reset_hit_info_dda_level",
            "_reset_hit_info_dda_level"
        ],
        "body": [
            "health._reset_hit_info_dda_level()"
        ],
        "description": "HEALTH::_RESET_HIT_INFO_DDA_LEVEL (0x1082715D) function."
    },
    "holster.actor_holster_weapon": {
        "prefix": [
            "holster.actor_holster_weapon",
            "actor_holster_weapon"
        ],
        "body": [
            "local result --[[ integer ]] = holster.actor_holster_weapon(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HOLSTER::ACTOR_HOLSTER_WEAPON (0xFE9903CC) function."
    },
    "holster.actor_start_force_holster": {
        "prefix": [
            "holster.actor_start_force_holster",
            "actor_start_force_holster"
        ],
        "body": [
            "local result --[[ integer ]] = holster.actor_start_force_holster(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HOLSTER::ACTOR_START_FORCE_HOLSTER (0x7957CA4F) function."
    },
    "holster.actor_end_force_holster": {
        "prefix": [
            "holster.actor_end_force_holster",
            "actor_end_force_holster"
        ],
        "body": [
            "local result --[[ integer ]] = holster.actor_end_force_holster(unk0 --[[ integer ]])"
        ],
        "description": "HOLSTER::ACTOR_END_FORCE_HOLSTER (0x231E7034) function."
    },
    "holster.actor_draw_last_weapon": {
        "prefix": [
            "holster.actor_draw_last_weapon",
            "actor_draw_last_weapon"
        ],
        "body": [
            "local result --[[ integer ]] = holster.actor_draw_last_weapon(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HOLSTER::ACTOR_DRAW_LAST_WEAPON (0x8FFDCE5C) function."
    },
    "holster.actor_draw_any_weapon": {
        "prefix": [
            "holster.actor_draw_any_weapon",
            "actor_draw_any_weapon"
        ],
        "body": [
            "local result --[[ integer ]] = holster.actor_draw_any_weapon(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HOLSTER::ACTOR_DRAW_ANY_WEAPON (0xD86BFBD8) function."
    },
    "holster.actor_draw_weapon": {
        "prefix": [
            "holster.actor_draw_weapon",
            "actor_draw_weapon"
        ],
        "body": [
            "holster.actor_draw_weapon(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HOLSTER::ACTOR_DRAW_WEAPON (0x953FB7EE) function."
    },
    "holster.actor_is_holstered": {
        "prefix": [
            "holster.actor_is_holstered",
            "actor_is_holstered"
        ],
        "body": [
            "local result --[[ integer ]] = holster.actor_is_holstered(unk0 --[[ integer ]])"
        ],
        "description": "HOLSTER::ACTOR_IS_HOLSTERED (0x6426CCD6) function."
    },
    "holster.set_weapon_selection_enabled": {
        "prefix": [
            "holster.set_weapon_selection_enabled",
            "set_weapon_selection_enabled"
        ],
        "body": [
            "holster.set_weapon_selection_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HOLSTER::SET_WEAPON_SELECTION_ENABLED (0x2E84E682) function."
    },
    "holster.set_weapon_selection_ai_min_range_actor": {
        "prefix": [
            "holster.set_weapon_selection_ai_min_range_actor",
            "set_weapon_selection_ai_min_range_actor"
        ],
        "body": [
            "holster.set_weapon_selection_ai_min_range_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HOLSTER::SET_WEAPON_SELECTION_AI_MIN_RANGE_ACTOR (0x261A4C0E) function."
    },
    "holster.set_weapon_selection_ai_min_range_default": {
        "prefix": [
            "holster.set_weapon_selection_ai_min_range_default",
            "set_weapon_selection_ai_min_range_default"
        ],
        "body": [
            "holster.set_weapon_selection_ai_min_range_default(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HOLSTER::SET_WEAPON_SELECTION_AI_MIN_RANGE_DEFAULT (0x79EFDF7E) function."
    },
    "holster.set_weapon_selection_ai_base_priority_default": {
        "prefix": [
            "holster.set_weapon_selection_ai_base_priority_default",
            "set_weapon_selection_ai_base_priority_default"
        ],
        "body": [
            "holster.set_weapon_selection_ai_base_priority_default(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HOLSTER::SET_WEAPON_SELECTION_AI_BASE_PRIORITY_DEFAULT (0xCA669478) function."
    },
    "holster.set_weapon_selection_ai_can_use_indoors_default": {
        "prefix": [
            "holster.set_weapon_selection_ai_can_use_indoors_default",
            "set_weapon_selection_ai_can_use_indoors_default"
        ],
        "body": [
            "holster.set_weapon_selection_ai_can_use_indoors_default(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HOLSTER::SET_WEAPON_SELECTION_AI_CAN_USE_INDOORS_DEFAULT (0x7DA34015) function."
    },
    "hud.ui_set_prompt_string": {
        "prefix": [
            "hud.ui_set_prompt_string",
            "ui_set_prompt_string"
        ],
        "body": [
            "hud.ui_set_prompt_string(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::UI_SET_PROMPT_STRING (0xFA0CF208) function."
    },
    "hud.ui_set_prompt_icon": {
        "prefix": [
            "hud.ui_set_prompt_icon",
            "ui_set_prompt_icon"
        ],
        "body": [
            "hud.ui_set_prompt_icon(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::UI_SET_PROMPT_ICON (0xA77E0DDF) function."
    },
    "hud.ui_hide_prompt": {
        "prefix": [
            "hud.ui_hide_prompt",
            "ui_hide_prompt"
        ],
        "body": [
            "hud.ui_hide_prompt(unk0 --[[ integer ]])"
        ],
        "description": "HUD::UI_HIDE_PROMPT (0x545EC471) function."
    },
    "hud.flash_set_bool": {
        "prefix": [
            "hud.flash_set_bool",
            "flash_set_bool"
        ],
        "body": [
            "local result --[[ integer ]] = hud.flash_set_bool(scaleformname --[[ string ]], scaleformvarname --[[ string ]], value --[[ boolean ]])"
        ],
        "description": "HUD::FLASH_SET_BOOL (0x34F03EC7) function."
    },
    "hud.flash_set_int": {
        "prefix": [
            "hud.flash_set_int",
            "flash_set_int"
        ],
        "body": [
            "local result --[[ integer ]] = hud.flash_set_int(scaleformname --[[ string ]], scaleformvarname --[[ string ]], value --[[ integer ]])"
        ],
        "description": "HUD::FLASH_SET_INT (0x4778A580) function."
    },
    "hud.flash_set_float": {
        "prefix": [
            "hud.flash_set_float",
            "flash_set_float"
        ],
        "body": [
            "local result --[[ integer ]] = hud.flash_set_float(scaleformname --[[ string ]], scaleformvarname --[[ string ]], value --[[ number ]])"
        ],
        "description": "HUD::FLASH_SET_FLOAT (0xDF024C94) function."
    },
    "hud.flash_set_array_int": {
        "prefix": [
            "hud.flash_set_array_int",
            "flash_set_array_int"
        ],
        "body": [
            "local result --[[ integer ]] = hud.flash_set_array_int(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "HUD::FLASH_SET_ARRAY_INT (0x8A2A1A51) function."
    },
    "hud.flash_set_string": {
        "prefix": [
            "hud.flash_set_string",
            "flash_set_string"
        ],
        "body": [
            "local result --[[ integer ]] = hud.flash_set_string(scaleformname --[[ string ]], scaleformvarname --[[ string ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "HUD::FLASH_SET_STRING (0x9E31EEA7) function."
    },
    "hud.flash_set_array_string": {
        "prefix": [
            "hud.flash_set_array_string",
            "flash_set_array_string"
        ],
        "body": [
            "local result --[[ integer ]] = hud.flash_set_array_string(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "HUD::FLASH_SET_ARRAY_STRING (0x35CDFDC5) function."
    },
    "hud.flash_get_int": {
        "prefix": [
            "hud.flash_get_int",
            "flash_get_int"
        ],
        "body": [
            "local result --[[ integer ]] = hud.flash_get_int(scaleformname --[[ string ]], scaleformvarname --[[ string ]])"
        ],
        "description": "HUD::FLASH_GET_INT (0x03568B83) function."
    },
    "hud.flash_get_float": {
        "prefix": [
            "hud.flash_get_float",
            "flash_get_float"
        ],
        "body": [
            "local result --[[ integer ]] = hud.flash_get_float(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::FLASH_GET_FLOAT (0xA332ACE3) function."
    },
    "hud.flash_set_array_string_formatted": {
        "prefix": [
            "hud.flash_set_array_string_formatted",
            "flash_set_array_string_formatted"
        ],
        "body": [
            "local result --[[ integer ]] = hud.flash_set_array_string_formatted(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "HUD::FLASH_SET_ARRAY_STRING_FORMATTED (0xE39B92B7) function."
    },
    "hud.print_big": {
        "prefix": [
            "hud.print_big",
            "print_big"
        ],
        "body": [
            "hud.print_big(message --[[ string ]], time --[[ number ]], isliteral --[[ boolean ]], unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::PRINT_BIG (0x637016C9) function."
    },
    "hud.print_small_b": {
        "prefix": [
            "hud.print_small_b",
            "print_small_b"
        ],
        "body": [
            "hud.print_small_b(message --[[ string ]], time --[[ number ]], isliteral --[[ boolean ]], unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "HUD::PRINT_SMALL_B (0x4A38C60) function."
    },
    "hud.print_help_b": {
        "prefix": [
            "hud.print_help_b",
            "print_help_b"
        ],
        "body": [
            "hud.print_help_b(text --[[ string ]], time --[[ number ]], isliteral --[[ boolean ]], printtype --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "HUD::PRINT_HELP_B (0xE42A8278) function."
    },
    "hud.print_objective_b": {
        "prefix": [
            "hud.print_objective_b",
            "print_objective_b"
        ],
        "body": [
            "hud.print_objective_b(text --[[ string ]], time --[[ number ]], isliteral --[[ boolean ]], printtype --[[ integer ]], unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "HUD::PRINT_OBJECTIVE_B (0x32394BB6) function."
    },
    "hud.print_money": {
        "prefix": [
            "hud.print_money",
            "print_money"
        ],
        "body": [
            "hud.print_money(gxtentry --[[ string ]], value --[[ integer ]], additionalvalue --[[ integer ]], time --[[ number ]], unk4 --[[ number ]], unk5 --[[ string ]])"
        ],
        "description": "HUD::PRINT_MONEY (0x51948EA6) function."
    },
    "hud.print_big_format": {
        "prefix": [
            "hud.print_big_format",
            "print_big_format"
        ],
        "body": [
            "hud.print_big_format(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "HUD::PRINT_BIG_FORMAT (0xBCB8D17F) function."
    },
    "hud.print_small_format": {
        "prefix": [
            "hud.print_small_format",
            "print_small_format"
        ],
        "body": [
            "hud.print_small_format(text1 --[[ string ]], text2 --[[ string ]], text3 --[[ string ]], text4 --[[ string ]], text5 --[[ string ]], text6 --[[ string ]], unk0 --[[ integer ]], unk1 --[[ boolean ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::PRINT_SMALL_FORMAT (0xBBBDFF7C) function."
    },
    "hud.print_objective_format": {
        "prefix": [
            "hud.print_objective_format",
            "print_objective_format"
        ],
        "body": [
            "hud.print_objective_format(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]])"
        ],
        "description": "HUD::PRINT_OBJECTIVE_FORMAT (0x283B4EFC) function."
    },
    "hud.print_help_format": {
        "prefix": [
            "hud.print_help_format",
            "print_help_format"
        ],
        "body": [
            "hud.print_help_format(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "HUD::PRINT_HELP_FORMAT (0xD8AAF8E0) function."
    },
    "hud.get_last_printed_objective": {
        "prefix": [
            "hud.get_last_printed_objective",
            "get_last_printed_objective"
        ],
        "body": [
            "local result --[[ integer ]] = hud.get_last_printed_objective()"
        ],
        "description": "HUD::GET_LAST_PRINTED_OBJECTIVE (0x14708CB1) function."
    },
    "hud.clear_printed_objective": {
        "prefix": [
            "hud.clear_printed_objective",
            "clear_printed_objective"
        ],
        "body": [
            "hud.clear_printed_objective()"
        ],
        "description": "HUD::CLEAR_PRINTED_OBJECTIVE (0xB9D95B4C) function."
    },
    "hud.hud_is_showing_small_text": {
        "prefix": [
            "hud.hud_is_showing_small_text",
            "hud_is_showing_small_text"
        ],
        "body": [
            "local result --[[ integer ]] = hud.hud_is_showing_small_text()"
        ],
        "description": "HUD::HUD_IS_SHOWING_SMALL_TEXT (0x710B3A83) function."
    },
    "hud.hud_is_showing_big_text": {
        "prefix": [
            "hud.hud_is_showing_big_text",
            "hud_is_showing_big_text"
        ],
        "body": [
            "local result --[[ integer ]] = hud.hud_is_showing_big_text()"
        ],
        "description": "HUD::HUD_IS_SHOWING_BIG_TEXT (0x60135878) function."
    },
    "hud.hud_is_showing_objective": {
        "prefix": [
            "hud.hud_is_showing_objective",
            "hud_is_showing_objective"
        ],
        "body": [
            "local result --[[ integer ]] = hud.hud_is_showing_objective()"
        ],
        "description": "HUD::HUD_IS_SHOWING_OBJECTIVE (0x2F0E7DE7) function."
    },
    "hud.hud_is_showing_help_text": {
        "prefix": [
            "hud.hud_is_showing_help_text",
            "hud_is_showing_help_text"
        ],
        "body": [
            "local result --[[ integer ]] = hud.hud_is_showing_help_text()"
        ],
        "description": "HUD::HUD_IS_SHOWING_HELP_TEXT (0x4B2FCAF6) function."
    },
    "hud.hud_clear_small_text": {
        "prefix": [
            "hud.hud_clear_small_text",
            "hud_clear_small_text"
        ],
        "body": [
            "hud.hud_clear_small_text()"
        ],
        "description": "HUD::HUD_CLEAR_SMALL_TEXT (0x585F008A) function."
    },
    "hud.hud_clear_big_text": {
        "prefix": [
            "hud.hud_clear_big_text",
            "hud_clear_big_text"
        ],
        "body": [
            "hud.hud_clear_big_text()"
        ],
        "description": "HUD::HUD_CLEAR_BIG_TEXT (0xD6DFA6FC) function."
    },
    "hud.hud_clear_counter": {
        "prefix": [
            "hud.hud_clear_counter",
            "hud_clear_counter"
        ],
        "body": [
            "hud.hud_clear_counter()"
        ],
        "description": "HUD::HUD_CLEAR_COUNTER (0x050EFAAB) function."
    },
    "hud.hud_clear_objective": {
        "prefix": [
            "hud.hud_clear_objective",
            "hud_clear_objective"
        ],
        "body": [
            "hud.hud_clear_objective()"
        ],
        "description": "HUD::HUD_CLEAR_OBJECTIVE (0x160BDC7A) function."
    },
    "hud.hud_clear_small_text_queue": {
        "prefix": [
            "hud.hud_clear_small_text_queue",
            "hud_clear_small_text_queue"
        ],
        "body": [
            "hud.hud_clear_small_text_queue()"
        ],
        "description": "HUD::HUD_CLEAR_SMALL_TEXT_QUEUE (0x02E1E708) function."
    },
    "hud.hud_clear_big_text_queue": {
        "prefix": [
            "hud.hud_clear_big_text_queue",
            "hud_clear_big_text_queue"
        ],
        "body": [
            "hud.hud_clear_big_text_queue()"
        ],
        "description": "HUD::HUD_CLEAR_BIG_TEXT_QUEUE (0x777A1CA2) function."
    },
    "hud.hud_clear_objective_queue": {
        "prefix": [
            "hud.hud_clear_objective_queue",
            "hud_clear_objective_queue"
        ],
        "body": [
            "hud.hud_clear_objective_queue()"
        ],
        "description": "HUD::HUD_CLEAR_OBJECTIVE_QUEUE (0xE4DACF40) function."
    },
    "hud.hud_clear_help_queue": {
        "prefix": [
            "hud.hud_clear_help_queue",
            "hud_clear_help_queue"
        ],
        "body": [
            "hud.hud_clear_help_queue()"
        ],
        "description": "HUD::HUD_CLEAR_HELP_QUEUE (0x495164AD) function."
    },
    "hud.add_blip_for_actor": {
        "prefix": [
            "hud.add_blip_for_actor",
            "add_blip_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = hud.add_blip_for_actor(actor --[[ integer ]], blipicon --[[ integer ]], mindistance --[[ number ]], priority --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::ADD_BLIP_FOR_ACTOR (0xEFB9362F) function."
    },
    "hud.add_blip_for_object": {
        "prefix": [
            "hud.add_blip_for_object",
            "add_blip_for_object"
        ],
        "body": [
            "local result --[[ integer ]] = hud.add_blip_for_object(object --[[ integer ]], blipicon --[[ integer ]], mindistance --[[ number ]], priority --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::ADD_BLIP_FOR_OBJECT (0x0E5372EC) function."
    },
    "hud.add_blip_for_coord": {
        "prefix": [
            "hud.add_blip_for_coord",
            "add_blip_for_coord"
        ],
        "body": [
            "local result --[[ integer ]] = hud.add_blip_for_coord(position --[[ vector3 ]], blipicon --[[ integer ]], mindistance --[[ number ]], priority --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::ADD_BLIP_FOR_COORD (0xC6F43D0E) function."
    },
    "hud.change_blip_icon": {
        "prefix": [
            "hud.change_blip_icon",
            "change_blip_icon"
        ],
        "body": [
            "hud.change_blip_icon(blip --[[ integer ]], blipicon --[[ integer ]])"
        ],
        "description": "HUD::CHANGE_BLIP_ICON (0xABD125F6) function."
    },
    "hud.set_blip_pos": {
        "prefix": [
            "hud.set_blip_pos",
            "set_blip_pos"
        ],
        "body": [
            "hud.set_blip_pos(blip --[[ integer ]], position --[[ vector3 ]])"
        ],
        "description": "HUD::SET_BLIP_POS (0xB2EAF8DD) function."
    },
    "hud.set_blip_scale": {
        "prefix": [
            "hud.set_blip_scale",
            "set_blip_scale"
        ],
        "body": [
            "hud.set_blip_scale(blip --[[ integer ]], scale --[[ number ]])"
        ],
        "description": "HUD::SET_BLIP_SCALE (0x1E6EC434) function."
    },
    "hud.set_blip_color": {
        "prefix": [
            "hud.set_blip_color",
            "set_blip_color"
        ],
        "body": [
            "hud.set_blip_color(blip --[[ integer ]], r --[[ number ]], g --[[ number ]], b --[[ number ]], a --[[ number ]])"
        ],
        "description": "HUD::SET_BLIP_COLOR (0xA2B8A736) function."
    },
    "hud.set_blip_priority": {
        "prefix": [
            "hud.set_blip_priority",
            "set_blip_priority"
        ],
        "body": [
            "hud.set_blip_priority(blip --[[ integer ]], priority --[[ integer ]])"
        ],
        "description": "HUD::SET_BLIP_PRIORITY (0xCE87DA6F) function."
    },
    "hud.set_blip_blink": {
        "prefix": [
            "hud.set_blip_blink",
            "set_blip_blink"
        ],
        "body": [
            "hud.set_blip_blink(blip --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "HUD::SET_BLIP_BLINK (0x04B8C8C6) function."
    },
    "hud.set_blip_flag": {
        "prefix": [
            "hud.set_blip_flag",
            "set_blip_flag"
        ],
        "body": [
            "hud.set_blip_flag(blip --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::SET_BLIP_FLAG (0xA9A01C70) function."
    },
    "hud.set_blip_visible": {
        "prefix": [
            "hud.set_blip_visible",
            "set_blip_visible"
        ],
        "body": [
            "hud.set_blip_visible(blip --[[ integer ]], visible --[[ boolean ]])"
        ],
        "description": "HUD::SET_BLIP_VISIBLE (0x9318D3D2) function."
    },
    "hud.is_blip_visible": {
        "prefix": [
            "hud.is_blip_visible",
            "is_blip_visible"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.is_blip_visible(blip --[[ integer ]])"
        ],
        "description": "HUD::IS_BLIP_VISIBLE (0x1E7A6623) function."
    },
    "hud.is_blip_valid": {
        "prefix": [
            "hud.is_blip_valid",
            "is_blip_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.is_blip_valid(blip --[[ integer ]])"
        ],
        "description": "HUD::IS_BLIP_VALID (0xDCC10BA9) function."
    },
    "hud.remove_blip": {
        "prefix": [
            "hud.remove_blip",
            "remove_blip"
        ],
        "body": [
            "hud.remove_blip(blip --[[ integer ]])"
        ],
        "description": "HUD::REMOVE_BLIP (0xD8C3C1CD) function."
    },
    "hud.get_blip_on_actor": {
        "prefix": [
            "hud.get_blip_on_actor",
            "get_blip_on_actor"
        ],
        "body": [
            "local result --[[ integer ]] = hud.get_blip_on_actor(actor --[[ integer ]])"
        ],
        "description": "HUD::GET_BLIP_ON_ACTOR (0x1449EE9E) function."
    },
    "hud.get_blip_on_object": {
        "prefix": [
            "hud.get_blip_on_object",
            "get_blip_on_object"
        ],
        "body": [
            "local result --[[ integer ]] = hud.get_blip_on_object(obj --[[ integer ]])"
        ],
        "description": "HUD::GET_BLIP_ON_OBJECT (0xE3E30992) function."
    },
    "hud.get_blip_icon": {
        "prefix": [
            "hud.get_blip_icon",
            "get_blip_icon"
        ],
        "body": [
            "local result --[[ integer ]] = hud.get_blip_icon(blip --[[ integer ]])"
        ],
        "description": "HUD::GET_BLIP_ICON (0xEE4F4B7D) function."
    },
    "hud.set_current_map": {
        "prefix": [
            "hud.set_current_map",
            "set_current_map"
        ],
        "body": [
            "local result --[[ integer ]] = hud.set_current_map(unk0 --[[ integer ]])"
        ],
        "description": "HUD::SET_CURRENT_MAP (0x014C7C29) function."
    },
    "hud.set_stamina_blink": {
        "prefix": [
            "hud.set_stamina_blink",
            "set_stamina_blink"
        ],
        "body": [
            "hud.set_stamina_blink(unk0 --[[ integer ]])"
        ],
        "description": "HUD::SET_STAMINA_BLINK (0x39F2E5F1) function."
    },
    "hud.set_deadeye_blink": {
        "prefix": [
            "hud.set_deadeye_blink",
            "set_deadeye_blink"
        ],
        "body": [
            "hud.set_deadeye_blink(unk0 --[[ integer ]])"
        ],
        "description": "HUD::SET_DEADEYE_BLINK (0xA543B120) function."
    },
    "hud.set_hud_map_scale_walk": {
        "prefix": [
            "hud.set_hud_map_scale_walk",
            "set_hud_map_scale_walk"
        ],
        "body": [
            "hud.set_hud_map_scale_walk(scale --[[ number ]])"
        ],
        "description": "HUD::SET_HUD_MAP_SCALE_WALK (0x7FF20D84) function."
    },
    "hud.set_hud_map_scale_drive": {
        "prefix": [
            "hud.set_hud_map_scale_drive",
            "set_hud_map_scale_drive"
        ],
        "body": [
            "hud.set_hud_map_scale_drive(scale --[[ number ]])"
        ],
        "description": "HUD::SET_HUD_MAP_SCALE_DRIVE (0x364450B1) function."
    },
    "hud.set_hud_map_scale_override": {
        "prefix": [
            "hud.set_hud_map_scale_override",
            "set_hud_map_scale_override"
        ],
        "body": [
            "hud.set_hud_map_scale_override(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::SET_HUD_MAP_SCALE_OVERRIDE (0xB4614D11) function."
    },
    "hud.get_radar_radius": {
        "prefix": [
            "hud.get_radar_radius",
            "get_radar_radius"
        ],
        "body": [
            "local result --[[ number ]] = hud.get_radar_radius()"
        ],
        "description": "HUD::GET_RADAR_RADIUS (0x6B33CBCC) function."
    },
    "hud.abort_hud_map_scale_override": {
        "prefix": [
            "hud.abort_hud_map_scale_override",
            "abort_hud_map_scale_override"
        ],
        "body": [
            "hud.abort_hud_map_scale_override()"
        ],
        "description": "HUD::ABORT_HUD_MAP_SCALE_OVERRIDE (0x33CE49C9) function."
    },
    "hud._0x2148ac15": {
        "prefix": [
            "hud._0x2148ac15",
            "_0x2148ac15"
        ],
        "body": [
            "hud._0x2148ac15(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::_0x2148AC15 (0x2148AC15) function."
    },
    "hud._0x444c3c32": {
        "prefix": [
            "hud._0x444c3c32",
            "_0x444c3c32"
        ],
        "body": [
            "hud._0x444c3c32(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::_0x444C3C32 (0x444C3C32) function."
    },
    "hud.set_blip_hudmap_only": {
        "prefix": [
            "hud.set_blip_hudmap_only",
            "set_blip_hudmap_only"
        ],
        "body": [
            "hud.set_blip_hudmap_only(blip --[[ integer ]], toggle --[[ boolean ]])"
        ],
        "description": "HUD::SET_BLIP_HUDMAP_ONLY (0x1E98AFEC) function."
    },
    "hud.set_blip_pausemap_only": {
        "prefix": [
            "hud.set_blip_pausemap_only",
            "set_blip_pausemap_only"
        ],
        "body": [
            "hud.set_blip_pausemap_only(blip --[[ integer ]], toggle --[[ boolean ]])"
        ],
        "description": "HUD::SET_BLIP_PAUSEMAP_ONLY (0xFF3DB575) function."
    },
    "hud.get_blip_impairment_mask": {
        "prefix": [
            "hud.get_blip_impairment_mask",
            "get_blip_impairment_mask"
        ],
        "body": [
            "local result --[[ integer ]] = hud.get_blip_impairment_mask(unk0 --[[ integer ]])"
        ],
        "description": "HUD::GET_BLIP_IMPAIRMENT_MASK (0xD76F1E9A) function."
    },
    "hud.set_blip_impairment_mask": {
        "prefix": [
            "hud.set_blip_impairment_mask",
            "set_blip_impairment_mask"
        ],
        "body": [
            "hud.set_blip_impairment_mask(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::SET_BLIP_IMPAIRMENT_MASK (0xBC05EBB3) function."
    },
    "hud.set_blip_max_distance": {
        "prefix": [
            "hud.set_blip_max_distance",
            "set_blip_max_distance"
        ],
        "body": [
            "hud.set_blip_max_distance(blip --[[ integer ]], maxdistance --[[ number ]])"
        ],
        "description": "HUD::SET_BLIP_MAX_DISTANCE (0xCE79F8E2) function."
    },
    "hud.set_blip_min_distance": {
        "prefix": [
            "hud.set_blip_min_distance",
            "set_blip_min_distance"
        ],
        "body": [
            "hud.set_blip_min_distance(blip --[[ integer ]], mindistance --[[ number ]])"
        ],
        "description": "HUD::SET_BLIP_MIN_DISTANCE (0xFBA76D7E) function."
    },
    "hud._set_blip_height_enabled": {
        "prefix": [
            "hud._set_blip_height_enabled",
            "_set_blip_height_enabled"
        ],
        "body": [
            "hud._set_blip_height_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::_SET_BLIP_HEIGHT_ENABLED (0x6077F3AE) function."
    },
    "hud.set_blip_name": {
        "prefix": [
            "hud.set_blip_name",
            "set_blip_name"
        ],
        "body": [
            "hud.set_blip_name(blip --[[ integer ]], gxtentry --[[ string ]])"
        ],
        "description": "HUD::SET_BLIP_NAME (0xDC249B12) function."
    },
    "hud.clear_regions": {
        "prefix": [
            "hud.clear_regions",
            "clear_regions"
        ],
        "body": [
            "hud.clear_regions()"
        ],
        "description": "HUD::CLEAR_REGIONS (0xB1DAEF0C) function."
    },
    "hud.append_region": {
        "prefix": [
            "hud.append_region",
            "append_region"
        ],
        "body": [
            "local result --[[ integer ]] = hud.append_region(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "HUD::APPEND_REGION (0x95666EE0) function."
    },
    "hud.set_region_visited": {
        "prefix": [
            "hud.set_region_visited",
            "set_region_visited"
        ],
        "body": [
            "hud.set_region_visited(region --[[ integer ]], visited --[[ boolean ]])"
        ],
        "description": "HUD::SET_REGION_VISITED (0x970AC1F7) function."
    },
    "hud.is_hud_map_draw_enabled": {
        "prefix": [
            "hud.is_hud_map_draw_enabled",
            "is_hud_map_draw_enabled"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.is_hud_map_draw_enabled()"
        ],
        "description": "HUD::IS_HUD_MAP_DRAW_ENABLED (0xF5B7B208) function."
    },
    "hud.set_hud_map_draw_enabled": {
        "prefix": [
            "hud.set_hud_map_draw_enabled",
            "set_hud_map_draw_enabled"
        ],
        "body": [
            "hud.set_hud_map_draw_enabled(enable --[[ boolean ]])"
        ],
        "description": "HUD::SET_HUD_MAP_DRAW_ENABLED (0xA094152A) function."
    },
    "hud.set_hud_map_draw_enabled_timed": {
        "prefix": [
            "hud.set_hud_map_draw_enabled_timed",
            "set_hud_map_draw_enabled_timed"
        ],
        "body": [
            "hud.set_hud_map_draw_enabled_timed(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::SET_HUD_MAP_DRAW_ENABLED_TIMED (0x0DFF578A) function."
    },
    "hud.is_hud_map_visible": {
        "prefix": [
            "hud.is_hud_map_visible",
            "is_hud_map_visible"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.is_hud_map_visible()"
        ],
        "description": "HUD::IS_HUD_MAP_VISIBLE (0xCE043618) function."
    },
    "hud.set_radar_tiles_visible": {
        "prefix": [
            "hud.set_radar_tiles_visible",
            "set_radar_tiles_visible"
        ],
        "body": [
            "hud.set_radar_tiles_visible(enable --[[ boolean ]])"
        ],
        "description": "HUD::SET_RADAR_TILES_VISIBLE (0x48DB367D) function."
    },
    "hud.hud_set_shoot_blip_max_distance": {
        "prefix": [
            "hud.hud_set_shoot_blip_max_distance",
            "hud_set_shoot_blip_max_distance"
        ],
        "body": [
            "hud.hud_set_shoot_blip_max_distance(unk0 --[[ integer ]])"
        ],
        "description": "HUD::HUD_SET_SHOOT_BLIP_MAX_DISTANCE (0x4FCE7B9D) function."
    },
    "hud.hud_set_shoot_blip_enabled_for_actor": {
        "prefix": [
            "hud.hud_set_shoot_blip_enabled_for_actor",
            "hud_set_shoot_blip_enabled_for_actor"
        ],
        "body": [
            "hud.hud_set_shoot_blip_enabled_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::HUD_SET_SHOOT_BLIP_ENABLED_FOR_ACTOR (0x14585073) function."
    },
    "hud.hud_clear_shoot_blip_icon_for_actor": {
        "prefix": [
            "hud.hud_clear_shoot_blip_icon_for_actor",
            "hud_clear_shoot_blip_icon_for_actor"
        ],
        "body": [
            "hud.hud_clear_shoot_blip_icon_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "HUD::HUD_CLEAR_SHOOT_BLIP_ICON_FOR_ACTOR (0x5EA2E02D) function."
    },
    "hud.hud_get_shoot_blip_icon_for_actor": {
        "prefix": [
            "hud.hud_get_shoot_blip_icon_for_actor",
            "hud_get_shoot_blip_icon_for_actor"
        ],
        "body": [
            "local result --[[ integer ]] = hud.hud_get_shoot_blip_icon_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "HUD::HUD_GET_SHOOT_BLIP_ICON_FOR_ACTOR (0xE78A0469) function."
    },
    "hud.hud_set_shoot_blip_icon_for_actor": {
        "prefix": [
            "hud.hud_set_shoot_blip_icon_for_actor",
            "hud_set_shoot_blip_icon_for_actor"
        ],
        "body": [
            "hud.hud_set_shoot_blip_icon_for_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::HUD_SET_SHOOT_BLIP_ICON_FOR_ACTOR (0x02755628) function."
    },
    "hud.set_stat_message": {
        "prefix": [
            "hud.set_stat_message",
            "set_stat_message"
        ],
        "body": [
            "hud.set_stat_message(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]], unk12 --[[ integer ]])"
        ],
        "description": "HUD::SET_STAT_MESSAGE (0x73DA6AF1) function."
    },
    "hud.clear_stat_message": {
        "prefix": [
            "hud.clear_stat_message",
            "clear_stat_message"
        ],
        "body": [
            "hud.clear_stat_message()"
        ],
        "description": "HUD::CLEAR_STAT_MESSAGE (0x906E0138) function."
    },
    "hud.is_stat_message_showing": {
        "prefix": [
            "hud.is_stat_message_showing",
            "is_stat_message_showing"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.is_stat_message_showing()"
        ],
        "description": "HUD::IS_STAT_MESSAGE_SHOWING (0x919142BE) function."
    },
    "hud.hud_timer_display": {
        "prefix": [
            "hud.hud_timer_display",
            "hud_timer_display"
        ],
        "body": [
            "hud.hud_timer_display(unk0 --[[ integer ]])"
        ],
        "description": "HUD::HUD_TIMER_DISPLAY (0x149F9E46) function."
    },
    "hud.hud_timer_get": {
        "prefix": [
            "hud.hud_timer_get",
            "hud_timer_get"
        ],
        "body": [
            "local result --[[ integer ]] = hud.hud_timer_get()"
        ],
        "description": "HUD::HUD_TIMER_GET (0x1C6919EF) function."
    },
    "hud.hud_timer_countdown": {
        "prefix": [
            "hud.hud_timer_countdown",
            "hud_timer_countdown"
        ],
        "body": [
            "hud.hud_timer_countdown(unk0 --[[ integer ]])"
        ],
        "description": "HUD::HUD_TIMER_COUNTDOWN (0xF4209CCC) function."
    },
    "hud.hud_timer_pause": {
        "prefix": [
            "hud.hud_timer_pause",
            "hud_timer_pause"
        ],
        "body": [
            "hud.hud_timer_pause()"
        ],
        "description": "HUD::HUD_TIMER_PAUSE (0x3383E839) function."
    },
    "hud.wantedfx_enabled": {
        "prefix": [
            "hud.wantedfx_enabled",
            "wantedfx_enabled"
        ],
        "body": [
            "hud.wantedfx_enabled(toggle --[[ boolean ]])"
        ],
        "description": "HUD::WANTEDFX_ENABLED (0x31A55281) function."
    },
    "hud.wantedfx_set_level": {
        "prefix": [
            "hud.wantedfx_set_level",
            "wantedfx_set_level"
        ],
        "body": [
            "hud.wantedfx_set_level(level --[[ number ]])"
        ],
        "description": "HUD::WANTEDFX_SET_LEVEL (0x651C1FC2) function."
    },
    "hud.hud_counter_display": {
        "prefix": [
            "hud.hud_counter_display",
            "hud_counter_display"
        ],
        "body": [
            "hud.hud_counter_display(unk0 --[[ integer ]])"
        ],
        "description": "HUD::HUD_COUNTER_DISPLAY (0x9A35DFC6) function."
    },
    "hud.hud_counter_set": {
        "prefix": [
            "hud.hud_counter_set",
            "hud_counter_set"
        ],
        "body": [
            "hud.hud_counter_set(unk0 --[[ integer ]])"
        ],
        "description": "HUD::HUD_COUNTER_SET (0x7D94675D) function."
    },
    "hud.hud_enable": {
        "prefix": [
            "hud.hud_enable",
            "hud_enable"
        ],
        "body": [
            "hud.hud_enable(value --[[ boolean ]])"
        ],
        "description": "HUD::HUD_ENABLE (0x0C180A3F) function."
    },
    "hud.hud_set_fade_color": {
        "prefix": [
            "hud.hud_set_fade_color",
            "hud_set_fade_color"
        ],
        "body": [
            "hud.hud_set_fade_color(r --[[ number ]], g --[[ number ]], b --[[ number ]], a --[[ number ]])"
        ],
        "description": "HUD::HUD_SET_FADE_COLOR (0x4DA5F502) function."
    },
    "hud.hud_fade_out": {
        "prefix": [
            "hud.hud_fade_out",
            "hud_fade_out"
        ],
        "body": [
            "hud.hud_fade_out(unk0 --[[ number ]], unk1 --[[ number ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::HUD_FADE_OUT (0x52963366) function."
    },
    "hud.hud_fade_to_loading_screen": {
        "prefix": [
            "hud.hud_fade_to_loading_screen",
            "hud_fade_to_loading_screen"
        ],
        "body": [
            "hud.hud_fade_to_loading_screen()"
        ],
        "description": "HUD::HUD_FADE_TO_LOADING_SCREEN (0xB0B4296A) function."
    },
    "hud.hud_fade_in": {
        "prefix": [
            "hud.hud_fade_in",
            "hud_fade_in"
        ],
        "body": [
            "hud.hud_fade_in(unk0 --[[ number ]], unk1 --[[ number ]])"
        ],
        "description": "HUD::HUD_FADE_IN (0xF90F6C51) function."
    },
    "hud.hud_fade_in_now": {
        "prefix": [
            "hud.hud_fade_in_now",
            "hud_fade_in_now"
        ],
        "body": [
            "hud.hud_fade_in_now(unk0 --[[ number ]], unk1 --[[ number ]])"
        ],
        "description": "HUD::HUD_FADE_IN_NOW (0x7E4A92CF) function."
    },
    "hud.hud_is_faded": {
        "prefix": [
            "hud.hud_is_faded",
            "hud_is_faded"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.hud_is_faded()"
        ],
        "description": "HUD::HUD_IS_FADED (0x4EFFFC06) function."
    },
    "hud.hud_is_fading": {
        "prefix": [
            "hud.hud_is_fading",
            "hud_is_fading"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.hud_is_fading()"
        ],
        "description": "HUD::HUD_IS_FADING (0xE5CC6F08) function."
    },
    "hud.ui_show_mission_loadingscreen": {
        "prefix": [
            "hud.ui_show_mission_loadingscreen",
            "ui_show_mission_loadingscreen"
        ],
        "body": [
            "hud.ui_show_mission_loadingscreen(unk0 --[[ integer ]])"
        ],
        "description": "HUD::UI_SHOW_MISSION_LOADINGSCREEN (0xC6E36B1D) function."
    },
    "hud.ui_show_random_loadingscreen": {
        "prefix": [
            "hud.ui_show_random_loadingscreen",
            "ui_show_random_loadingscreen"
        ],
        "body": [
            "hud.ui_show_random_loadingscreen()"
        ],
        "description": "HUD::UI_SHOW_RANDOM_LOADINGSCREEN (0xEF270DC9) function."
    },
    "hud.flash_intro_shutdown": {
        "prefix": [
            "hud.flash_intro_shutdown",
            "flash_intro_shutdown"
        ],
        "body": [
            "hud.flash_intro_shutdown()"
        ],
        "description": "HUD::FLASH_INTRO_SHUTDOWN (0x18346D88) function."
    },
    "hud.flash_intro_fade_logo": {
        "prefix": [
            "hud.flash_intro_fade_logo",
            "flash_intro_fade_logo"
        ],
        "body": [
            "hud.flash_intro_fade_logo(fade --[[ boolean ]])"
        ],
        "description": "HUD::FLASH_INTRO_FADE_LOGO (0xBB2EABF9) function."
    },
    "hud.flash_intro_fade_press_start": {
        "prefix": [
            "hud.flash_intro_fade_press_start",
            "flash_intro_fade_press_start"
        ],
        "body": [
            "hud.flash_intro_fade_press_start(fade --[[ boolean ]])"
        ],
        "description": "HUD::FLASH_INTRO_FADE_PRESS_START (0x9E6D7105) function."
    },
    "hud.flash_intro_are_legals_completed": {
        "prefix": [
            "hud.flash_intro_are_legals_completed",
            "flash_intro_are_legals_completed"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.flash_intro_are_legals_completed()"
        ],
        "description": "HUD::FLASH_INTRO_ARE_LEGALS_COMPLETED (0x82A290D4) function."
    },
    "hud.movie_player_stop_movie": {
        "prefix": [
            "hud.movie_player_stop_movie",
            "movie_player_stop_movie"
        ],
        "body": [
            "hud.movie_player_stop_movie()"
        ],
        "description": "HUD::MOVIE_PLAYER_STOP_MOVIE (0x0C197810) function."
    },
    "hud.ui_is_showing_dialog": {
        "prefix": [
            "hud.ui_is_showing_dialog",
            "ui_is_showing_dialog"
        ],
        "body": [
            "local result --[[ integer ]] = hud.ui_is_showing_dialog()"
        ],
        "description": "HUD::UI_IS_SHOWING_DIALOG (0xC64DF45D) function."
    },
    "hud.ui_transition_to": {
        "prefix": [
            "hud.ui_transition_to",
            "ui_transition_to"
        ],
        "body": [
            "hud.ui_transition_to(uilayer --[[ string ]])"
        ],
        "description": "HUD::UI_TRANSITION_TO (0xD0F2D2B6) function."
    },
    "hud.ui_get_reboot_reason": {
        "prefix": [
            "hud.ui_get_reboot_reason",
            "ui_get_reboot_reason"
        ],
        "body": [
            "local result --[[ integer ]] = hud.ui_get_reboot_reason(unk0 --[[ integer ]])"
        ],
        "description": "HUD::UI_GET_REBOOT_REASON (0x111554E2) function."
    },
    "hud.ui_send_event": {
        "prefix": [
            "hud.ui_send_event",
            "ui_send_event"
        ],
        "body": [
            "hud.ui_send_event(event --[[ string ]])"
        ],
        "description": "HUD::UI_SEND_EVENT (0xB58825F5) function."
    },
    "hud.ui_enter": {
        "prefix": [
            "hud.ui_enter",
            "ui_enter"
        ],
        "body": [
            "hud.ui_enter(uilayer --[[ string ]])"
        ],
        "description": "HUD::UI_ENTER (0x594F2657) function."
    },
    "hud._0x8a8bdcf9": {
        "prefix": [
            "hud._0x8a8bdcf9",
            "_0x8a8bdcf9"
        ],
        "body": [
            "hud._0x8a8bdcf9(enable --[[ boolean ]])"
        ],
        "description": "HUD::_0x8A8BDCF9 (0x8A8BDCF9) function."
    },
    "hud.clear_newspaper": {
        "prefix": [
            "hud.clear_newspaper",
            "clear_newspaper"
        ],
        "body": [
            "hud.clear_newspaper()"
        ],
        "description": "HUD::CLEAR_NEWSPAPER (0x4486E8C7) function."
    },
    "hud.show_newspaper": {
        "prefix": [
            "hud.show_newspaper",
            "show_newspaper"
        ],
        "body": [
            "hud.show_newspaper(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "HUD::SHOW_NEWSPAPER (0x175CD937) function."
    },
    "hud.set_newspaper_info": {
        "prefix": [
            "hud.set_newspaper_info",
            "set_newspaper_info"
        ],
        "body": [
            "hud.set_newspaper_info(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::SET_NEWSPAPER_INFO (0x47D2DE08) function."
    },
    "hud.set_gps_path": {
        "prefix": [
            "hud.set_gps_path",
            "set_gps_path"
        ],
        "body": [
            "hud.set_gps_path(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "HUD::SET_GPS_PATH (0xD82F910C) function."
    },
    "hud.is_gps_recompute": {
        "prefix": [
            "hud.is_gps_recompute",
            "is_gps_recompute"
        ],
        "body": [
            "local result --[[ integer ]] = hud.is_gps_recompute(unk0 --[[ integer ]])"
        ],
        "description": "HUD::IS_GPS_RECOMPUTE (0xAA322DFC) function."
    },
    "hud.clear_gps_path": {
        "prefix": [
            "hud.clear_gps_path",
            "clear_gps_path"
        ],
        "body": [
            "hud.clear_gps_path(unk0 --[[ integer ]])"
        ],
        "description": "HUD::CLEAR_GPS_PATH (0xD077D8B6) function."
    },
    "hud.get_user_defined_waypoint": {
        "prefix": [
            "hud.get_user_defined_waypoint",
            "get_user_defined_waypoint"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.get_user_defined_waypoint(position --[[ vector3 ]])"
        ],
        "description": "HUD::GET_USER_DEFINED_WAYPOINT (0x82F63365) function."
    },
    "hud.is_user_defined_waypoint_cleared": {
        "prefix": [
            "hud.is_user_defined_waypoint_cleared",
            "is_user_defined_waypoint_cleared"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.is_user_defined_waypoint_cleared()"
        ],
        "description": "HUD::IS_USER_DEFINED_WAYPOINT_CLEARED (0x34711B59) function."
    },
    "hud.find_traffic_path": {
        "prefix": [
            "hud.find_traffic_path",
            "find_traffic_path"
        ],
        "body": [
            "local result --[[ integer ]] = hud.find_traffic_path(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "HUD::FIND_TRAFFIC_PATH (0xA5BDC21D) function."
    },
    "hud.is_teleportation": {
        "prefix": [
            "hud.is_teleportation",
            "is_teleportation"
        ],
        "body": [
            "local result --[[ integer ]] = hud.is_teleportation(unk0 --[[ integer ]])"
        ],
        "description": "HUD::IS_TELEPORTATION (0x3E758743) function."
    },
    "hud.get_last_nearest_point": {
        "prefix": [
            "hud.get_last_nearest_point",
            "get_last_nearest_point"
        ],
        "body": [
            "local result --[[ integer ]] = hud.get_last_nearest_point(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::GET_LAST_NEAREST_POINT (0xB6E791F6) function."
    },
    "hud.hud_set_minigame_type_layout": {
        "prefix": [
            "hud.hud_set_minigame_type_layout",
            "hud_set_minigame_type_layout"
        ],
        "body": [
            "local result --[[ integer ]] = hud.hud_set_minigame_type_layout(unk0 --[[ integer ]])"
        ],
        "description": "HUD::HUD_SET_MINIGAME_TYPE_LAYOUT (0xD12802AF) function."
    },
    "hud.hud_stamina_override": {
        "prefix": [
            "hud.hud_stamina_override",
            "hud_stamina_override"
        ],
        "body": [
            "hud.hud_stamina_override(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::HUD_STAMINA_OVERRIDE (0xADBD44F6) function."
    },
    "hud.ui_cheat_get_value": {
        "prefix": [
            "hud.ui_cheat_get_value",
            "ui_cheat_get_value"
        ],
        "body": [
            "local result --[[ integer ]] = hud.ui_cheat_get_value(unk0 --[[ integer ]])"
        ],
        "description": "HUD::UI_CHEAT_GET_VALUE (0x94F5E63F) function."
    },
    "hud.ui_cheat_set_value": {
        "prefix": [
            "hud.ui_cheat_set_value",
            "ui_cheat_set_value"
        ],
        "body": [
            "hud.ui_cheat_set_value(cheatid --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::UI_CHEAT_SET_VALUE (0x9E88643A) function."
    },
    "hud.ui_cheat_get_state": {
        "prefix": [
            "hud.ui_cheat_get_state",
            "ui_cheat_get_state"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.ui_cheat_get_state(cheatid --[[ integer ]])"
        ],
        "description": "HUD::UI_CHEAT_GET_STATE (0x01309706) function."
    },
    "hud.ui_cheat_set_state": {
        "prefix": [
            "hud.ui_cheat_set_state",
            "ui_cheat_set_state"
        ],
        "body": [
            "hud.ui_cheat_set_state(cheatid --[[ integer ]], enabled --[[ boolean ]])"
        ],
        "description": "HUD::UI_CHEAT_SET_STATE (0x7D6A8D4A) function."
    },
    "hud.ui_cheat_set_code": {
        "prefix": [
            "hud.ui_cheat_set_code",
            "ui_cheat_set_code"
        ],
        "body": [
            "hud.ui_cheat_set_code(cheatid --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "HUD::UI_CHEAT_SET_CODE (0x90CD8795) function."
    },
    "hud.ui_set_has_cheated": {
        "prefix": [
            "hud.ui_set_has_cheated",
            "ui_set_has_cheated"
        ],
        "body": [
            "hud.ui_set_has_cheated(unk0 --[[ integer ]])"
        ],
        "description": "HUD::UI_SET_HAS_CHEATED (0x7D0EFDD8) function."
    },
    "hud.ui_has_cheated": {
        "prefix": [
            "hud.ui_has_cheated",
            "ui_has_cheated"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.ui_has_cheated()"
        ],
        "description": "HUD::UI_HAS_CHEATED (0xBAB151CB) function."
    },
    "hud.ui_dump_message_queue_to_notes": {
        "prefix": [
            "hud.ui_dump_message_queue_to_notes",
            "ui_dump_message_queue_to_notes"
        ],
        "body": [
            "hud.ui_dump_message_queue_to_notes(unk0 --[[ integer ]])"
        ],
        "description": "HUD::UI_DUMP_MESSAGE_QUEUE_TO_NOTES (0x714D6F72) function."
    },
    "hud.ui_clear_message_queue": {
        "prefix": [
            "hud.ui_clear_message_queue",
            "ui_clear_message_queue"
        ],
        "body": [
            "hud.ui_clear_message_queue(unk0 --[[ integer ]])"
        ],
        "description": "HUD::UI_CLEAR_MESSAGE_QUEUE (0x64DDB95D) function."
    },
    "hud.ui_is_message_queue_empty": {
        "prefix": [
            "hud.ui_is_message_queue_empty",
            "ui_is_message_queue_empty"
        ],
        "body": [
            "local result --[[ integer ]] = hud.ui_is_message_queue_empty(unk0 --[[ integer ]])"
        ],
        "description": "HUD::UI_IS_MESSAGE_QUEUE_EMPTY (0x941FC468) function."
    },
    "hud.ui_remove_message_in_queue": {
        "prefix": [
            "hud.ui_remove_message_in_queue",
            "ui_remove_message_in_queue"
        ],
        "body": [
            "hud.ui_remove_message_in_queue(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "HUD::UI_REMOVE_MESSAGE_IN_QUEUE (0x7725001B) function."
    },
    "hud.hud_set_center_blip_shown": {
        "prefix": [
            "hud.hud_set_center_blip_shown",
            "hud_set_center_blip_shown"
        ],
        "body": [
            "hud.hud_set_center_blip_shown(unk0 --[[ integer ]])"
        ],
        "description": "HUD::HUD_SET_CENTER_BLIP_SHOWN (0xEB214384) function."
    },
    "hud.is_dlc_zombiepack_active": {
        "prefix": [
            "hud.is_dlc_zombiepack_active",
            "is_dlc_zombiepack_active"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.is_dlc_zombiepack_active()"
        ],
        "description": "HUD::IS_DLC_ZOMBIEPACK_ACTIVE (0x6CC9CCE7) function."
    },
    "hud.is_hardcore_active": {
        "prefix": [
            "hud.is_hardcore_active",
            "is_hardcore_active"
        ],
        "body": [
            "local result --[[ boolean ]] = hud.is_hardcore_active()"
        ],
        "description": "HUD::IS_HARDCORE_ACTIVE (0x8701F1F6) function."
    },
    "hud._hud_set_zombie_theme": {
        "prefix": [
            "hud._hud_set_zombie_theme",
            "_hud_set_zombie_theme"
        ],
        "body": [
            "hud._hud_set_zombie_theme()"
        ],
        "description": "HUD::_HUD_SET_ZOMBIE_THEME (0x3842B89F) function."
    },
    "hud._hud_set_normal_theme": {
        "prefix": [
            "hud._hud_set_normal_theme",
            "_hud_set_normal_theme"
        ],
        "body": [
            "hud._hud_set_normal_theme()"
        ],
        "description": "HUD::_HUD_SET_NORMAL_THEME (0xFDB5FC03) function."
    },
    "indicator.set_indicator_draw": {
        "prefix": [
            "indicator.set_indicator_draw",
            "set_indicator_draw"
        ],
        "body": [
            "indicator.set_indicator_draw(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INDICATOR::SET_INDICATOR_DRAW (0x8E387228) function."
    },
    "intersection.find_intersection": {
        "prefix": [
            "intersection.find_intersection",
            "find_intersection"
        ],
        "body": [
            "local result --[[ integer ]] = intersection.find_intersection(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "INTERSECTION::FIND_INTERSECTION (0x9CD3AD70) function."
    },
    "intersection.find_ground_intersection": {
        "prefix": [
            "intersection.find_ground_intersection",
            "find_ground_intersection"
        ],
        "body": [
            "local result --[[ boolean ]] = intersection.find_ground_intersection(positiona --[[ vector3 ]], output --[[ vector3 ]], positionb --[[ vector3 ]], unk3 --[[ integer ]])"
        ],
        "description": "INTERSECTION::FIND_GROUND_INTERSECTION (0x6AD8EEAF) function."
    },
    "intersection.find_ground_intersection_with_material": {
        "prefix": [
            "intersection.find_ground_intersection_with_material",
            "find_ground_intersection_with_material"
        ],
        "body": [
            "local result --[[ integer ]] = intersection.find_ground_intersection_with_material(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "INTERSECTION::FIND_GROUND_INTERSECTION_WITH_MATERIAL (0x77964B0C) function."
    },
    "intersection.find_water_intersection": {
        "prefix": [
            "intersection.find_water_intersection",
            "find_water_intersection"
        ],
        "body": [
            "local result --[[ integer ]] = intersection.find_water_intersection(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "INTERSECTION::FIND_WATER_INTERSECTION (0x4F193BE4) function."
    },
    "intersection.get_material_at_vector": {
        "prefix": [
            "intersection.get_material_at_vector",
            "get_material_at_vector"
        ],
        "body": [
            "local result --[[ integer ]] = intersection.get_material_at_vector(position --[[ vector3 ]])"
        ],
        "description": "INTERSECTION::GET_MATERIAL_AT_VECTOR (0x5219B7D0) function."
    },
    "intersection.get_actor_ground_material": {
        "prefix": [
            "intersection.get_actor_ground_material",
            "get_actor_ground_material"
        ],
        "body": [
            "local result --[[ integer ]] = intersection.get_actor_ground_material(unk0 --[[ integer ]])"
        ],
        "description": "INTERSECTION::GET_ACTOR_GROUND_MATERIAL (0x451A8EF2) function."
    },
    "intersection.is_position_indoors": {
        "prefix": [
            "intersection.is_position_indoors",
            "is_position_indoors"
        ],
        "body": [
            "local result --[[ integer ]] = intersection.is_position_indoors(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INTERSECTION::IS_POSITION_INDOORS (0x1E81DB60) function."
    },
    "inventory.add_item": {
        "prefix": [
            "inventory.add_item",
            "add_item"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.add_item(itemname --[[ string ]], actor --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::ADD_ITEM (0xBAA5D41B) function."
    },
    "inventory.add_item_by_crc": {
        "prefix": [
            "inventory.add_item_by_crc",
            "add_item_by_crc"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.add_item_by_crc(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ADD_ITEM_BY_CRC (0xAB2D8A68) function."
    },
    "inventory.has_inventory_component": {
        "prefix": [
            "inventory.has_inventory_component",
            "has_inventory_component"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.has_inventory_component(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::HAS_INVENTORY_COMPONENT (0x7609A328) function."
    },
    "inventory.get_item_count": {
        "prefix": [
            "inventory.get_item_count",
            "get_item_count"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_item_count(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_ITEM_COUNT (0xD91ED898) function."
    },
    "inventory.get_item_count_by_crc": {
        "prefix": [
            "inventory.get_item_count_by_crc",
            "get_item_count_by_crc"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_item_count_by_crc(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_ITEM_COUNT_BY_CRC (0x4BB2BC20) function."
    },
    "inventory.get_max_item_count": {
        "prefix": [
            "inventory.get_max_item_count",
            "get_max_item_count"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_max_item_count(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_MAX_ITEM_COUNT (0xF52BA99F) function."
    },
    "inventory.set_max_item_count": {
        "prefix": [
            "inventory.set_max_item_count",
            "set_max_item_count"
        ],
        "body": [
            "inventory.set_max_item_count(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::SET_MAX_ITEM_COUNT (0x0E712FCB) function."
    },
    "inventory.add_accessory_by_crc": {
        "prefix": [
            "inventory.add_accessory_by_crc",
            "add_accessory_by_crc"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.add_accessory_by_crc(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ADD_ACCESSORY_BY_CRC (0xF750D150) function."
    },
    "inventory.add_collectable": {
        "prefix": [
            "inventory.add_collectable",
            "add_collectable"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.add_collectable(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ADD_COLLECTABLE (0xF05D1566) function."
    },
    "inventory.remove_collectable": {
        "prefix": [
            "inventory.remove_collectable",
            "remove_collectable"
        ],
        "body": [
            "inventory.remove_collectable(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::REMOVE_COLLECTABLE (0x5889EBB7) function."
    },
    "inventory.ready_item": {
        "prefix": [
            "inventory.ready_item",
            "ready_item"
        ],
        "body": [
            "inventory.ready_item(itemname --[[ string ]], actor --[[ integer ]])"
        ],
        "description": "INVENTORY::READY_ITEM (0x2B00A643) function."
    },
    "inventory.has_item": {
        "prefix": [
            "inventory.has_item",
            "has_item"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.has_item(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::HAS_ITEM (0xB426267D) function."
    },
    "inventory.delete_item": {
        "prefix": [
            "inventory.delete_item",
            "delete_item"
        ],
        "body": [
            "inventory.delete_item(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::DELETE_ITEM (0xEFECF4F9) function."
    },
    "inventory.delete_accessory": {
        "prefix": [
            "inventory.delete_accessory",
            "delete_accessory"
        ],
        "body": [
            "inventory.delete_accessory(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::DELETE_ACCESSORY (0xD6A9C9D4) function."
    },
    "inventory.actor_get_item_crc_at_index": {
        "prefix": [
            "inventory.actor_get_item_crc_at_index",
            "actor_get_item_crc_at_index"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.actor_get_item_crc_at_index(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_ITEM_CRC_AT_INDEX (0x7BF75BCE) function."
    },
    "inventory.actor_get_accessory_crc_at_index": {
        "prefix": [
            "inventory.actor_get_accessory_crc_at_index",
            "actor_get_accessory_crc_at_index"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.actor_get_accessory_crc_at_index(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_ACCESSORY_CRC_AT_INDEX (0x7F4D5AE0) function."
    },
    "inventory.actor_get_collectable_crc_at_index": {
        "prefix": [
            "inventory.actor_get_collectable_crc_at_index",
            "actor_get_collectable_crc_at_index"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.actor_get_collectable_crc_at_index(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_COLLECTABLE_CRC_AT_INDEX (0x608DCAEF) function."
    },
    "inventory.is_item_weapon_by_crc": {
        "prefix": [
            "inventory.is_item_weapon_by_crc",
            "is_item_weapon_by_crc"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.is_item_weapon_by_crc(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::IS_ITEM_WEAPON_BY_CRC (0x50C0E83F) function."
    },
    "inventory.get_item_in_hand_equipslot": {
        "prefix": [
            "inventory.get_item_in_hand_equipslot",
            "get_item_in_hand_equipslot"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_item_in_hand_equipslot(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_ITEM_IN_HAND_EQUIPSLOT (0x3A899B0E) function."
    },
    "inventory.get_item_equipslot": {
        "prefix": [
            "inventory.get_item_equipslot",
            "get_item_equipslot"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_item_equipslot(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_ITEM_EQUIPSLOT (0x0E0EFB13) function."
    },
    "inventory.actor_disable_weapon_render": {
        "prefix": [
            "inventory.actor_disable_weapon_render",
            "actor_disable_weapon_render"
        ],
        "body": [
            "inventory.actor_disable_weapon_render(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_DISABLE_WEAPON_RENDER (0x5E38B33C) function."
    },
    "inventory.actor_force_weapon_render": {
        "prefix": [
            "inventory.actor_force_weapon_render",
            "actor_force_weapon_render"
        ],
        "body": [
            "inventory.actor_force_weapon_render(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_FORCE_WEAPON_RENDER (0x1511D111) function."
    },
    "inventory.is_weapon_drawn": {
        "prefix": [
            "inventory.is_weapon_drawn",
            "is_weapon_drawn"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.is_weapon_drawn(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::IS_WEAPON_DRAWN (0xAB5FB5AC) function."
    },
    "inventory.give_weapon_to_actor": {
        "prefix": [
            "inventory.give_weapon_to_actor",
            "give_weapon_to_actor"
        ],
        "body": [
            "inventory.give_weapon_to_actor(actor --[[ integer ]], weaponmodel --[[ integer ]], unk --[[ integer ]], notify --[[ boolean ]], ishidden --[[ boolean ]])"
        ],
        "description": "INVENTORY::GIVE_WEAPON_TO_ACTOR (0x6AA0EAF2) function."
    },
    "inventory.actor_set_next_weapon": {
        "prefix": [
            "inventory.actor_set_next_weapon",
            "actor_set_next_weapon"
        ],
        "body": [
            "inventory.actor_set_next_weapon(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_SET_NEXT_WEAPON (0xBFD6D55F) function."
    },
    "inventory.actor_put_weapon_in_hand": {
        "prefix": [
            "inventory.actor_put_weapon_in_hand",
            "actor_put_weapon_in_hand"
        ],
        "body": [
            "inventory.actor_put_weapon_in_hand(actor --[[ integer ]], weaponmodel --[[ integer ]], inhand --[[ boolean ]])"
        ],
        "description": "INVENTORY::ACTOR_PUT_WEAPON_IN_HAND (0x8F4B473D) function."
    },
    "inventory.actor_has_weapon_in_hand": {
        "prefix": [
            "inventory.actor_has_weapon_in_hand",
            "actor_has_weapon_in_hand"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.actor_has_weapon_in_hand(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_HAS_WEAPON_IN_HAND (0x09950C1B) function."
    },
    "inventory.actor_set_next_equip_slot_from_weapon_enum": {
        "prefix": [
            "inventory.actor_set_next_equip_slot_from_weapon_enum",
            "actor_set_next_equip_slot_from_weapon_enum"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.actor_set_next_equip_slot_from_weapon_enum(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_SET_NEXT_EQUIP_SLOT_FROM_WEAPON_ENUM (0x5CAFCBD4) function."
    },
    "inventory.actor_set_next_equip_slot": {
        "prefix": [
            "inventory.actor_set_next_equip_slot",
            "actor_set_next_equip_slot"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.actor_set_next_equip_slot(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_SET_NEXT_EQUIP_SLOT (0x3417766E) function."
    },
    "inventory.actor_get_next_equip_slot": {
        "prefix": [
            "inventory.actor_get_next_equip_slot",
            "actor_get_next_equip_slot"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.actor_get_next_equip_slot(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_NEXT_EQUIP_SLOT (0xCC02BBD3) function."
    },
    "inventory.actor_get_current_equip_slot": {
        "prefix": [
            "inventory.actor_get_current_equip_slot",
            "actor_get_current_equip_slot"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.actor_get_current_equip_slot(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_CURRENT_EQUIP_SLOT (0xA8040D70) function."
    },
    "inventory.actor_get_best_weapon_of_type": {
        "prefix": [
            "inventory.actor_get_best_weapon_of_type",
            "actor_get_best_weapon_of_type"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.actor_get_best_weapon_of_type(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_BEST_WEAPON_OF_TYPE (0x659532FB) function."
    },
    "inventory.delete_weapon_from_actor": {
        "prefix": [
            "inventory.delete_weapon_from_actor",
            "delete_weapon_from_actor"
        ],
        "body": [
            "inventory.delete_weapon_from_actor(actor --[[ integer ]], weaponmodel --[[ integer ]])"
        ],
        "description": "INVENTORY::DELETE_WEAPON_FROM_ACTOR (0xCB017277) function."
    },
    "inventory.get_weapon_equipped": {
        "prefix": [
            "inventory.get_weapon_equipped",
            "get_weapon_equipped"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_weapon_equipped(actor --[[ integer ]], weaponwheelindex --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_WEAPON_EQUIPPED (0x42C0FAAA) function."
    },
    "inventory.get_weapon_is_externally_created": {
        "prefix": [
            "inventory.get_weapon_is_externally_created",
            "get_weapon_is_externally_created"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_weapon_is_externally_created(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_WEAPON_IS_EXTERNALLY_CREATED (0x6262DC5E) function."
    },
    "inventory.get_weapon_in_hand": {
        "prefix": [
            "inventory.get_weapon_in_hand",
            "get_weapon_in_hand"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_weapon_in_hand(actor --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_WEAPON_IN_HAND (0xA4B2016D) function."
    },
    "inventory.get_weapon_in_hand_crc": {
        "prefix": [
            "inventory.get_weapon_in_hand_crc",
            "get_weapon_in_hand_crc"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_weapon_in_hand_crc(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_WEAPON_IN_HAND_CRC (0x0CDD6F94) function."
    },
    "inventory.get_weapon_enum_from_crc": {
        "prefix": [
            "inventory.get_weapon_enum_from_crc",
            "get_weapon_enum_from_crc"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_weapon_enum_from_crc(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_WEAPON_ENUM_FROM_CRC (0x2776B0F5) function."
    },
    "inventory.set_equip_slot_enabled": {
        "prefix": [
            "inventory.set_equip_slot_enabled",
            "set_equip_slot_enabled"
        ],
        "body": [
            "inventory.set_equip_slot_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::SET_EQUIP_SLOT_ENABLED (0xE6604B39) function."
    },
    "inventory.equip_accessory": {
        "prefix": [
            "inventory.equip_accessory",
            "equip_accessory"
        ],
        "body": [
            "inventory.equip_accessory(actor --[[ integer ]], accessorymodel --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::EQUIP_ACCESSORY (0x5A80659D) function."
    },
    "inventory.deequip_accessory": {
        "prefix": [
            "inventory.deequip_accessory",
            "deequip_accessory"
        ],
        "body": [
            "inventory.deequip_accessory(actor --[[ integer ]], accessorymodel --[[ integer ]])"
        ],
        "description": "INVENTORY::DEEQUIP_ACCESSORY (0xF7696B8B) function."
    },
    "inventory.has_accessory_enum": {
        "prefix": [
            "inventory.has_accessory_enum",
            "has_accessory_enum"
        ],
        "body": [
            "local result --[[ boolean ]] = inventory.has_accessory_enum(actor --[[ integer ]], accessorymodel --[[ integer ]])"
        ],
        "description": "INVENTORY::HAS_ACCESSORY_ENUM (0x9B958A25) function."
    },
    "inventory.is_accessory_equippped": {
        "prefix": [
            "inventory.is_accessory_equippped",
            "is_accessory_equippped"
        ],
        "body": [
            "local result --[[ boolean ]] = inventory.is_accessory_equippped(actor --[[ integer ]], accessory --[[ integer ]])"
        ],
        "description": "INVENTORY::IS_ACCESSORY_EQUIPPPED (0xE094DB31) function."
    },
    "inventory.drop_accessory_enum": {
        "prefix": [
            "inventory.drop_accessory_enum",
            "drop_accessory_enum"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.drop_accessory_enum(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "INVENTORY::DROP_ACCESSORY_ENUM (0x7FDDF876) function."
    },
    "inventory.actor_set_weapon_ammo": {
        "prefix": [
            "inventory.actor_set_weapon_ammo",
            "actor_set_weapon_ammo"
        ],
        "body": [
            "inventory.actor_set_weapon_ammo(actor --[[ integer ]], weaponmodel --[[ integer ]], ammocount --[[ number ]])"
        ],
        "description": "INVENTORY::ACTOR_SET_WEAPON_AMMO (0x8266C617) function."
    },
    "inventory.actor_set_weapon_ammo_by_crc": {
        "prefix": [
            "inventory.actor_set_weapon_ammo_by_crc",
            "actor_set_weapon_ammo_by_crc"
        ],
        "body": [
            "inventory.actor_set_weapon_ammo_by_crc(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ number ]])"
        ],
        "description": "INVENTORY::ACTOR_SET_WEAPON_AMMO_BY_CRC (0xB008EF49) function."
    },
    "inventory.actor_has_weapon": {
        "prefix": [
            "inventory.actor_has_weapon",
            "actor_has_weapon"
        ],
        "body": [
            "local result --[[ boolean ]] = inventory.actor_has_weapon(actor --[[ integer ]], weaponmodel --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_HAS_WEAPON (0x0D47CFBD) function."
    },
    "inventory.actor_add_weapon_ammo": {
        "prefix": [
            "inventory.actor_add_weapon_ammo",
            "actor_add_weapon_ammo"
        ],
        "body": [
            "inventory.actor_add_weapon_ammo(actor --[[ integer ]], weaponmodel --[[ integer ]], ammocount --[[ number ]])"
        ],
        "description": "INVENTORY::ACTOR_ADD_WEAPON_AMMO (0xCC69DCC1) function."
    },
    "inventory.actor_get_weapon_ammo": {
        "prefix": [
            "inventory.actor_get_weapon_ammo",
            "actor_get_weapon_ammo"
        ],
        "body": [
            "local result --[[ number ]] = inventory.actor_get_weapon_ammo(actor --[[ integer ]], weaponmodel --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_WEAPON_AMMO (0x43DEDFAE) function."
    },
    "inventory.actor_discard_weapon_ammo": {
        "prefix": [
            "inventory.actor_discard_weapon_ammo",
            "actor_discard_weapon_ammo"
        ],
        "body": [
            "inventory.actor_discard_weapon_ammo(actor --[[ integer ]], weaponmodel --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_DISCARD_WEAPON_AMMO (0xEEC81873) function."
    },
    "inventory.actor_has_variable_mesh": {
        "prefix": [
            "inventory.actor_has_variable_mesh",
            "actor_has_variable_mesh"
        ],
        "body": [
            "local result --[[ boolean ]] = inventory.actor_has_variable_mesh(actor --[[ integer ]], id --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_HAS_VARIABLE_MESH (0xA091179F) function."
    },
    "inventory.get_ammoenum_for_weaponenum": {
        "prefix": [
            "inventory.get_ammoenum_for_weaponenum",
            "get_ammoenum_for_weaponenum"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_ammoenum_for_weaponenum(weaponmodel --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_AMMOENUM_FOR_WEAPONENUM (0x17883570) function."
    },
    "inventory.get_weaponenum_for_ammoenum": {
        "prefix": [
            "inventory.get_weaponenum_for_ammoenum",
            "get_weaponenum_for_ammoenum"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_weaponenum_for_ammoenum(actor --[[ integer ]], ammotype --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_WEAPONENUM_FOR_AMMOENUM (0xA8F64D32) function."
    },
    "inventory.set_weapon_gold": {
        "prefix": [
            "inventory.set_weapon_gold",
            "set_weapon_gold"
        ],
        "body": [
            "inventory.set_weapon_gold(actor --[[ integer ]], weaponmodel --[[ integer ]], gold --[[ boolean ]])"
        ],
        "description": "INVENTORY::SET_WEAPON_GOLD (0xAE44869D) function."
    },
    "inventory.get_weapon_gold": {
        "prefix": [
            "inventory.get_weapon_gold",
            "get_weapon_gold"
        ],
        "body": [
            "local result --[[ boolean ]] = inventory.get_weapon_gold(actor --[[ integer ]], weaponmodel --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_WEAPON_GOLD (0x6DBD1DDB) function."
    },
    "inventory.is_golden_guns_on": {
        "prefix": [
            "inventory.is_golden_guns_on",
            "is_golden_guns_on"
        ],
        "body": [
            "local result --[[ boolean ]] = inventory.is_golden_guns_on()"
        ],
        "description": "INVENTORY::IS_GOLDEN_GUNS_ON (0x80B30545) function."
    },
    "inventory.fire_projectile": {
        "prefix": [
            "inventory.fire_projectile",
            "fire_projectile"
        ],
        "body": [
            "inventory.fire_projectile(actor --[[ integer ]], weapgroup --[[ string ]], unk2 --[[ number ]], origin --[[ vector3 ]], target --[[ vector3 ]])"
        ],
        "description": "INVENTORY::FIRE_PROJECTILE (0x195A4286) function."
    },
    "inventory.actor_add_inv_ammo": {
        "prefix": [
            "inventory.actor_add_inv_ammo",
            "actor_add_inv_ammo"
        ],
        "body": [
            "inventory.actor_add_inv_ammo(actor --[[ integer ]], ammotype --[[ integer ]], ammocount --[[ number ]], unk0 --[[ boolean ]], notify --[[ boolean ]])"
        ],
        "description": "INVENTORY::ACTOR_ADD_INV_AMMO (0x98B3ABFA) function."
    },
    "inventory.actor_set_inv_ammo": {
        "prefix": [
            "inventory.actor_set_inv_ammo",
            "actor_set_inv_ammo"
        ],
        "body": [
            "inventory.actor_set_inv_ammo(actor --[[ integer ]], ammotype --[[ integer ]], ammocount --[[ number ]], unk0 --[[ boolean ]])"
        ],
        "description": "INVENTORY::ACTOR_SET_INV_AMMO (0x4372593E) function."
    },
    "inventory.actor_set_inv_ammo_max_amount": {
        "prefix": [
            "inventory.actor_set_inv_ammo_max_amount",
            "actor_set_inv_ammo_max_amount"
        ],
        "body": [
            "inventory.actor_set_inv_ammo_max_amount(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_SET_INV_AMMO_MAX_AMOUNT (0x6ADAAD87) function."
    },
    "inventory.actor_set_inv_ammo_infinite": {
        "prefix": [
            "inventory.actor_set_inv_ammo_infinite",
            "actor_set_inv_ammo_infinite"
        ],
        "body": [
            "inventory.actor_set_inv_ammo_infinite(actor --[[ integer ]], weaponmodel --[[ integer ]], infinite --[[ boolean ]])"
        ],
        "description": "INVENTORY::ACTOR_SET_INV_AMMO_INFINITE (0x4FE2B586) function."
    },
    "inventory.actor_get_inv_ammo": {
        "prefix": [
            "inventory.actor_get_inv_ammo",
            "actor_get_inv_ammo"
        ],
        "body": [
            "local result --[[ number ]] = inventory.actor_get_inv_ammo(actor --[[ integer ]], ammotype --[[ integer ]], unk --[[ boolean ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_INV_AMMO (0xE224AC6F) function."
    },
    "inventory.actor_get_inv_ammo_max_amount": {
        "prefix": [
            "inventory.actor_get_inv_ammo_max_amount",
            "actor_get_inv_ammo_max_amount"
        ],
        "body": [
            "local result --[[ number ]] = inventory.actor_get_inv_ammo_max_amount(actor --[[ integer ]], ammotype --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_INV_AMMO_MAX_AMOUNT (0x7AB368CF) function."
    },
    "inventory.actor_get_inv_ammo_infinite": {
        "prefix": [
            "inventory.actor_get_inv_ammo_infinite",
            "actor_get_inv_ammo_infinite"
        ],
        "body": [
            "local result --[[ boolean ]] = inventory.actor_get_inv_ammo_infinite(actor --[[ integer ]], weaponmodel --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_GET_INV_AMMO_INFINITE (0xC666B987) function."
    },
    "inventory.actor_should_drop_items_on_death": {
        "prefix": [
            "inventory.actor_should_drop_items_on_death",
            "actor_should_drop_items_on_death"
        ],
        "body": [
            "inventory.actor_should_drop_items_on_death(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_SHOULD_DROP_ITEMS_ON_DEATH (0xBE39208A) function."
    },
    "inventory.actor_set_drop_item_on_death_enumerated": {
        "prefix": [
            "inventory.actor_set_drop_item_on_death_enumerated",
            "actor_set_drop_item_on_death_enumerated"
        ],
        "body": [
            "inventory.actor_set_drop_item_on_death_enumerated(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "INVENTORY::ACTOR_SET_DROP_ITEM_ON_DEATH_ENUMERATED (0xBC46E3E1) function."
    },
    "inventory.create_weapon_pickup": {
        "prefix": [
            "inventory.create_weapon_pickup",
            "create_weapon_pickup"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.create_weapon_pickup(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "INVENTORY::CREATE_WEAPON_PICKUP (0xBF0235B0) function."
    },
    "inventory.remove_all_pickups": {
        "prefix": [
            "inventory.remove_all_pickups",
            "remove_all_pickups"
        ],
        "body": [
            "inventory.remove_all_pickups()"
        ],
        "description": "INVENTORY::REMOVE_ALL_PICKUPS (0x04BF00F0) function."
    },
    "inventory.get_num_weapons_in_inventory": {
        "prefix": [
            "inventory.get_num_weapons_in_inventory",
            "get_num_weapons_in_inventory"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_num_weapons_in_inventory(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_NUM_WEAPONS_IN_INVENTORY (0x118D085E) function."
    },
    "inventory.get_num_accessories_in_inventory": {
        "prefix": [
            "inventory.get_num_accessories_in_inventory",
            "get_num_accessories_in_inventory"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_num_accessories_in_inventory(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_NUM_ACCESSORIES_IN_INVENTORY (0x78A3CD3D) function."
    },
    "inventory.get_num_collectables_in_inventory": {
        "prefix": [
            "inventory.get_num_collectables_in_inventory",
            "get_num_collectables_in_inventory"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.get_num_collectables_in_inventory(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::GET_NUM_COLLECTABLES_IN_INVENTORY (0x2C23CBE7) function."
    },
    "inventory.delete_all_weapons_from_actor": {
        "prefix": [
            "inventory.delete_all_weapons_from_actor",
            "delete_all_weapons_from_actor"
        ],
        "body": [
            "inventory.delete_all_weapons_from_actor(actor --[[ integer ]])"
        ],
        "description": "INVENTORY::DELETE_ALL_WEAPONS_FROM_ACTOR (0xD695F857) function."
    },
    "inventory.delete_all_accessories_from_actor": {
        "prefix": [
            "inventory.delete_all_accessories_from_actor",
            "delete_all_accessories_from_actor"
        ],
        "body": [
            "inventory.delete_all_accessories_from_actor(actor --[[ integer ]])"
        ],
        "description": "INVENTORY::DELETE_ALL_ACCESSORIES_FROM_ACTOR (0x96AC812B) function."
    },
    "inventory.delete_all_inventory_from_actor": {
        "prefix": [
            "inventory.delete_all_inventory_from_actor",
            "delete_all_inventory_from_actor"
        ],
        "body": [
            "inventory.delete_all_inventory_from_actor(actor --[[ integer ]])"
        ],
        "description": "INVENTORY::DELETE_ALL_INVENTORY_FROM_ACTOR (0x5AEB2E4F) function."
    },
    "inventory.setup_associated_fragments": {
        "prefix": [
            "inventory.setup_associated_fragments",
            "setup_associated_fragments"
        ],
        "body": [
            "inventory.setup_associated_fragments(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::SETUP_ASSOCIATED_FRAGMENTS (0x3E8E7D7B) function."
    },
    "inventory.gringoitem_get_action": {
        "prefix": [
            "inventory.gringoitem_get_action",
            "gringoitem_get_action"
        ],
        "body": [
            "local result --[[ integer ]] = inventory.gringoitem_get_action()"
        ],
        "description": "INVENTORY::GRINGOITEM_GET_ACTION (0x7BF01CCB) function."
    },
    "inventory.gringoitem_clear_for_new_use": {
        "prefix": [
            "inventory.gringoitem_clear_for_new_use",
            "gringoitem_clear_for_new_use"
        ],
        "body": [
            "inventory.gringoitem_clear_for_new_use(unk0 --[[ integer ]])"
        ],
        "description": "INVENTORY::GRINGOITEM_CLEAR_FOR_NEW_USE (0x8EA46104) function."
    },
    "journal.set_exclusive_journal_id": {
        "prefix": [
            "journal.set_exclusive_journal_id",
            "set_exclusive_journal_id"
        ],
        "body": [
            "journal.set_exclusive_journal_id(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::SET_EXCLUSIVE_JOURNAL_ID (0x6398AF9A) function."
    },
    "journal.reset_exclusive_journal_id": {
        "prefix": [
            "journal.reset_exclusive_journal_id",
            "reset_exclusive_journal_id"
        ],
        "body": [
            "journal.reset_exclusive_journal_id()"
        ],
        "description": "JOURNAL::RESET_EXCLUSIVE_JOURNAL_ID (0x45E34464) function."
    },
    "journal.toggle_coop_journal_ui": {
        "prefix": [
            "journal.toggle_coop_journal_ui",
            "toggle_coop_journal_ui"
        ],
        "body": [
            "journal.toggle_coop_journal_ui(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::TOGGLE_COOP_JOURNAL_UI (0x44A1ED5C) function."
    },
    "journal.toggle_journal_ui": {
        "prefix": [
            "journal.toggle_journal_ui",
            "toggle_journal_ui"
        ],
        "body": [
            "journal.toggle_journal_ui(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::TOGGLE_JOURNAL_UI (0xE6726EF4) function."
    },
    "journal.get_journal_entry": {
        "prefix": [
            "journal.get_journal_entry",
            "get_journal_entry"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_journal_entry(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_JOURNAL_ENTRY (0xC450C870) function."
    },
    "journal.create_journal_entry": {
        "prefix": [
            "journal.create_journal_entry",
            "create_journal_entry"
        ],
        "body": [
            "local result --[[ integer ]] = journal.create_journal_entry(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "JOURNAL::CREATE_JOURNAL_ENTRY (0x761FD935) function."
    },
    "journal.create_journal_entry_by_hash": {
        "prefix": [
            "journal.create_journal_entry_by_hash",
            "create_journal_entry_by_hash"
        ],
        "body": [
            "local result --[[ integer ]] = journal.create_journal_entry_by_hash(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "JOURNAL::CREATE_JOURNAL_ENTRY_BY_HASH (0x619F1C3D) function."
    },
    "journal.is_journal_entry_in_list": {
        "prefix": [
            "journal.is_journal_entry_in_list",
            "is_journal_entry_in_list"
        ],
        "body": [
            "local result --[[ integer ]] = journal.is_journal_entry_in_list(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::IS_JOURNAL_ENTRY_IN_LIST (0xC17FE40A) function."
    },
    "journal.get_num_journal_entries_in_list": {
        "prefix": [
            "journal.get_num_journal_entries_in_list",
            "get_num_journal_entries_in_list"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_num_journal_entries_in_list(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_NUM_JOURNAL_ENTRIES_IN_LIST (0x3E84D766) function."
    },
    "journal.get_journal_entry_in_list": {
        "prefix": [
            "journal.get_journal_entry_in_list",
            "get_journal_entry_in_list"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_journal_entry_in_list(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_JOURNAL_ENTRY_IN_LIST (0x49B02E18) function."
    },
    "journal.prepend_journal_entry": {
        "prefix": [
            "journal.prepend_journal_entry",
            "prepend_journal_entry"
        ],
        "body": [
            "journal.prepend_journal_entry(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::PREPEND_JOURNAL_ENTRY (0x87DC7F5B) function."
    },
    "journal.append_journal_entry": {
        "prefix": [
            "journal.append_journal_entry",
            "append_journal_entry"
        ],
        "body": [
            "journal.append_journal_entry(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::APPEND_JOURNAL_ENTRY (0x9C40CFAB) function."
    },
    "journal.remove_journal_entry": {
        "prefix": [
            "journal.remove_journal_entry",
            "remove_journal_entry"
        ],
        "body": [
            "journal.remove_journal_entry(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::REMOVE_JOURNAL_ENTRY (0x01BF35BD) function."
    },
    "journal.clear_journal_entry": {
        "prefix": [
            "journal.clear_journal_entry",
            "clear_journal_entry"
        ],
        "body": [
            "journal.clear_journal_entry(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::CLEAR_JOURNAL_ENTRY (0xB8B7B818) function."
    },
    "journal.prepend_journal_entry_detail": {
        "prefix": [
            "journal.prepend_journal_entry_detail",
            "prepend_journal_entry_detail"
        ],
        "body": [
            "journal.prepend_journal_entry_detail(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "JOURNAL::PREPEND_JOURNAL_ENTRY_DETAIL (0x81470AFE) function."
    },
    "journal.append_journal_entry_detail": {
        "prefix": [
            "journal.append_journal_entry_detail",
            "append_journal_entry_detail"
        ],
        "body": [
            "journal.append_journal_entry_detail(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "JOURNAL::APPEND_JOURNAL_ENTRY_DETAIL (0xF5DFD684) function."
    },
    "journal.clear_journal_entry_detail_list": {
        "prefix": [
            "journal.clear_journal_entry_detail_list",
            "clear_journal_entry_detail_list"
        ],
        "body": [
            "journal.clear_journal_entry_detail_list(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::CLEAR_JOURNAL_ENTRY_DETAIL_LIST (0xD0567D03) function."
    },
    "journal.get_journal_entry_num_details": {
        "prefix": [
            "journal.get_journal_entry_num_details",
            "get_journal_entry_num_details"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_journal_entry_num_details(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_JOURNAL_ENTRY_NUM_DETAILS (0xCF3A69FC) function."
    },
    "journal.get_journal_entry_detail_hash_by_index": {
        "prefix": [
            "journal.get_journal_entry_detail_hash_by_index",
            "get_journal_entry_detail_hash_by_index"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_journal_entry_detail_hash_by_index(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_JOURNAL_ENTRY_DETAIL_HASH_BY_INDEX (0x1630EFC5) function."
    },
    "journal.get_journal_entry_detail_style_by_hash": {
        "prefix": [
            "journal.get_journal_entry_detail_style_by_hash",
            "get_journal_entry_detail_style_by_hash"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_journal_entry_detail_style_by_hash(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_JOURNAL_ENTRY_DETAIL_STYLE_BY_HASH (0xEBC9C2FD) function."
    },
    "journal.set_journal_entry_detail_style": {
        "prefix": [
            "journal.set_journal_entry_detail_style",
            "set_journal_entry_detail_style"
        ],
        "body": [
            "journal.set_journal_entry_detail_style(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "JOURNAL::SET_JOURNAL_ENTRY_DETAIL_STYLE (0x539D0404) function."
    },
    "journal.set_journal_entry_detail_style_by_hash": {
        "prefix": [
            "journal.set_journal_entry_detail_style_by_hash",
            "set_journal_entry_detail_style_by_hash"
        ],
        "body": [
            "journal.set_journal_entry_detail_style_by_hash(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "JOURNAL::SET_JOURNAL_ENTRY_DETAIL_STYLE_BY_HASH (0x5209C0C0) function."
    },
    "journal.is_journal_entry_targeted": {
        "prefix": [
            "journal.is_journal_entry_targeted",
            "is_journal_entry_targeted"
        ],
        "body": [
            "local result --[[ integer ]] = journal.is_journal_entry_targeted(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::IS_JOURNAL_ENTRY_TARGETED (0xF0C4E96F) function."
    },
    "journal.get_journal_entry_type": {
        "prefix": [
            "journal.get_journal_entry_type",
            "get_journal_entry_type"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_journal_entry_type(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_JOURNAL_ENTRY_TYPE (0xF6FEC269) function."
    },
    "journal.is_journal_entry_updated": {
        "prefix": [
            "journal.is_journal_entry_updated",
            "is_journal_entry_updated"
        ],
        "body": [
            "local result --[[ integer ]] = journal.is_journal_entry_updated(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::IS_JOURNAL_ENTRY_UPDATED (0x078F9B43) function."
    },
    "journal.get_journal_entry_misc_flag": {
        "prefix": [
            "journal.get_journal_entry_misc_flag",
            "get_journal_entry_misc_flag"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_journal_entry_misc_flag(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_JOURNAL_ENTRY_MISC_FLAG (0x8020011E) function."
    },
    "journal.get_targeted_journal_entry": {
        "prefix": [
            "journal.get_targeted_journal_entry",
            "get_targeted_journal_entry"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_targeted_journal_entry()"
        ],
        "description": "JOURNAL::GET_TARGETED_JOURNAL_ENTRY (0x8A9B8F0C) function."
    },
    "journal.target_journal_entry": {
        "prefix": [
            "journal.target_journal_entry",
            "target_journal_entry"
        ],
        "body": [
            "journal.target_journal_entry(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::TARGET_JOURNAL_ENTRY (0xC3DC9490) function."
    },
    "journal.set_journal_entry_updated": {
        "prefix": [
            "journal.set_journal_entry_updated",
            "set_journal_entry_updated"
        ],
        "body": [
            "journal.set_journal_entry_updated(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::SET_JOURNAL_ENTRY_UPDATED (0xCD4633BD) function."
    },
    "journal.set_journal_entry_trophy": {
        "prefix": [
            "journal.set_journal_entry_trophy",
            "set_journal_entry_trophy"
        ],
        "body": [
            "journal.set_journal_entry_trophy(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::SET_JOURNAL_ENTRY_TROPHY (0x5CB9D376) function."
    },
    "journal.deactivate_journal_entry": {
        "prefix": [
            "journal.deactivate_journal_entry",
            "deactivate_journal_entry"
        ],
        "body": [
            "journal.deactivate_journal_entry(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::DEACTIVATE_JOURNAL_ENTRY (0x196A1EDE) function."
    },
    "journal.set_journal_entry_progress": {
        "prefix": [
            "journal.set_journal_entry_progress",
            "set_journal_entry_progress"
        ],
        "body": [
            "journal.set_journal_entry_progress(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "JOURNAL::SET_JOURNAL_ENTRY_PROGRESS (0x5DC073DE) function."
    },
    "journal.get_journal_entry_progress": {
        "prefix": [
            "journal.get_journal_entry_progress",
            "get_journal_entry_progress"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_journal_entry_progress(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_JOURNAL_ENTRY_PROGRESS (0xF2C1D690) function."
    },
    "journal.set_journal_entry_disallow_tracking": {
        "prefix": [
            "journal.set_journal_entry_disallow_tracking",
            "set_journal_entry_disallow_tracking"
        ],
        "body": [
            "journal.set_journal_entry_disallow_tracking(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "JOURNAL::SET_JOURNAL_ENTRY_DISALLOW_TRACKING (0xF7687D41) function."
    },
    "journal.get_journal_entry_disallow_tracking": {
        "prefix": [
            "journal.get_journal_entry_disallow_tracking",
            "get_journal_entry_disallow_tracking"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_journal_entry_disallow_tracking(unk0 --[[ integer ]])"
        ],
        "description": "JOURNAL::GET_JOURNAL_ENTRY_DISALLOW_TRACKING (0x93CA45DE) function."
    },
    "journal.set_journal_entry_current_objective": {
        "prefix": [
            "journal.set_journal_entry_current_objective",
            "set_journal_entry_current_objective"
        ],
        "body": [
            "journal.set_journal_entry_current_objective(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "JOURNAL::SET_JOURNAL_ENTRY_CURRENT_OBJECTIVE (0x2AA8E2FA) function."
    },
    "journal.get_last_note_objective": {
        "prefix": [
            "journal.get_last_note_objective",
            "get_last_note_objective"
        ],
        "body": [
            "local result --[[ integer ]] = journal.get_last_note_objective()"
        ],
        "description": "JOURNAL::GET_LAST_NOTE_OBJECTIVE (0xDC28C12F) function."
    },
    "lasso.get_lasso_target": {
        "prefix": [
            "lasso.get_lasso_target",
            "get_lasso_target"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.get_lasso_target(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::GET_LASSO_TARGET (0xAA364907) function."
    },
    "lasso.get_lasso_user": {
        "prefix": [
            "lasso.get_lasso_user",
            "get_lasso_user"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.get_lasso_user(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::GET_LASSO_USER (0x3B775037) function."
    },
    "lasso.get_hogtied_master": {
        "prefix": [
            "lasso.get_hogtied_master",
            "get_hogtied_master"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.get_hogtied_master(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::GET_HOGTIED_MASTER (0x1580F3BF) function."
    },
    "lasso.get_attached_hogtie_victim": {
        "prefix": [
            "lasso.get_attached_hogtie_victim",
            "get_attached_hogtie_victim"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.get_attached_hogtie_victim(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::GET_ATTACHED_HOGTIE_VICTIM (0xF68C926F) function."
    },
    "lasso.detach_lasso": {
        "prefix": [
            "lasso.detach_lasso",
            "detach_lasso"
        ],
        "body": [
            "lasso.detach_lasso(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::DETACH_LASSO (0x32030E7C) function."
    },
    "lasso.free_from_hogtie": {
        "prefix": [
            "lasso.free_from_hogtie",
            "free_from_hogtie"
        ],
        "body": [
            "lasso.free_from_hogtie(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::FREE_FROM_HOGTIE (0x31AD57FE) function."
    },
    "lasso.lasso_event": {
        "prefix": [
            "lasso.lasso_event",
            "lasso_event"
        ],
        "body": [
            "lasso.lasso_event(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LASSO::LASSO_EVENT (0x98FAF5D7) function."
    },
    "lasso.set_intended_hogtie_master": {
        "prefix": [
            "lasso.set_intended_hogtie_master",
            "set_intended_hogtie_master"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.set_intended_hogtie_master(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LASSO::SET_INTENDED_HOGTIE_MASTER (0xFF5F7D2C) function."
    },
    "lasso.is_actor_being_dragged": {
        "prefix": [
            "lasso.is_actor_being_dragged",
            "is_actor_being_dragged"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.is_actor_being_dragged(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LASSO::IS_ACTOR_BEING_DRAGGED (0x5B792331) function."
    },
    "lasso.is_actor_hogtied": {
        "prefix": [
            "lasso.is_actor_hogtied",
            "is_actor_hogtied"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.is_actor_hogtied(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::IS_ACTOR_HOGTIED (0xA610DC79) function."
    },
    "lasso.is_actor_in_hogtie": {
        "prefix": [
            "lasso.is_actor_in_hogtie",
            "is_actor_in_hogtie"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.is_actor_in_hogtie(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::IS_ACTOR_IN_HOGTIE (0xB24ADC7C) function."
    },
    "lasso.get_actor_hogtie_state": {
        "prefix": [
            "lasso.get_actor_hogtie_state",
            "get_actor_hogtie_state"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.get_actor_hogtie_state(actor --[[ integer ]])"
        ],
        "description": "LASSO::GET_ACTOR_HOGTIE_STATE (0xF45D9723) function."
    },
    "lasso.hogtie_actor": {
        "prefix": [
            "lasso.hogtie_actor",
            "hogtie_actor"
        ],
        "body": [
            "lasso.hogtie_actor(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::HOGTIE_ACTOR (0x4440BCA5) function."
    },
    "lasso.attach_hogtie_actor_to_actor": {
        "prefix": [
            "lasso.attach_hogtie_actor_to_actor",
            "attach_hogtie_actor_to_actor"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.attach_hogtie_actor_to_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LASSO::ATTACH_HOGTIE_ACTOR_TO_ACTOR (0xCC04895F) function."
    },
    "lasso.set_hogtie_attach_victim": {
        "prefix": [
            "lasso.set_hogtie_attach_victim",
            "set_hogtie_attach_victim"
        ],
        "body": [
            "lasso.set_hogtie_attach_victim(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LASSO::SET_HOGTIE_ATTACH_VICTIM (0xFA2B916E) function."
    },
    "lasso.clear_hogtie_attach_victim": {
        "prefix": [
            "lasso.clear_hogtie_attach_victim",
            "clear_hogtie_attach_victim"
        ],
        "body": [
            "lasso.clear_hogtie_attach_victim(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::CLEAR_HOGTIE_ATTACH_VICTIM (0xB7A802C2) function."
    },
    "lasso.is_actor_hogtie_attached": {
        "prefix": [
            "lasso.is_actor_hogtie_attached",
            "is_actor_hogtie_attached"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.is_actor_hogtie_attached(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::IS_ACTOR_HOGTIE_ATTACHED (0x16EB367C) function."
    },
    "lasso.is_hogtie_putdown_obstructed": {
        "prefix": [
            "lasso.is_hogtie_putdown_obstructed",
            "is_hogtie_putdown_obstructed"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.is_hogtie_putdown_obstructed(unk0 --[[ integer ]])"
        ],
        "description": "LASSO::IS_HOGTIE_PUTDOWN_OBSTRUCTED (0xBCED635B) function."
    },
    "lasso.is_hogtie_pickup_obstructed": {
        "prefix": [
            "lasso.is_hogtie_pickup_obstructed",
            "is_hogtie_pickup_obstructed"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.is_hogtie_pickup_obstructed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LASSO::IS_HOGTIE_PICKUP_OBSTRUCTED (0x60D10483) function."
    },
    "lasso.is_hogtie_cutfree_obstructed": {
        "prefix": [
            "lasso.is_hogtie_cutfree_obstructed",
            "is_hogtie_cutfree_obstructed"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.is_hogtie_cutfree_obstructed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LASSO::IS_HOGTIE_CUTFREE_OBSTRUCTED (0x9377291F) function."
    },
    "lasso.is_hogtie_horse_pickup_obstructed": {
        "prefix": [
            "lasso.is_hogtie_horse_pickup_obstructed",
            "is_hogtie_horse_pickup_obstructed"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.is_hogtie_horse_pickup_obstructed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LASSO::IS_HOGTIE_HORSE_PICKUP_OBSTRUCTED (0x9634D42E) function."
    },
    "lasso.immediately_lasso_target": {
        "prefix": [
            "lasso.immediately_lasso_target",
            "immediately_lasso_target"
        ],
        "body": [
            "local result --[[ integer ]] = lasso.immediately_lasso_target(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "LASSO::IMMEDIATELY_LASSO_TARGET (0x8F8EDCCF) function."
    },
    "leash.create_leash_object": {
        "prefix": [
            "leash.create_leash_object",
            "create_leash_object"
        ],
        "body": [
            "local result --[[ integer ]] = leash.create_leash_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]], unk12 --[[ integer ]], unk13 --[[ integer ]], unk14 --[[ integer ]])"
        ],
        "description": "LEASH::CREATE_LEASH_OBJECT (0x9BCC06E2) function."
    },
    "leash.leash_constrain": {
        "prefix": [
            "leash.leash_constrain",
            "leash_constrain"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_constrain(unk0 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_CONSTRAIN (0x8EA68EB5) function."
    },
    "leash.leash_restart": {
        "prefix": [
            "leash.leash_restart",
            "leash_restart"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_restart(unk0 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_RESTART (0xE58339B3) function."
    },
    "leash.leash_set_constraint_length": {
        "prefix": [
            "leash.leash_set_constraint_length",
            "leash_set_constraint_length"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_set_constraint_length(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_SET_CONSTRAINT_LENGTH (0x7F190CA3) function."
    },
    "leash.leash_set_leash_length": {
        "prefix": [
            "leash.leash_set_leash_length",
            "leash_set_leash_length"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_set_leash_length(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_SET_LEASH_LENGTH (0x14BEC6F5) function."
    },
    "leash.leash_release_constraint": {
        "prefix": [
            "leash.leash_release_constraint",
            "leash_release_constraint"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_release_constraint(unk0 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_RELEASE_CONSTRAINT (0x7A1376B0) function."
    },
    "leash.leash_attach_to_world": {
        "prefix": [
            "leash.leash_attach_to_world",
            "leash_attach_to_world"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_attach_to_world(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_ATTACH_TO_WORLD (0x0FCDB481) function."
    },
    "leash.leash_attach_to_object": {
        "prefix": [
            "leash.leash_attach_to_object",
            "leash_attach_to_object"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_attach_to_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_ATTACH_TO_OBJECT (0x35D8B21E) function."
    },
    "leash.leash_attach_to_fragment_locator": {
        "prefix": [
            "leash.leash_attach_to_fragment_locator",
            "leash_attach_to_fragment_locator"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_attach_to_fragment_locator(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_ATTACH_TO_FRAGMENT_LOCATOR (0xE782EB20) function."
    },
    "leash.leash_attach_to_object_bone": {
        "prefix": [
            "leash.leash_attach_to_object_bone",
            "leash_attach_to_object_bone"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_attach_to_object_bone(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_ATTACH_TO_OBJECT_BONE (0x82A73B3D) function."
    },
    "leash.leash_attach_to_object_bone_visual": {
        "prefix": [
            "leash.leash_attach_to_object_bone_visual",
            "leash_attach_to_object_bone_visual"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_attach_to_object_bone_visual(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_ATTACH_TO_OBJECT_BONE_VISUAL (0x4B67B8BB) function."
    },
    "leash.leash_detach_object": {
        "prefix": [
            "leash.leash_detach_object",
            "leash_detach_object"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_detach_object(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_DETACH_OBJECT (0x951B8DF7) function."
    },
    "leash.leash_is_broken": {
        "prefix": [
            "leash.leash_is_broken",
            "leash_is_broken"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_is_broken(unk0 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_IS_BROKEN (0x46BE1D43) function."
    },
    "leash.leash_break": {
        "prefix": [
            "leash.leash_break",
            "leash_break"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_break(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_BREAK (0x8640261B) function."
    },
    "leash.create_rope_for_bridge_left": {
        "prefix": [
            "leash.create_rope_for_bridge_left",
            "create_rope_for_bridge_left"
        ],
        "body": [
            "local result --[[ integer ]] = leash.create_rope_for_bridge_left(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "LEASH::CREATE_ROPE_FOR_BRIDGE_LEFT (0xC039BBF1) function."
    },
    "leash.create_rope_for_bridge_right": {
        "prefix": [
            "leash.create_rope_for_bridge_right",
            "create_rope_for_bridge_right"
        ],
        "body": [
            "local result --[[ integer ]] = leash.create_rope_for_bridge_right(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "LEASH::CREATE_ROPE_FOR_BRIDGE_RIGHT (0x51CF9A54) function."
    },
    "leash.leash_stay_constrained": {
        "prefix": [
            "leash.leash_stay_constrained",
            "leash_stay_constrained"
        ],
        "body": [
            "local result --[[ integer ]] = leash.leash_stay_constrained(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "LEASH::LEASH_STAY_CONSTRAINED (0x5A72DD49) function."
    },
    "minigame.start_minigame": {
        "prefix": [
            "minigame.start_minigame",
            "start_minigame"
        ],
        "body": [
            "minigame.start_minigame(unk0 --[[ integer ]])"
        ],
        "description": "MINIGAME::START_MINIGAME (0xE8184916) function."
    },
    "minigame.push_minigame_input": {
        "prefix": [
            "minigame.push_minigame_input",
            "push_minigame_input"
        ],
        "body": [
            "minigame.push_minigame_input(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "MINIGAME::PUSH_MINIGAME_INPUT (0xE2B894D1) function."
    },
    "minigame.is_minigame_running": {
        "prefix": [
            "minigame.is_minigame_running",
            "is_minigame_running"
        ],
        "body": [
            "local result --[[ boolean ]] = minigame.is_minigame_running()"
        ],
        "description": "MINIGAME::IS_MINIGAME_RUNNING (0x117D7E71) function."
    },
    "minigame.end_current_minigame": {
        "prefix": [
            "minigame.end_current_minigame",
            "end_current_minigame"
        ],
        "body": [
            "minigame.end_current_minigame()"
        ],
        "description": "MINIGAME::END_CURRENT_MINIGAME (0xCA746CD2) function."
    },
    "minigame._0x6aad0420": {
        "prefix": [
            "minigame._0x6aad0420",
            "_0x6aad0420"
        ],
        "body": [
            "local result --[[ integer ]] = minigame._0x6aad0420(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "MINIGAME::_0x6AAD0420 (0x6AAD0420) function."
    },
    "minigame._0x655d350b": {
        "prefix": [
            "minigame._0x655d350b",
            "_0x655d350b"
        ],
        "body": [
            "local result --[[ integer ]] = minigame._0x655d350b(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "MINIGAME::_0x655D350B (0x655D350B) function."
    },
    "minigame.set_current_minigame_int": {
        "prefix": [
            "minigame.set_current_minigame_int",
            "set_current_minigame_int"
        ],
        "body": [
            "local result --[[ integer ]] = minigame.set_current_minigame_int(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "MINIGAME::SET_CURRENT_MINIGAME_INT (0x0627DDEC) function."
    },
    "minigame.set_minigame_win_state": {
        "prefix": [
            "minigame.set_minigame_win_state",
            "set_minigame_win_state"
        ],
        "body": [
            "minigame.set_minigame_win_state(unk0 --[[ integer ]])"
        ],
        "description": "MINIGAME::SET_MINIGAME_WIN_STATE (0x8275FDD4) function."
    },
    "misc.create_object_locator": {
        "prefix": [
            "misc.create_object_locator",
            "create_object_locator"
        ],
        "body": [
            "local result --[[ integer ]] = misc.create_object_locator(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "MISC::CREATE_OBJECT_LOCATOR (0x11069324) function."
    },
    "misc.object_locator_attach_to_object_bone": {
        "prefix": [
            "misc.object_locator_attach_to_object_bone",
            "object_locator_attach_to_object_bone"
        ],
        "body": [
            "local result --[[ integer ]] = misc.object_locator_attach_to_object_bone(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "MISC::OBJECT_LOCATOR_ATTACH_TO_OBJECT_BONE (0x0B24362F) function."
    },
    "misc.object_locator_attach_to_fragment_locator": {
        "prefix": [
            "misc.object_locator_attach_to_fragment_locator",
            "object_locator_attach_to_fragment_locator"
        ],
        "body": [
            "local result --[[ integer ]] = misc.object_locator_attach_to_fragment_locator(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "MISC::OBJECT_LOCATOR_ATTACH_TO_FRAGMENT_LOCATOR (0xE25F407D) function."
    },
    "misc.object_locator_attach_to_object": {
        "prefix": [
            "misc.object_locator_attach_to_object",
            "object_locator_attach_to_object"
        ],
        "body": [
            "local result --[[ integer ]] = misc.object_locator_attach_to_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "MISC::OBJECT_LOCATOR_ATTACH_TO_OBJECT (0xEB33480A) function."
    },
    "misc.object_locator_get_locator_local_orientation": {
        "prefix": [
            "misc.object_locator_get_locator_local_orientation",
            "object_locator_get_locator_local_orientation"
        ],
        "body": [
            "local result --[[ integer ]] = misc.object_locator_get_locator_local_orientation(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "MISC::OBJECT_LOCATOR_GET_LOCATOR_LOCAL_ORIENTATION (0x88F7432C) function."
    },
    "misc.object_locator_get_locator_local_position": {
        "prefix": [
            "misc.object_locator_get_locator_local_position",
            "object_locator_get_locator_local_position"
        ],
        "body": [
            "local result --[[ integer ]] = misc.object_locator_get_locator_local_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "MISC::OBJECT_LOCATOR_GET_LOCATOR_LOCAL_POSITION (0x04507DBC) function."
    },
    "mixer.dynamicmixer_triggerstate": {
        "prefix": [
            "mixer.dynamicmixer_triggerstate",
            "dynamicmixer_triggerstate"
        ],
        "body": [
            "mixer.dynamicmixer_triggerstate(unk0 --[[ integer ]])"
        ],
        "description": "MIXER::DYNAMICMIXER_TRIGGERSTATE (0xECD8E116) function."
    },
    "mixer.dynamicmixer_triggerstate_persistent": {
        "prefix": [
            "mixer.dynamicmixer_triggerstate_persistent",
            "dynamicmixer_triggerstate_persistent"
        ],
        "body": [
            "mixer.dynamicmixer_triggerstate_persistent(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "MIXER::DYNAMICMIXER_TRIGGERSTATE_PERSISTENT (0xA82D893C) function."
    },
    "mixer.dynamicmixer_detriggerstate": {
        "prefix": [
            "mixer.dynamicmixer_detriggerstate",
            "dynamicmixer_detriggerstate"
        ],
        "body": [
            "mixer.dynamicmixer_detriggerstate(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "MIXER::DYNAMICMIXER_DETRIGGERSTATE (0xF86010D1) function."
    },
    "mixer._dynamicmixer_triggerstate_preduel": {
        "prefix": [
            "mixer._dynamicmixer_triggerstate_preduel",
            "_dynamicmixer_triggerstate_preduel"
        ],
        "body": [
            "mixer._dynamicmixer_triggerstate_preduel()"
        ],
        "description": "MIXER::_DYNAMICMIXER_TRIGGERSTATE_PREDUEL (0xADCC16A2) function."
    },
    "motive.set_motive_by_enum": {
        "prefix": [
            "motive.set_motive_by_enum",
            "set_motive_by_enum"
        ],
        "body": [
            "local result --[[ integer ]] = motive.set_motive_by_enum(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ number ]])"
        ],
        "description": "MOTIVE::SET_MOTIVE_BY_ENUM (0x1BED8493) function."
    },
    "movie.world_movie_player": {
        "prefix": [
            "movie.world_movie_player",
            "world_movie_player"
        ],
        "body": [
            "local result --[[ integer ]] = movie.world_movie_player(unk0 --[[ integer ]])"
        ],
        "description": "MOVIE::WORLD_MOVIE_PLAYER (0x92028B49) function."
    },
    "movie._start_world_movie": {
        "prefix": [
            "movie._start_world_movie",
            "_start_world_movie"
        ],
        "body": [
            "movie._start_world_movie(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "MOVIE::_START_WORLD_MOVIE (0x7614AEBA) function."
    },
    "movie._stop_world_movie": {
        "prefix": [
            "movie._stop_world_movie",
            "_stop_world_movie"
        ],
        "body": [
            "movie._stop_world_movie()"
        ],
        "description": "MOVIE::_STOP_WORLD_MOVIE (0x69FC319E) function."
    },
    "movie._is_world_movie_playing": {
        "prefix": [
            "movie._is_world_movie_playing",
            "_is_world_movie_playing"
        ],
        "body": [
            "local result --[[ boolean ]] = movie._is_world_movie_playing()"
        ],
        "description": "MOVIE::_IS_WORLD_MOVIE_PLAYING (0xD036DF91) function."
    },
    "navmesh.streaming_is_movable_nav_mesh_resident": {
        "prefix": [
            "navmesh.streaming_is_movable_nav_mesh_resident",
            "streaming_is_movable_nav_mesh_resident"
        ],
        "body": [
            "local result --[[ integer ]] = navmesh.streaming_is_movable_nav_mesh_resident(unk0 --[[ integer ]])"
        ],
        "description": "NAVMESH::STREAMING_IS_MOVABLE_NAV_MESH_RESIDENT (0x8A0D3339) function."
    },
    "navmesh.streaming_request_movable_nav_mesh": {
        "prefix": [
            "navmesh.streaming_request_movable_nav_mesh",
            "streaming_request_movable_nav_mesh"
        ],
        "body": [
            "navmesh.streaming_request_movable_nav_mesh(unk0 --[[ integer ]])"
        ],
        "description": "NAVMESH::STREAMING_REQUEST_MOVABLE_NAV_MESH (0x63334F63) function."
    },
    "navmesh.streaming_unrequest_movable_nav_mesh": {
        "prefix": [
            "navmesh.streaming_unrequest_movable_nav_mesh",
            "streaming_unrequest_movable_nav_mesh"
        ],
        "body": [
            "navmesh.streaming_unrequest_movable_nav_mesh(unk0 --[[ integer ]])"
        ],
        "description": "NAVMESH::STREAMING_UNREQUEST_MOVABLE_NAV_MESH (0xC329E1DB) function."
    },
    "navmesh.set_actor_movable_nav_mesh": {
        "prefix": [
            "navmesh.set_actor_movable_nav_mesh",
            "set_actor_movable_nav_mesh"
        ],
        "body": [
            "navmesh.set_actor_movable_nav_mesh(unk0 --[[ integer ]])"
        ],
        "description": "NAVMESH::SET_ACTOR_MOVABLE_NAV_MESH (0xECEE9E20) function."
    },
    "navquery.create_nav_query": {
        "prefix": [
            "navquery.create_nav_query",
            "create_nav_query"
        ],
        "body": [
            "local result --[[ integer ]] = navquery.create_nav_query(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NAVQUERY::CREATE_NAV_QUERY (0xE2F41226) function."
    },
    "navquery.nav_query_is_done": {
        "prefix": [
            "navquery.nav_query_is_done",
            "nav_query_is_done"
        ],
        "body": [
            "local result --[[ integer ]] = navquery.nav_query_is_done(unk0 --[[ integer ]])"
        ],
        "description": "NAVQUERY::NAV_QUERY_IS_DONE (0xE96D01E5) function."
    },
    "navquery.nav_query_can_path_to_point": {
        "prefix": [
            "navquery.nav_query_can_path_to_point",
            "nav_query_can_path_to_point"
        ],
        "body": [
            "local result --[[ integer ]] = navquery.nav_query_can_path_to_point(unk0 --[[ integer ]])"
        ],
        "description": "NAVQUERY::NAV_QUERY_CAN_PATH_TO_POINT (0x5A511344) function."
    },
    "navquery.nav_query_receive_can_path_to_point": {
        "prefix": [
            "navquery.nav_query_receive_can_path_to_point",
            "nav_query_receive_can_path_to_point"
        ],
        "body": [
            "navquery.nav_query_receive_can_path_to_point(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NAVQUERY::NAV_QUERY_RECEIVE_CAN_PATH_TO_POINT (0xAFA35FFA) function."
    },
    "navquery.nav_query_start_can_path_to_point": {
        "prefix": [
            "navquery.nav_query_start_can_path_to_point",
            "nav_query_start_can_path_to_point"
        ],
        "body": [
            "navquery.nav_query_start_can_path_to_point(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "NAVQUERY::NAV_QUERY_START_CAN_PATH_TO_POINT (0x07A777D7) function."
    },
    "navquery.nav_query_stop": {
        "prefix": [
            "navquery.nav_query_stop",
            "nav_query_stop"
        ],
        "body": [
            "navquery.nav_query_stop(unk0 --[[ integer ]])"
        ],
        "description": "NAVQUERY::NAV_QUERY_STOP (0x50290FB3) function."
    },
    "net.net_log": {
        "prefix": [
            "net.net_log",
            "net_log"
        ],
        "body": [
            "net.net_log(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "NET::NET_LOG (0x48275716) function."
    },
    "net.net_is_online_available": {
        "prefix": [
            "net.net_is_online_available",
            "net_is_online_available"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_is_online_available()"
        ],
        "description": "NET::NET_IS_ONLINE_AVAILABLE (0x5FF2BAE0) function."
    },
    "net.net_is_session_client": {
        "prefix": [
            "net.net_is_session_client",
            "net_is_session_client"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_is_session_client()"
        ],
        "description": "NET::NET_IS_SESSION_CLIENT (0xFF65A07C) function."
    },
    "net.net_get_nat_type": {
        "prefix": [
            "net.net_get_nat_type",
            "net_get_nat_type"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_nat_type()"
        ],
        "description": "NET::NET_GET_NAT_TYPE (0x31700C0A) function."
    },
    "net.net_get_local_gamer_name": {
        "prefix": [
            "net.net_get_local_gamer_name",
            "net_get_local_gamer_name"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_local_gamer_name()"
        ],
        "description": "NET::NET_GET_LOCAL_GAMER_NAME (0x95CDCE7A) function."
    },
    "net.get_slot_for_host": {
        "prefix": [
            "net.get_slot_for_host",
            "get_slot_for_host"
        ],
        "body": [
            "local result --[[ integer ]] = net.get_slot_for_host()"
        ],
        "description": "NET::GET_SLOT_FOR_HOST (0x860FCDBD) function."
    },
    "net.get_num_players": {
        "prefix": [
            "net.get_num_players",
            "get_num_players"
        ],
        "body": [
            "local result --[[ integer ]] = net.get_num_players()"
        ],
        "description": "NET::GET_NUM_PLAYERS (0x0F99A8BC) function."
    },
    "net.net_start_new_script": {
        "prefix": [
            "net.net_start_new_script",
            "net_start_new_script"
        ],
        "body": [
            "local result --[[ boolean ]] = net.net_start_new_script(scriptpath --[[ string ]], stacksize --[[ integer ]])"
        ],
        "description": "NET::NET_START_NEW_SCRIPT (0x84D6F8A7) function."
    },
    "net.net_scriptmsg_send": {
        "prefix": [
            "net.net_scriptmsg_send",
            "net_scriptmsg_send"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_scriptmsg_send(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "NET::NET_SCRIPTMSG_SEND (0x5E985228) function."
    },
    "net.net_scriptmsg_ispending": {
        "prefix": [
            "net.net_scriptmsg_ispending",
            "net_scriptmsg_ispending"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_scriptmsg_ispending(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_SCRIPTMSG_ISPENDING (0xE2163ECC) function."
    },
    "net.net_scriptmsg_getnext": {
        "prefix": [
            "net.net_scriptmsg_getnext",
            "net_scriptmsg_getnext"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_scriptmsg_getnext(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "NET::NET_SCRIPTMSG_GETNEXT (0xB13DD691) function."
    },
    "net.net_scriptmsg_register_handler": {
        "prefix": [
            "net.net_scriptmsg_register_handler",
            "net_scriptmsg_register_handler"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_scriptmsg_register_handler(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_SCRIPTMSG_REGISTER_HANDLER (0x9253CC79) function."
    },
    "net.net_scriptmsg_query_handler": {
        "prefix": [
            "net.net_scriptmsg_query_handler",
            "net_scriptmsg_query_handler"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_scriptmsg_query_handler(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_SCRIPTMSG_QUERY_HANDLER (0x4957E482) function."
    },
    "net._net_is_slot_valid_in_client_broadcast_variables": {
        "prefix": [
            "net._net_is_slot_valid_in_client_broadcast_variables",
            "_net_is_slot_valid_in_client_broadcast_variables"
        ],
        "body": [
            "local result --[[ integer ]] = net._net_is_slot_valid_in_client_broadcast_variables(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::_NET_IS_SLOT_VALID_IN_CLIENT_BROADCAST_VARIABLES (0xF81E2097) function."
    },
    "net._net_is_client_data_valid_for_all_slots": {
        "prefix": [
            "net._net_is_client_data_valid_for_all_slots",
            "_net_is_client_data_valid_for_all_slots"
        ],
        "body": [
            "local result --[[ integer ]] = net._net_is_client_data_valid_for_all_slots(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::_NET_IS_CLIENT_DATA_VALID_FOR_ALL_SLOTS (0x64C2DD40) function."
    },
    "net.is_data_valid_for_host_broadcast_variables": {
        "prefix": [
            "net.is_data_valid_for_host_broadcast_variables",
            "is_data_valid_for_host_broadcast_variables"
        ],
        "body": [
            "local result --[[ integer ]] = net.is_data_valid_for_host_broadcast_variables(unk0 --[[ integer ]])"
        ],
        "description": "NET::IS_DATA_VALID_FOR_HOST_BROADCAST_VARIABLES (0xA80C6DE6) function."
    },
    "net.net_request_object": {
        "prefix": [
            "net.net_request_object",
            "net_request_object"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_request_object(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_REQUEST_OBJECT (0x68EC589D) function."
    },
    "net.net_object_replication_mode_start": {
        "prefix": [
            "net.net_object_replication_mode_start",
            "net_object_replication_mode_start"
        ],
        "body": [
            "net.net_object_replication_mode_start(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_OBJECT_REPLICATION_MODE_START (0x47C5E353) function."
    },
    "net.net_object_replication_mode_end": {
        "prefix": [
            "net.net_object_replication_mode_end",
            "net_object_replication_mode_end"
        ],
        "body": [
            "net.net_object_replication_mode_end(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_OBJECT_REPLICATION_MODE_END (0x3932B786) function."
    },
    "net.net_object_get_replication_mode": {
        "prefix": [
            "net.net_object_get_replication_mode",
            "net_object_get_replication_mode"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_object_get_replication_mode(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_OBJECT_GET_REPLICATION_MODE (0x138F38AC) function."
    },
    "net.net_object_set_replication_mode": {
        "prefix": [
            "net.net_object_set_replication_mode",
            "net_object_set_replication_mode"
        ],
        "body": [
            "net.net_object_set_replication_mode(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_OBJECT_SET_REPLICATION_MODE (0x3E509DF1) function."
    },
    "net.net_object_lock_ownership": {
        "prefix": [
            "net.net_object_lock_ownership",
            "net_object_lock_ownership"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_object_lock_ownership(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_OBJECT_LOCK_OWNERSHIP (0x8C7E41E2) function."
    },
    "net._net_set_replicate_always_to_layout": {
        "prefix": [
            "net._net_set_replicate_always_to_layout",
            "_net_set_replicate_always_to_layout"
        ],
        "body": [
            "net._net_set_replicate_always_to_layout(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::_NET_SET_REPLICATE_ALWAYS_TO_LAYOUT (0x1306549E) function."
    },
    "net._net_set_layout_objects_replicate_to_layout": {
        "prefix": [
            "net._net_set_layout_objects_replicate_to_layout",
            "_net_set_layout_objects_replicate_to_layout"
        ],
        "body": [
            "net._net_set_layout_objects_replicate_to_layout(unk0 --[[ integer ]])"
        ],
        "description": "NET::_NET_SET_LAYOUT_OBJECTS_REPLICATE_TO_LAYOUT (0x5C4CAE3A) function."
    },
    "net.net_actor_get_script_int": {
        "prefix": [
            "net.net_actor_get_script_int",
            "net_actor_get_script_int"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_actor_get_script_int(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_ACTOR_GET_SCRIPT_INT (0x579C2014) function."
    },
    "net.net_actor_set_equip_type": {
        "prefix": [
            "net.net_actor_set_equip_type",
            "net_actor_set_equip_type"
        ],
        "body": [
            "net.net_actor_set_equip_type(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_ACTOR_SET_EQUIP_TYPE (0x7837890B) function."
    },
    "net.net_actor_set_script_int": {
        "prefix": [
            "net.net_actor_set_script_int",
            "net_actor_set_script_int"
        ],
        "body": [
            "net.net_actor_set_script_int(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_ACTOR_SET_SCRIPT_INT (0xA6D794FE) function."
    },
    "net.net_object_set_script_int": {
        "prefix": [
            "net.net_object_set_script_int",
            "net_object_set_script_int"
        ],
        "body": [
            "net.net_object_set_script_int(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_OBJECT_SET_SCRIPT_INT (0x1C147E14) function."
    },
    "net.net_object_get_script_int": {
        "prefix": [
            "net.net_object_get_script_int",
            "net_object_get_script_int"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_object_get_script_int(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_OBJECT_GET_SCRIPT_INT (0xCA6231C1) function."
    },
    "net.net_actor_set_allow_blip_sync": {
        "prefix": [
            "net.net_actor_set_allow_blip_sync",
            "net_actor_set_allow_blip_sync"
        ],
        "body": [
            "net.net_actor_set_allow_blip_sync(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_ACTOR_SET_ALLOW_BLIP_SYNC (0xC09B114B) function."
    },
    "net.net_actor_set_gringo_navigation_complete": {
        "prefix": [
            "net.net_actor_set_gringo_navigation_complete",
            "net_actor_set_gringo_navigation_complete"
        ],
        "body": [
            "net.net_actor_set_gringo_navigation_complete(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_ACTOR_SET_GRINGO_NAVIGATION_COMPLETE (0x7284A71B) function."
    },
    "net.net_get_session_gamer_count": {
        "prefix": [
            "net.net_get_session_gamer_count",
            "net_get_session_gamer_count"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_session_gamer_count()"
        ],
        "description": "NET::NET_GET_SESSION_GAMER_COUNT (0x7AB65B0C) function."
    },
    "net.award_achievement": {
        "prefix": [
            "net.award_achievement",
            "award_achievement"
        ],
        "body": [
            "net.award_achievement(id --[[ integer ]])"
        ],
        "description": "NET::AWARD_ACHIEVEMENT (0xCAA24B1A) function."
    },
    "net.has_achievement_been_passed": {
        "prefix": [
            "net.has_achievement_been_passed",
            "has_achievement_been_passed"
        ],
        "body": [
            "local result --[[ boolean ]] = net.has_achievement_been_passed(id --[[ integer ]])"
        ],
        "description": "NET::HAS_ACHIEVEMENT_BEEN_PASSED (0x136A5BE9) function."
    },
    "net.award_avatar": {
        "prefix": [
            "net.award_avatar",
            "award_avatar"
        ],
        "body": [
            "local result --[[ integer ]] = net.award_avatar(unk0 --[[ integer ]])"
        ],
        "description": "NET::AWARD_AVATAR (0xDD33E221) function."
    },
    "net.net_get_posse_count": {
        "prefix": [
            "net.net_get_posse_count",
            "net_get_posse_count"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_posse_count()"
        ],
        "description": "NET::NET_GET_POSSE_COUNT (0xC4F9DA6E) function."
    },
    "net.net_is_posse_leader": {
        "prefix": [
            "net.net_is_posse_leader",
            "net_is_posse_leader"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_is_posse_leader()"
        ],
        "description": "NET::NET_IS_POSSE_LEADER (0x1CAD6D29) function."
    },
    "net.net_get_posse_leader_slot": {
        "prefix": [
            "net.net_get_posse_leader_slot",
            "net_get_posse_leader_slot"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_posse_leader_slot()"
        ],
        "description": "NET::NET_GET_POSSE_LEADER_SLOT (0x0D914C89) function."
    },
    "net.net_get_gamer_posse_leader": {
        "prefix": [
            "net.net_get_gamer_posse_leader",
            "net_get_gamer_posse_leader"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_gamer_posse_leader(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_GET_GAMER_POSSE_LEADER (0xFC52BD15) function."
    },
    "net.net_get_gamer_posse_size": {
        "prefix": [
            "net.net_get_gamer_posse_size",
            "net_get_gamer_posse_size"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_gamer_posse_size(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_GET_GAMER_POSSE_SIZE (0xB6006EA9) function."
    },
    "net.net_posse_remove_gamer": {
        "prefix": [
            "net.net_posse_remove_gamer",
            "net_posse_remove_gamer"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_posse_remove_gamer(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_POSSE_REMOVE_GAMER (0x98A5CDC5) function."
    },
    "net.net_posse_is_invite_present": {
        "prefix": [
            "net.net_posse_is_invite_present",
            "net_posse_is_invite_present"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_posse_is_invite_present(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_POSSE_IS_INVITE_PRESENT (0x106CE441) function."
    },
    "net.net_posse_is_request_present": {
        "prefix": [
            "net.net_posse_is_request_present",
            "net_posse_is_request_present"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_posse_is_request_present(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_POSSE_IS_REQUEST_PRESENT (0x6A7B9FAD) function."
    },
    "net.net_set_quickmatch_playlist_range": {
        "prefix": [
            "net.net_set_quickmatch_playlist_range",
            "net_set_quickmatch_playlist_range"
        ],
        "body": [
            "net.net_set_quickmatch_playlist_range(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_SET_QUICKMATCH_PLAYLIST_RANGE (0xD923CD1B) function."
    },
    "net.net_set_this_script_is_net_script": {
        "prefix": [
            "net.net_set_this_script_is_net_script",
            "net_set_this_script_is_net_script"
        ],
        "body": [
            "net.net_set_this_script_is_net_script(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_SET_THIS_SCRIPT_IS_NET_SCRIPT (0xEE3B79EE) function."
    },
    "net.net_unregister_as_net_script": {
        "prefix": [
            "net.net_unregister_as_net_script",
            "net_unregister_as_net_script"
        ],
        "body": [
            "net.net_unregister_as_net_script()"
        ],
        "description": "NET::NET_UNREGISTER_AS_NET_SCRIPT (0x4238C471) function."
    },
    "net.net_get_script_status": {
        "prefix": [
            "net.net_get_script_status",
            "net_get_script_status"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_script_status()"
        ],
        "description": "NET::NET_GET_SCRIPT_STATUS (0x667DA125) function."
    },
    "net.net_is_player_participant": {
        "prefix": [
            "net.net_is_player_participant",
            "net_is_player_participant"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_is_player_participant(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_IS_PLAYER_PARTICIPANT (0x110A9B2F) function."
    },
    "net.net_is_host_of_this_script": {
        "prefix": [
            "net.net_is_host_of_this_script",
            "net_is_host_of_this_script"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_is_host_of_this_script()"
        ],
        "description": "NET::NET_IS_HOST_OF_THIS_SCRIPT (0x6D403720) function."
    },
    "net.net_get_host_of_this_script": {
        "prefix": [
            "net.net_get_host_of_this_script",
            "net_get_host_of_this_script"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_host_of_this_script()"
        ],
        "description": "NET::NET_GET_HOST_OF_THIS_SCRIPT (0x9272C3BA) function."
    },
    "net.net_allow_players_to_join": {
        "prefix": [
            "net.net_allow_players_to_join",
            "net_allow_players_to_join"
        ],
        "body": [
            "net.net_allow_players_to_join(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_ALLOW_PLAYERS_TO_JOIN (0x408E28E2) function."
    },
    "net.net_is_script_registered_as_net_script": {
        "prefix": [
            "net.net_is_script_registered_as_net_script",
            "net_is_script_registered_as_net_script"
        ],
        "body": [
            "local result --[[ boolean ]] = net.net_is_script_registered_as_net_script()"
        ],
        "description": "NET::NET_IS_SCRIPT_REGISTERED_AS_NET_SCRIPT (0xC0FC4B57) function."
    },
    "net.net_script_get_num_participants": {
        "prefix": [
            "net.net_script_get_num_participants",
            "net_script_get_num_participants"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_script_get_num_participants()"
        ],
        "description": "NET::NET_SCRIPT_GET_NUM_PARTICIPANTS (0xD9965A9A) function."
    },
    "net.net_gamerdata_set": {
        "prefix": [
            "net.net_gamerdata_set",
            "net_gamerdata_set"
        ],
        "body": [
            "net.net_gamerdata_set(unk0 --[[ string ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::NET_GAMERDATA_SET (0x50C18480) function."
    },
    "net.net_get_kill_effect_on": {
        "prefix": [
            "net.net_get_kill_effect_on",
            "net_get_kill_effect_on"
        ],
        "body": [
            "local result --[[ boolean ]] = net.net_get_kill_effect_on()"
        ],
        "description": "NET::NET_GET_KILL_EFFECT_ON (0xE5645CB3) function."
    },
    "net._net_session_get_normalize_position": {
        "prefix": [
            "net._net_session_get_normalize_position",
            "_net_session_get_normalize_position"
        ],
        "body": [
            "local result --[[ integer ]] = net._net_session_get_normalize_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::_NET_SESSION_GET_NORMALIZE_POSITION (0x79AFAB1F) function."
    },
    "net._net_session_get_current_search_generation": {
        "prefix": [
            "net._net_session_get_current_search_generation",
            "_net_session_get_current_search_generation"
        ],
        "body": [
            "local result --[[ integer ]] = net._net_session_get_current_search_generation()"
        ],
        "description": "NET::_NET_SESSION_GET_CURRENT_SEARCH_GENERATION (0x581CAC89) function."
    },
    "net._net_session_get_generation_for_net_session_object": {
        "prefix": [
            "net._net_session_get_generation_for_net_session_object",
            "_net_session_get_generation_for_net_session_object"
        ],
        "body": [
            "local result --[[ integer ]] = net._net_session_get_generation_for_net_session_object(unk0 --[[ integer ]])"
        ],
        "description": "NET::_NET_SESSION_GET_GENERATION_FOR_NET_SESSION_OBJECT (0xA174152C) function."
    },
    "net._net_session_get_joined_generation_from_net_session_object": {
        "prefix": [
            "net._net_session_get_joined_generation_from_net_session_object",
            "_net_session_get_joined_generation_from_net_session_object"
        ],
        "body": [
            "local result --[[ integer ]] = net._net_session_get_joined_generation_from_net_session_object(unk0 --[[ integer ]])"
        ],
        "description": "NET::_NET_SESSION_GET_JOINED_GENERATION_FROM_NET_SESSION_OBJECT (0x0183A3F0) function."
    },
    "net.net_join_session_from_obj": {
        "prefix": [
            "net.net_join_session_from_obj",
            "net_join_session_from_obj"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_join_session_from_obj(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_JOIN_SESSION_FROM_OBJ (0x63034F52) function."
    },
    "net._net_get_session_gamemode_type": {
        "prefix": [
            "net._net_get_session_gamemode_type",
            "_net_get_session_gamemode_type"
        ],
        "body": [
            "local result --[[ integer ]] = net._net_get_session_gamemode_type(unk0 --[[ integer ]])"
        ],
        "description": "NET::_NET_GET_SESSION_GAMEMODE_TYPE (0xE9EAC45C) function."
    },
    "net.is_session_currently_joined_session": {
        "prefix": [
            "net.is_session_currently_joined_session",
            "is_session_currently_joined_session"
        ],
        "body": [
            "local result --[[ integer ]] = net.is_session_currently_joined_session(unk0 --[[ integer ]])"
        ],
        "description": "NET::IS_SESSION_CURRENTLY_JOINED_SESSION (0xBDF22FCA) function."
    },
    "net.net_session_set_game_locale_ex": {
        "prefix": [
            "net.net_session_set_game_locale_ex",
            "net_session_set_game_locale_ex"
        ],
        "body": [
            "net.net_session_set_game_locale_ex(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_SESSION_SET_GAME_LOCALE_EX (0x9EA132A3) function."
    },
    "net.net_session_set_game_mode_type": {
        "prefix": [
            "net.net_session_set_game_mode_type",
            "net_session_set_game_mode_type"
        ],
        "body": [
            "net.net_session_set_game_mode_type(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_SESSION_SET_GAME_MODE_TYPE (0xCB0BCAE2) function."
    },
    "net.net_voice_broadcast_enable": {
        "prefix": [
            "net.net_voice_broadcast_enable",
            "net_voice_broadcast_enable"
        ],
        "body": [
            "net.net_voice_broadcast_enable()"
        ],
        "description": "NET::NET_VOICE_BROADCAST_ENABLE (0x7A99E7DE) function."
    },
    "net.net_voice_broadcast_disable": {
        "prefix": [
            "net.net_voice_broadcast_disable",
            "net_voice_broadcast_disable"
        ],
        "body": [
            "net.net_voice_broadcast_disable()"
        ],
        "description": "NET::NET_VOICE_BROADCAST_DISABLE (0x1D5E39A0) function."
    },
    "net.net_is_unlocked": {
        "prefix": [
            "net.net_is_unlocked",
            "net_is_unlocked"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_is_unlocked(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_IS_UNLOCKED (0xC8B680B3) function."
    },
    "net.net_get_area_overload_state_for_slot": {
        "prefix": [
            "net.net_get_area_overload_state_for_slot",
            "net_get_area_overload_state_for_slot"
        ],
        "body": [
            "local result --[[ integer ]] = net.net_get_area_overload_state_for_slot(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_GET_AREA_OVERLOAD_STATE_FOR_SLOT (0xCB42389E) function."
    },
    "net.update_profile_stat": {
        "prefix": [
            "net.update_profile_stat",
            "update_profile_stat"
        ],
        "body": [
            "net.update_profile_stat(stat --[[ string ]], val --[[ number ]], unk --[[ integer ]])"
        ],
        "description": "NET::UPDATE_PROFILE_STAT (0xF2FA1DE8) function."
    },
    "net.update_string_profile_stat": {
        "prefix": [
            "net.update_string_profile_stat",
            "update_string_profile_stat"
        ],
        "body": [
            "net.update_string_profile_stat(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET::UPDATE_STRING_PROFILE_STAT (0xCF674E31) function."
    },
    "net.net_broadcast_explode_target_event": {
        "prefix": [
            "net.net_broadcast_explode_target_event",
            "net_broadcast_explode_target_event"
        ],
        "body": [
            "net.net_broadcast_explode_target_event(unk0 --[[ integer ]])"
        ],
        "description": "NET::NET_BROADCAST_EXPLODE_TARGET_EVENT (0x49BC0219) function."
    },
    "net.net_set_unlock": {
        "prefix": [
            "net.net_set_unlock",
            "net_set_unlock"
        ],
        "body": [
            "net.net_set_unlock()"
        ],
        "description": "NET::NET_SET_UNLOCK (0x489A2B93) function."
    },
    "net2._net_gametype_add_gametype_entry": {
        "prefix": [
            "net2._net_gametype_add_gametype_entry",
            "_net_gametype_add_gametype_entry"
        ],
        "body": [
            "local result --[[ integer ]] = net2._net_gametype_add_gametype_entry(unk0 --[[ integer ]])"
        ],
        "description": "NET2::_NET_GAMETYPE_ADD_GAMETYPE_ENTRY (0x55C5BB93) function."
    },
    "net2._net_gametype_get_gametype_entry": {
        "prefix": [
            "net2._net_gametype_get_gametype_entry",
            "_net_gametype_get_gametype_entry"
        ],
        "body": [
            "local result --[[ integer ]] = net2._net_gametype_get_gametype_entry(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET2::_NET_GAMETYPE_GET_GAMETYPE_ENTRY (0xFAD5A270) function."
    },
    "net2.game_instance_iterator_start": {
        "prefix": [
            "net2.game_instance_iterator_start",
            "game_instance_iterator_start"
        ],
        "body": [
            "local result --[[ integer ]] = net2.game_instance_iterator_start(unk0 --[[ integer ]])"
        ],
        "description": "NET2::GAME_INSTANCE_ITERATOR_START (0x4A721118) function."
    },
    "net2.game_instance_iterator_next": {
        "prefix": [
            "net2.game_instance_iterator_next",
            "game_instance_iterator_next"
        ],
        "body": [
            "local result --[[ integer ]] = net2.game_instance_iterator_next(unk0 --[[ integer ]])"
        ],
        "description": "NET2::GAME_INSTANCE_ITERATOR_NEXT (0x4500B98A) function."
    },
    "net2.game_instance_set_region": {
        "prefix": [
            "net2.game_instance_set_region",
            "game_instance_set_region"
        ],
        "body": [
            "local result --[[ integer ]] = net2.game_instance_set_region(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET2::GAME_INSTANCE_SET_REGION (0x85049505) function."
    },
    "net2.add_playlist_to_db": {
        "prefix": [
            "net2.add_playlist_to_db",
            "add_playlist_to_db"
        ],
        "body": [
            "local result --[[ integer ]] = net2.add_playlist_to_db(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET2::ADD_PLAYLIST_TO_DB (0x5C51D43C) function."
    },
    "net2.get_playlist_from_db": {
        "prefix": [
            "net2.get_playlist_from_db",
            "get_playlist_from_db"
        ],
        "body": [
            "local result --[[ integer ]] = net2.get_playlist_from_db(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET2::GET_PLAYLIST_FROM_DB (0x0E2C4B68) function."
    },
    "net2.get_playlist_from_db_by_name": {
        "prefix": [
            "net2.get_playlist_from_db_by_name",
            "get_playlist_from_db_by_name"
        ],
        "body": [
            "local result --[[ integer ]] = net2.get_playlist_from_db_by_name(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET2::GET_PLAYLIST_FROM_DB_BY_NAME (0xB514ECA7) function."
    },
    "net_stats.net_update_leaderboard": {
        "prefix": [
            "net_stats.net_update_leaderboard",
            "net_update_leaderboard"
        ],
        "body": [
            "net_stats.net_update_leaderboard(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_UPDATE_LEADERBOARD (0x12304873) function."
    },
    "net_stats.net_start_lb_update": {
        "prefix": [
            "net_stats.net_start_lb_update",
            "net_start_lb_update"
        ],
        "body": [
            "net_stats.net_start_lb_update(unk0 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_START_LB_UPDATE (0x4D0C8AA4) function."
    },
    "net_stats.net_end_lb_update": {
        "prefix": [
            "net_stats.net_end_lb_update",
            "net_end_lb_update"
        ],
        "body": [
            "net_stats.net_end_lb_update()"
        ],
        "description": "NET_STATS::NET_END_LB_UPDATE (0x89277EA3) function."
    },
    "net_stats.net_create_friend_score_reader": {
        "prefix": [
            "net_stats.net_create_friend_score_reader",
            "net_create_friend_score_reader"
        ],
        "body": [
            "net_stats.net_create_friend_score_reader(unk0 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_CREATE_FRIEND_SCORE_READER (0x2B8F86ED) function."
    },
    "net_stats.net_report_friend_scores": {
        "prefix": [
            "net_stats.net_report_friend_scores",
            "net_report_friend_scores"
        ],
        "body": [
            "net_stats.net_report_friend_scores(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_REPORT_FRIEND_SCORES (0x88249424) function."
    },
    "net_stats.net_get_local_gamer_score_info": {
        "prefix": [
            "net_stats.net_get_local_gamer_score_info",
            "net_get_local_gamer_score_info"
        ],
        "body": [
            "net_stats.net_get_local_gamer_score_info(unk0 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_GET_LOCAL_GAMER_SCORE_INFO (0x87A3A38D) function."
    },
    "net_stats.net_get_nearest_friend_score_info": {
        "prefix": [
            "net_stats.net_get_nearest_friend_score_info",
            "net_get_nearest_friend_score_info"
        ],
        "body": [
            "net_stats.net_get_nearest_friend_score_info(unk0 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_GET_NEAREST_FRIEND_SCORE_INFO (0xD7572C68) function."
    },
    "net_stats.net_get_nearest_friend_name": {
        "prefix": [
            "net_stats.net_get_nearest_friend_name",
            "net_get_nearest_friend_name"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_get_nearest_friend_name()"
        ],
        "description": "NET_STATS::NET_GET_NEAREST_FRIEND_NAME (0x76F09F04) function."
    },
    "net_stats.net_get_slot_of_nearest_friend": {
        "prefix": [
            "net_stats.net_get_slot_of_nearest_friend",
            "net_get_slot_of_nearest_friend"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_get_slot_of_nearest_friend()"
        ],
        "description": "NET_STATS::NET_GET_SLOT_OF_NEAREST_FRIEND (0xA684E813) function."
    },
    "net_stats.net_is_friend_score_info_available": {
        "prefix": [
            "net_stats.net_is_friend_score_info_available",
            "net_is_friend_score_info_available"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_is_friend_score_info_available()"
        ],
        "description": "NET_STATS::NET_IS_FRIEND_SCORE_INFO_AVAILABLE (0xE5C5CE63) function."
    },
    "net_stats.net_get_local_gamer_rank": {
        "prefix": [
            "net_stats.net_get_local_gamer_rank",
            "net_get_local_gamer_rank"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_get_local_gamer_rank()"
        ],
        "description": "NET_STATS::NET_GET_LOCAL_GAMER_RANK (0x4F652A00) function."
    },
    "net_stats.net_get_nearest_friend_rank": {
        "prefix": [
            "net_stats.net_get_nearest_friend_rank",
            "net_get_nearest_friend_rank"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_get_nearest_friend_rank()"
        ],
        "description": "NET_STATS::NET_GET_NEAREST_FRIEND_RANK (0xFC564903) function."
    },
    "net_stats.net_lb_friends_select_nearest": {
        "prefix": [
            "net_stats.net_lb_friends_select_nearest",
            "net_lb_friends_select_nearest"
        ],
        "body": [
            "net_stats.net_lb_friends_select_nearest()"
        ],
        "description": "NET_STATS::NET_LB_FRIENDS_SELECT_NEAREST (0x7154D15B) function."
    },
    "net_stats.net_challenge_lb_create_reader": {
        "prefix": [
            "net_stats.net_challenge_lb_create_reader",
            "net_challenge_lb_create_reader"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_create_reader(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_CREATE_READER (0x86BC0A55) function."
    },
    "net_stats.net_challenge_lb_destroy_reader": {
        "prefix": [
            "net_stats.net_challenge_lb_destroy_reader",
            "net_challenge_lb_destroy_reader"
        ],
        "body": [
            "net_stats.net_challenge_lb_destroy_reader()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_DESTROY_READER (0xEB4A6D85) function."
    },
    "net_stats.net_challenge_lb_does_reader_exist": {
        "prefix": [
            "net_stats.net_challenge_lb_does_reader_exist",
            "net_challenge_lb_does_reader_exist"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_does_reader_exist()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_DOES_READER_EXIST (0x5FD52711) function."
    },
    "net_stats.net_challenge_lb_is_read_complete": {
        "prefix": [
            "net_stats.net_challenge_lb_is_read_complete",
            "net_challenge_lb_is_read_complete"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_is_read_complete()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_IS_READ_COMPLETE (0xD0808C42) function."
    },
    "net_stats.net_challenge_lb_is_local_gamer_info_valid": {
        "prefix": [
            "net_stats.net_challenge_lb_is_local_gamer_info_valid",
            "net_challenge_lb_is_local_gamer_info_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = net_stats.net_challenge_lb_is_local_gamer_info_valid()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_IS_LOCAL_GAMER_INFO_VALID (0x097BB984) function."
    },
    "net_stats.net_challenge_lb_get_local_gamer_name": {
        "prefix": [
            "net_stats.net_challenge_lb_get_local_gamer_name",
            "net_challenge_lb_get_local_gamer_name"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_get_local_gamer_name()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_GET_LOCAL_GAMER_NAME (0xEA7ADF42) function."
    },
    "net_stats.net_challenge_lb_get_local_gamer_stats": {
        "prefix": [
            "net_stats.net_challenge_lb_get_local_gamer_stats",
            "net_challenge_lb_get_local_gamer_stats"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_get_local_gamer_stats(unk0 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_GET_LOCAL_GAMER_STATS (0x3A8C77AD) function."
    },
    "net_stats.net_challenge_lb_is_top_friend_info_valid": {
        "prefix": [
            "net_stats.net_challenge_lb_is_top_friend_info_valid",
            "net_challenge_lb_is_top_friend_info_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = net_stats.net_challenge_lb_is_top_friend_info_valid()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_IS_TOP_FRIEND_INFO_VALID (0xE89C6E4F) function."
    },
    "net_stats.net_challenge_lb_get_top_friend_name": {
        "prefix": [
            "net_stats.net_challenge_lb_get_top_friend_name",
            "net_challenge_lb_get_top_friend_name"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_get_top_friend_name()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_GET_TOP_FRIEND_NAME (0x0791F35A) function."
    },
    "net_stats.net_challenge_lb_get_top_friend_stats": {
        "prefix": [
            "net_stats.net_challenge_lb_get_top_friend_stats",
            "net_challenge_lb_get_top_friend_stats"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_get_top_friend_stats(unk0 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_GET_TOP_FRIEND_STATS (0x49C2B05F) function."
    },
    "net_stats.net_challenge_lb_is_top_scorer_info_valid": {
        "prefix": [
            "net_stats.net_challenge_lb_is_top_scorer_info_valid",
            "net_challenge_lb_is_top_scorer_info_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = net_stats.net_challenge_lb_is_top_scorer_info_valid()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_IS_TOP_SCORER_INFO_VALID (0xC813DBEF) function."
    },
    "net_stats.net_challenge_lb_get_top_scorer_name": {
        "prefix": [
            "net_stats.net_challenge_lb_get_top_scorer_name",
            "net_challenge_lb_get_top_scorer_name"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_get_top_scorer_name()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_GET_TOP_SCORER_NAME (0xE6B4F505) function."
    },
    "net_stats.net_challenge_lb_get_top_scorer_stats": {
        "prefix": [
            "net_stats.net_challenge_lb_get_top_scorer_stats",
            "net_challenge_lb_get_top_scorer_stats"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_get_top_scorer_stats(unk0 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_GET_TOP_SCORER_STATS (0x70AF0351) function."
    },
    "net_stats.net_challenge_lb_is_scorer_above_player_info_valid": {
        "prefix": [
            "net_stats.net_challenge_lb_is_scorer_above_player_info_valid",
            "net_challenge_lb_is_scorer_above_player_info_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = net_stats.net_challenge_lb_is_scorer_above_player_info_valid()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_IS_SCORER_ABOVE_PLAYER_INFO_VALID (0x293C3288) function."
    },
    "net_stats.net_challenge_lb_get_scorer_above_player_name": {
        "prefix": [
            "net_stats.net_challenge_lb_get_scorer_above_player_name",
            "net_challenge_lb_get_scorer_above_player_name"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_get_scorer_above_player_name()"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_GET_SCORER_ABOVE_PLAYER_NAME (0xA7F231B0) function."
    },
    "net_stats.net_challenge_lb_get_scorer_above_player_stats": {
        "prefix": [
            "net_stats.net_challenge_lb_get_scorer_above_player_stats",
            "net_challenge_lb_get_scorer_above_player_stats"
        ],
        "body": [
            "local result --[[ integer ]] = net_stats.net_challenge_lb_get_scorer_above_player_stats(unk0 --[[ integer ]])"
        ],
        "description": "NET_STATS::NET_CHALLENGE_LB_GET_SCORER_ABOVE_PLAYER_STATS (0x984749B4) function."
    },
    "net_ui.net_get_and_clear_game_mode_request": {
        "prefix": [
            "net_ui.net_get_and_clear_game_mode_request",
            "net_get_and_clear_game_mode_request"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_get_and_clear_game_mode_request()"
        ],
        "description": "NET_UI::NET_GET_AND_CLEAR_GAME_MODE_REQUEST (0x8808546E) function."
    },
    "net_ui.net_get_and_clear_playlist_request": {
        "prefix": [
            "net_ui.net_get_and_clear_playlist_request",
            "net_get_and_clear_playlist_request"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_get_and_clear_playlist_request()"
        ],
        "description": "NET_UI::NET_GET_AND_CLEAR_PLAYLIST_REQUEST (0x1A47001B) function."
    },
    "net_ui.net_get_and_clear_quit_game_request": {
        "prefix": [
            "net_ui.net_get_and_clear_quit_game_request",
            "net_get_and_clear_quit_game_request"
        ],
        "body": [
            "local result --[[ boolean ]] = net_ui.net_get_and_clear_quit_game_request()"
        ],
        "description": "NET_UI::NET_GET_AND_CLEAR_QUIT_GAME_REQUEST (0x0FF6B8F4) function."
    },
    "net_ui.net_get_free_roam_mode": {
        "prefix": [
            "net_ui.net_get_free_roam_mode",
            "net_get_free_roam_mode"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_get_free_roam_mode()"
        ],
        "description": "NET_UI::NET_GET_FREE_ROAM_MODE (0x81F24788) function."
    },
    "net_ui.net_set_free_roam_mode": {
        "prefix": [
            "net_ui.net_set_free_roam_mode",
            "net_set_free_roam_mode"
        ],
        "body": [
            "net_ui.net_set_free_roam_mode(mode --[[ integer ]])"
        ],
        "description": "NET_UI::NET_SET_FREE_ROAM_MODE (0x41921C98) function."
    },
    "net_ui.net_register_game_type": {
        "prefix": [
            "net_ui.net_register_game_type",
            "net_register_game_type"
        ],
        "body": [
            "net_ui.net_register_game_type(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_REGISTER_GAME_TYPE (0xE822010A) function."
    },
    "net_ui.net_register_playlist_type": {
        "prefix": [
            "net_ui.net_register_playlist_type",
            "net_register_playlist_type"
        ],
        "body": [
            "net_ui.net_register_playlist_type(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_REGISTER_PLAYLIST_TYPE (0xA9459BB6) function."
    },
    "net_ui.net_set_playlist_locked": {
        "prefix": [
            "net_ui.net_set_playlist_locked",
            "net_set_playlist_locked"
        ],
        "body": [
            "net_ui.net_set_playlist_locked(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_SET_PLAYLIST_LOCKED (0x9D9784B8) function."
    },
    "net_ui.net_get_joinwish_pad": {
        "prefix": [
            "net_ui.net_get_joinwish_pad",
            "net_get_joinwish_pad"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_get_joinwish_pad()"
        ],
        "description": "NET_UI::NET_GET_JOINWISH_PAD (0x03962973) function."
    },
    "net_ui.net_authenticate_gamer": {
        "prefix": [
            "net_ui.net_authenticate_gamer",
            "net_authenticate_gamer"
        ],
        "body": [
            "local result --[[ boolean ]] = net_ui.net_authenticate_gamer(unused --[[ integer ]], launchmode --[[ string ]])"
        ],
        "description": "NET_UI::NET_AUTHENTICATE_GAMER (0x8E0D7219) function."
    },
    "net_ui.net_get_gamer_hex_color": {
        "prefix": [
            "net_ui.net_get_gamer_hex_color",
            "net_get_gamer_hex_color"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_get_gamer_hex_color(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_GET_GAMER_HEX_COLOR (0x9BC05C90) function."
    },
    "net_ui.net_get_gamer_rgb_color": {
        "prefix": [
            "net_ui.net_get_gamer_rgb_color",
            "net_get_gamer_rgb_color"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_get_gamer_rgb_color(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_GET_GAMER_RGB_COLOR (0x97931B87) function."
    },
    "net_ui.net_is_gamer_radar_blip_visible": {
        "prefix": [
            "net_ui.net_is_gamer_radar_blip_visible",
            "net_is_gamer_radar_blip_visible"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_is_gamer_radar_blip_visible(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_IS_GAMER_RADAR_BLIP_VISIBLE (0xFE83A4FE) function."
    },
    "net_ui._net_sys_ui_set_position": {
        "prefix": [
            "net_ui._net_sys_ui_set_position",
            "_net_sys_ui_set_position"
        ],
        "body": [
            "net_ui._net_sys_ui_set_position(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::_NET_SYS_UI_SET_POSITION (0x8DEC3E03) function."
    },
    "net_ui.net_player_barker_reset": {
        "prefix": [
            "net_ui.net_player_barker_reset",
            "net_player_barker_reset"
        ],
        "body": [
            "net_ui.net_player_barker_reset(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_BARKER_RESET (0xBECB3EEC) function."
    },
    "net_ui.net_get_using_sphere_curves": {
        "prefix": [
            "net_ui.net_get_using_sphere_curves",
            "net_get_using_sphere_curves"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_get_using_sphere_curves(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_GET_USING_SPHERE_CURVES (0x75F27D60) function."
    },
    "net_ui.net_player_show_context_menu": {
        "prefix": [
            "net_ui.net_player_show_context_menu",
            "net_player_show_context_menu"
        ],
        "body": [
            "net_ui.net_player_show_context_menu(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_SHOW_CONTEXT_MENU (0xA64A451E) function."
    },
    "net_ui.net_player_list_reset": {
        "prefix": [
            "net_ui.net_player_list_reset",
            "net_player_list_reset"
        ],
        "body": [
            "net_ui.net_player_list_reset()"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_RESET (0x67031EDA) function."
    },
    "net_ui.net_player_list_add_item": {
        "prefix": [
            "net_ui.net_player_list_add_item",
            "net_player_list_add_item"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_player_list_add_item(unk0 --[[ string ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_ADD_ITEM (0xFD355ED1) function."
    },
    "net_ui.net_player_list_add_gamer_slot": {
        "prefix": [
            "net_ui.net_player_list_add_gamer_slot",
            "net_player_list_add_gamer_slot"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_player_list_add_gamer_slot(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_ADD_GAMER_SLOT (0x805AC16A) function."
    },
    "net_ui.net_player_list_set_highlight": {
        "prefix": [
            "net_ui.net_player_list_set_highlight",
            "net_player_list_set_highlight"
        ],
        "body": [
            "net_ui.net_player_list_set_highlight(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_HIGHLIGHT (0x0AAE9E6B) function."
    },
    "net_ui.net_player_list_set_top_team": {
        "prefix": [
            "net_ui.net_player_list_set_top_team",
            "net_player_list_set_top_team"
        ],
        "body": [
            "net_ui.net_player_list_set_top_team(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_TOP_TEAM (0x20B684AB) function."
    },
    "net_ui.net_player_list_set_team_score": {
        "prefix": [
            "net_ui.net_player_list_set_team_score",
            "net_player_list_set_team_score"
        ],
        "body": [
            "net_ui.net_player_list_set_team_score(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_TEAM_SCORE (0x84CD0651) function."
    },
    "net_ui.net_player_list_set_team_sort": {
        "prefix": [
            "net_ui.net_player_list_set_team_sort",
            "net_player_list_set_team_sort"
        ],
        "body": [
            "net_ui.net_player_list_set_team_sort(disable --[[ boolean ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_TEAM_SORT (0xA56B459C) function."
    },
    "net_ui.net_player_list_set_title": {
        "prefix": [
            "net_ui.net_player_list_set_title",
            "net_player_list_set_title"
        ],
        "body": [
            "net_ui.net_player_list_set_title(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_TITLE (0x0547A660) function."
    },
    "net_ui.net_player_list_set_template": {
        "prefix": [
            "net_ui.net_player_list_set_template",
            "net_player_list_set_template"
        ],
        "body": [
            "net_ui.net_player_list_set_template(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_TEMPLATE (0xD6111569) function."
    },
    "net_ui.net_player_list_set_header": {
        "prefix": [
            "net_ui.net_player_list_set_header",
            "net_player_list_set_header"
        ],
        "body": [
            "net_ui.net_player_list_set_header(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_HEADER (0xFA382FCB) function."
    },
    "net_ui.net_player_list_set_description": {
        "prefix": [
            "net_ui.net_player_list_set_description",
            "net_player_list_set_description"
        ],
        "body": [
            "net_ui.net_player_list_set_description(unk0 --[[ string ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_DESCRIPTION (0xCF065186) function."
    },
    "net_ui.net_player_list_timer_set": {
        "prefix": [
            "net_ui.net_player_list_timer_set",
            "net_player_list_timer_set"
        ],
        "body": [
            "net_ui.net_player_list_timer_set(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_TIMER_SET (0xBE7965C8) function."
    },
    "net_ui.net_player_list_timer_enable_flashing": {
        "prefix": [
            "net_ui.net_player_list_timer_enable_flashing",
            "net_player_list_timer_enable_flashing"
        ],
        "body": [
            "net_ui.net_player_list_timer_enable_flashing(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_TIMER_ENABLE_FLASHING (0xD4C7E0D5) function."
    },
    "net_ui.net_player_list_set_current_item": {
        "prefix": [
            "net_ui.net_player_list_set_current_item",
            "net_player_list_set_current_item"
        ],
        "body": [
            "net_ui.net_player_list_set_current_item(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_CURRENT_ITEM (0x98FC68AF) function."
    },
    "net_ui.net_player_list_set_current_item_by_slot": {
        "prefix": [
            "net_ui.net_player_list_set_current_item_by_slot",
            "net_player_list_set_current_item_by_slot"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_player_list_set_current_item_by_slot(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_CURRENT_ITEM_BY_SLOT (0x95A543E2) function."
    },
    "net_ui.net_player_list_set_current_item_mscore_string": {
        "prefix": [
            "net_ui.net_player_list_set_current_item_mscore_string",
            "net_player_list_set_current_item_mscore_string"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_player_list_set_current_item_mscore_string(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_CURRENT_ITEM_MSCORE_STRING (0xC673362C) function."
    },
    "net_ui.net_player_list_set_current_item_mscore_int": {
        "prefix": [
            "net_ui.net_player_list_set_current_item_mscore_int",
            "net_player_list_set_current_item_mscore_int"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_player_list_set_current_item_mscore_int(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_CURRENT_ITEM_MSCORE_INT (0xEC6F465F) function."
    },
    "net_ui.net_player_list_set_current_item_team": {
        "prefix": [
            "net_ui.net_player_list_set_current_item_team",
            "net_player_list_set_current_item_team"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_player_list_set_current_item_team(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_CURRENT_ITEM_TEAM (0x794F5C21) function."
    },
    "net_ui.net_player_list_set_current_item_priority": {
        "prefix": [
            "net_ui.net_player_list_set_current_item_priority",
            "net_player_list_set_current_item_priority"
        ],
        "body": [
            "net_ui.net_player_list_set_current_item_priority(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_CURRENT_ITEM_PRIORITY (0xBD42097A) function."
    },
    "net_ui.net_player_list_set_current_item_dead": {
        "prefix": [
            "net_ui.net_player_list_set_current_item_dead",
            "net_player_list_set_current_item_dead"
        ],
        "body": [
            "local result --[[ integer ]] = net_ui.net_player_list_set_current_item_dead(unk0 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_PLAYER_LIST_SET_CURRENT_ITEM_DEAD (0xC09ACD5C) function."
    },
    "net_ui.net_ticker_reportf": {
        "prefix": [
            "net_ui.net_ticker_reportf",
            "net_ticker_reportf"
        ],
        "body": [
            "net_ui.net_ticker_reportf(unk0 --[[ string ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_TICKER_REPORTF (0xC73DAD2B) function."
    },
    "net_ui.net_ticker_clear": {
        "prefix": [
            "net_ui.net_ticker_clear",
            "net_ticker_clear"
        ],
        "body": [
            "net_ui.net_ticker_clear()"
        ],
        "description": "NET_UI::NET_TICKER_CLEAR (0x8A1D83F2) function."
    },
    "net_ui.net_xp_total_report_change": {
        "prefix": [
            "net_ui.net_xp_total_report_change",
            "net_xp_total_report_change"
        ],
        "body": [
            "net_ui.net_xp_total_report_change(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_XP_TOTAL_REPORT_CHANGE (0xA6403262) function."
    },
    "net_ui.net_scoregraph_setup": {
        "prefix": [
            "net_ui.net_scoregraph_setup",
            "net_scoregraph_setup"
        ],
        "body": [
            "net_ui.net_scoregraph_setup(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_SCOREGRAPH_SETUP (0x27D40FD1) function."
    },
    "net_ui.net_scoregraph_clear_markers": {
        "prefix": [
            "net_ui.net_scoregraph_clear_markers",
            "net_scoregraph_clear_markers"
        ],
        "body": [
            "net_ui.net_scoregraph_clear_markers()"
        ],
        "description": "NET_UI::NET_SCOREGRAPH_CLEAR_MARKERS (0xA3AE09EF) function."
    },
    "net_ui.net_scoregraph_add_player_score": {
        "prefix": [
            "net_ui.net_scoregraph_add_player_score",
            "net_scoregraph_add_player_score"
        ],
        "body": [
            "net_ui.net_scoregraph_add_player_score(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_SCOREGRAPH_ADD_PLAYER_SCORE (0x746897AB) function."
    },
    "net_ui.net_scoregraph_add_player_label": {
        "prefix": [
            "net_ui.net_scoregraph_add_player_label",
            "net_scoregraph_add_player_label"
        ],
        "body": [
            "net_ui.net_scoregraph_add_player_label(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_SCOREGRAPH_ADD_PLAYER_LABEL (0xB4C867BD) function."
    },
    "net_ui.net_scoregraph_add_team_score": {
        "prefix": [
            "net_ui.net_scoregraph_add_team_score",
            "net_scoregraph_add_team_score"
        ],
        "body": [
            "net_ui.net_scoregraph_add_team_score(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_SCOREGRAPH_ADD_TEAM_SCORE (0x12558DBD) function."
    },
    "net_ui.net_scoregraph_add_team_label": {
        "prefix": [
            "net_ui.net_scoregraph_add_team_label",
            "net_scoregraph_add_team_label"
        ],
        "body": [
            "net_ui.net_scoregraph_add_team_label(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "NET_UI::NET_SCOREGRAPH_ADD_TEAM_LABEL (0x134AAF17) function."
    },
    "object.verify_type_count": {
        "prefix": [
            "object.verify_type_count",
            "verify_type_count"
        ],
        "body": [
            "object.verify_type_count(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::VERIFY_TYPE_COUNT (0x0B396DFF) function."
    },
    "object.verify_event_count": {
        "prefix": [
            "object.verify_event_count",
            "verify_event_count"
        ],
        "body": [
            "object.verify_event_count(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::VERIFY_EVENT_COUNT (0x24F3A0DB) function."
    },
    "object._0x26011c78": {
        "prefix": [
            "object._0x26011c78",
            "_0x26011c78"
        ],
        "body": [
            "local result --[[ integer ]] = object._0x26011c78(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::_0x26011C78 (0x26011C78) function."
    },
    "object.log_object2": {
        "prefix": [
            "object.log_object2",
            "log_object2"
        ],
        "body": [
            "object.log_object2(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "OBJECT::LOG_OBJECT2 (0xC8C0C708) function."
    },
    "object.log_object3": {
        "prefix": [
            "object.log_object3",
            "log_object3"
        ],
        "body": [
            "object.log_object3(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "OBJECT::LOG_OBJECT3 (0x9A756A72) function."
    },
    "object.is_layoutref_valid": {
        "prefix": [
            "object.is_layoutref_valid",
            "is_layoutref_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = object.is_layoutref_valid(layout --[[ integer ]])"
        ],
        "description": "OBJECT::IS_LAYOUTREF_VALID (0xFC8E55ED) function."
    },
    "object.is_object_valid": {
        "prefix": [
            "object.is_object_valid",
            "is_object_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = object.is_object_valid(object --[[ integer ]])"
        ],
        "description": "OBJECT::IS_OBJECT_VALID (0xD7E7187B) function."
    },
    "object.is_iterator_valid": {
        "prefix": [
            "object.is_iterator_valid",
            "is_iterator_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = object.is_iterator_valid(iterator --[[ integer ]])"
        ],
        "description": "OBJECT::IS_ITERATOR_VALID (0x5A9CC0B0) function."
    },
    "object.is_pers_char_valid": {
        "prefix": [
            "object.is_pers_char_valid",
            "is_pers_char_valid"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_pers_char_valid(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_PERS_CHAR_VALID (0x36CC24A4) function."
    },
    "object.is_popset_valid": {
        "prefix": [
            "object.is_popset_valid",
            "is_popset_valid"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_popset_valid(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_POPSET_VALID (0x64BAF32C) function."
    },
    "object.is_zone_valid": {
        "prefix": [
            "object.is_zone_valid",
            "is_zone_valid"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_zone_valid(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_ZONE_VALID (0x262164F8) function."
    },
    "object.is_crime_valid": {
        "prefix": [
            "object.is_crime_valid",
            "is_crime_valid"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_crime_valid(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_CRIME_VALID (0x4CC5681D) function."
    },
    "object.get_object_type": {
        "prefix": [
            "object.get_object_type",
            "get_object_type"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_type(object --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_TYPE (0x261ECB20) function."
    },
    "object.get_num_objects_of_type": {
        "prefix": [
            "object.get_num_objects_of_type",
            "get_num_objects_of_type"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_num_objects_of_type(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_NUM_OBJECTS_OF_TYPE (0xADB08F12) function."
    },
    "object.get_max_num_objects_of_type": {
        "prefix": [
            "object.get_max_num_objects_of_type",
            "get_max_num_objects_of_type"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_max_num_objects_of_type(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_MAX_NUM_OBJECTS_OF_TYPE (0xA2866F3B) function."
    },
    "object.find_named_layout": {
        "prefix": [
            "object.find_named_layout",
            "find_named_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.find_named_layout(layoutname --[[ string ]])"
        ],
        "description": "OBJECT::FIND_NAMED_LAYOUT (0x5699DE7E) function."
    },
    "object.get_actor_name": {
        "prefix": [
            "object.get_actor_name",
            "get_actor_name"
        ],
        "body": [
            "local result --[[ string ]] = object.get_actor_name(actor --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ACTOR_NAME (0x78CF43C1) function."
    },
    "object.get_object_name": {
        "prefix": [
            "object.get_object_name",
            "get_object_name"
        ],
        "body": [
            "local result --[[ string ]] = object.get_object_name(object --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_NAME (0xDF40614F) function."
    },
    "object.get_layout_name": {
        "prefix": [
            "object.get_layout_name",
            "get_layout_name"
        ],
        "body": [
            "local result --[[ string ]] = object.get_layout_name(layout --[[ integer ]])"
        ],
        "description": "OBJECT::GET_LAYOUT_NAME (0xBADE22A2) function."
    },
    "object.get_object_model_name": {
        "prefix": [
            "object.get_object_model_name",
            "get_object_model_name"
        ],
        "body": [
            "local result --[[ string ]] = object.get_object_model_name(object --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_MODEL_NAME (0x5C4262F9) function."
    },
    "object.get_something_name": {
        "prefix": [
            "object.get_something_name",
            "get_something_name"
        ],
        "body": [
            "local result --[[ string ]] = object.get_something_name(something --[[ integer ]])"
        ],
        "description": "OBJECT::GET_SOMETHING_NAME (0xF662EAE1) function."
    },
    "object.get_cover_location_from_object": {
        "prefix": [
            "object.get_cover_location_from_object",
            "get_cover_location_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_cover_location_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_COVER_LOCATION_FROM_OBJECT (0x2CF0010F) function."
    },
    "object.get_gringo_from_object": {
        "prefix": [
            "object.get_gringo_from_object",
            "get_gringo_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_gringo_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_GRINGO_FROM_OBJECT (0x8A01B64B) function."
    },
    "object.get_prop_from_object": {
        "prefix": [
            "object.get_prop_from_object",
            "get_prop_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_prop_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_PROP_FROM_OBJECT (0xA7E9DA22) function."
    },
    "object.get_object_from_gringo": {
        "prefix": [
            "object.get_object_from_gringo",
            "get_object_from_gringo"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_from_gringo(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_FROM_GRINGO (0x111501F7) function."
    },
    "object.get_object_from_actor": {
        "prefix": [
            "object.get_object_from_actor",
            "get_object_from_actor"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_from_actor(actor --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_FROM_ACTOR (0x4A2063EC) function."
    },
    "object.get_object_from_volume": {
        "prefix": [
            "object.get_object_from_volume",
            "get_object_from_volume"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_from_volume(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_FROM_VOLUME (0xFADF0B96) function."
    },
    "object.get_object_from_pers_char": {
        "prefix": [
            "object.get_object_from_pers_char",
            "get_object_from_pers_char"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_from_pers_char(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_FROM_PERS_CHAR (0x35B5587D) function."
    },
    "object.get_object_from_squad": {
        "prefix": [
            "object.get_object_from_squad",
            "get_object_from_squad"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_from_squad(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_FROM_SQUAD (0xEDA897FA) function."
    },
    "object.get_object_from_crime": {
        "prefix": [
            "object.get_object_from_crime",
            "get_object_from_crime"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_from_crime(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_FROM_CRIME (0x831338D9) function."
    },
    "object.get_object_from_physinst": {
        "prefix": [
            "object.get_object_from_physinst",
            "get_object_from_physinst"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_from_physinst(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_FROM_PHYSINST (0x0550E178) function."
    },
    "object.get_actor_from_object": {
        "prefix": [
            "object.get_actor_from_object",
            "get_actor_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_actor_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ACTOR_FROM_OBJECT (0x34F0AD96) function."
    },
    "object.get_volume_from_object": {
        "prefix": [
            "object.get_volume_from_object",
            "get_volume_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_volume_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_VOLUME_FROM_OBJECT (0x502DAC62) function."
    },
    "object.get_pers_char_from_object": {
        "prefix": [
            "object.get_pers_char_from_object",
            "get_pers_char_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_pers_char_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_PERS_CHAR_FROM_OBJECT (0x024B2FFC) function."
    },
    "object.get_iterator_from_object": {
        "prefix": [
            "object.get_iterator_from_object",
            "get_iterator_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_iterator_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ITERATOR_FROM_OBJECT (0xF5EE5874) function."
    },
    "object.get_squad_from_object": {
        "prefix": [
            "object.get_squad_from_object",
            "get_squad_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_squad_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_SQUAD_FROM_OBJECT (0xD0C471FB) function."
    },
    "object.get_layout_from_object": {
        "prefix": [
            "object.get_layout_from_object",
            "get_layout_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_layout_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_LAYOUT_FROM_OBJECT (0x51D6DA2C) function."
    },
    "object.get_mobile_layout_from_object": {
        "prefix": [
            "object.get_mobile_layout_from_object",
            "get_mobile_layout_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_mobile_layout_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_MOBILE_LAYOUT_FROM_OBJECT (0x6B72661F) function."
    },
    "object.get_crime_from_object": {
        "prefix": [
            "object.get_crime_from_object",
            "get_crime_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_FROM_OBJECT (0xB578DB52) function."
    },
    "object.get_camera_from_object": {
        "prefix": [
            "object.get_camera_from_object",
            "get_camera_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_camera_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CAMERA_FROM_OBJECT (0xD4048969) function."
    },
    "object.get_nav_query_from_object": {
        "prefix": [
            "object.get_nav_query_from_object",
            "get_nav_query_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_nav_query_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_NAV_QUERY_FROM_OBJECT (0x50A7E334) function."
    },
    "object.create_layout": {
        "prefix": [
            "object.create_layout",
            "create_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_layout(layoutname --[[ string ]])"
        ],
        "description": "OBJECT::CREATE_LAYOUT (0x6CA53214) function."
    },
    "object.create_mobile_layout": {
        "prefix": [
            "object.create_mobile_layout",
            "create_mobile_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_mobile_layout(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_MOBILE_LAYOUT (0x426828CB) function."
    },
    "object.create_corpse_in_layout": {
        "prefix": [
            "object.create_corpse_in_layout",
            "create_corpse_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_corpse_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_CORPSE_IN_LAYOUT (0xE8C04F05) function."
    },
    "object.create_corpse_in_layout_random": {
        "prefix": [
            "object.create_corpse_in_layout_random",
            "create_corpse_in_layout_random"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_corpse_in_layout_random(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_CORPSE_IN_LAYOUT_RANDOM (0x40856E8A) function."
    },
    "object.create_cover_location_in_layout": {
        "prefix": [
            "object.create_cover_location_in_layout",
            "create_cover_location_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_cover_location_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_COVER_LOCATION_IN_LAYOUT (0x708C7D7B) function."
    },
    "object.create_point_in_layout": {
        "prefix": [
            "object.create_point_in_layout",
            "create_point_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_point_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_POINT_IN_LAYOUT (0x44A34042) function."
    },
    "object.create_point_light_in_layout": {
        "prefix": [
            "object.create_point_light_in_layout",
            "create_point_light_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_point_light_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_POINT_LIGHT_IN_LAYOUT (0xF9CC7F63) function."
    },
    "object.create_volume_in_layout": {
        "prefix": [
            "object.create_volume_in_layout",
            "create_volume_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_volume_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_VOLUME_IN_LAYOUT (0xA17311E4) function."
    },
    "object.create_volume_set_in_layout": {
        "prefix": [
            "object.create_volume_set_in_layout",
            "create_volume_set_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_volume_set_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_VOLUME_SET_IN_LAYOUT (0x177A3843) function."
    },
    "object.create_gringo_in_layout": {
        "prefix": [
            "object.create_gringo_in_layout",
            "create_gringo_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_gringo_in_layout(layout --[[ integer ]], layoutname --[[ string ]], gringopath --[[ string ]], positionxy --[[ vector2 ]], positionz --[[ number ]], rotationxy --[[ vector2 ]], rotationz --[[ number ]])"
        ],
        "description": "OBJECT::CREATE_GRINGO_IN_LAYOUT (0x025C9845) function."
    },
    "object.in_targetting_posse": {
        "prefix": [
            "object.in_targetting_posse",
            "in_targetting_posse"
        ],
        "body": [
            "local result --[[ integer ]] = object.in_targetting_posse(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "OBJECT::IN_TARGETTING_POSSE (0x88087384) function."
    },
    "object.create_gringo_in_layout_by_id": {
        "prefix": [
            "object.create_gringo_in_layout_by_id",
            "create_gringo_in_layout_by_id"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_gringo_in_layout_by_id(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_GRINGO_IN_LAYOUT_BY_ID (0x66A8AF91) function."
    },
    "object.create_gringo_on_object_by_id": {
        "prefix": [
            "object.create_gringo_on_object_by_id",
            "create_gringo_on_object_by_id"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_gringo_on_object_by_id(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_GRINGO_ON_OBJECT_BY_ID (0x80FB8BDE) function."
    },
    "object.create_propset_in_layout": {
        "prefix": [
            "object.create_propset_in_layout",
            "create_propset_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_propset_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_PROPSET_IN_LAYOUT (0x779267C3) function."
    },
    "object.create_prop_in_layout": {
        "prefix": [
            "object.create_prop_in_layout",
            "create_prop_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_prop_in_layout(layout --[[ integer ]], propname --[[ string ]], fragmentpath --[[ string ]], positionxy --[[ vector2 ]], positionz --[[ number ]], rotationxy --[[ vector2 ]], rotationz --[[ number ]], frozen --[[ boolean ]])"
        ],
        "description": "OBJECT::CREATE_PROP_IN_LAYOUT (0xE351587D) function."
    },
    "object.create_prop_in_layout_by_id": {
        "prefix": [
            "object.create_prop_in_layout_by_id",
            "create_prop_in_layout_by_id"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_prop_in_layout_by_id(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_PROP_IN_LAYOUT_BY_ID (0xD92BA5B6) function."
    },
    "object.create_path_in_layout": {
        "prefix": [
            "object.create_path_in_layout",
            "create_path_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_path_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_PATH_IN_LAYOUT (0x80B8A1BE) function."
    },
    "object.create_path_in_layout_from_table": {
        "prefix": [
            "object.create_path_in_layout_from_table",
            "create_path_in_layout_from_table"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_path_in_layout_from_table(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_PATH_IN_LAYOUT_FROM_TABLE (0xB6709FF4) function."
    },
    "object.create_obstacle_in_layout": {
        "prefix": [
            "object.create_obstacle_in_layout",
            "create_obstacle_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_obstacle_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_OBSTACLE_IN_LAYOUT (0x2703760F) function."
    },
    "object.create_obstacle_on_object": {
        "prefix": [
            "object.create_obstacle_on_object",
            "create_obstacle_on_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_obstacle_on_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_OBSTACLE_ON_OBJECT (0x7E81694C) function."
    },
    "object.create_squad_in_layout": {
        "prefix": [
            "object.create_squad_in_layout",
            "create_squad_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_squad_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_SQUAD_IN_LAYOUT (0xF7277A0F) function."
    },
    "object.create_formation_in_layout": {
        "prefix": [
            "object.create_formation_in_layout",
            "create_formation_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_formation_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_FORMATION_IN_LAYOUT (0x91C6AC0E) function."
    },
    "object.create_crime_in_layout": {
        "prefix": [
            "object.create_crime_in_layout",
            "create_crime_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_crime_in_layout(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_CRIME_IN_LAYOUT (0xD60032F6) function."
    },
    "object.create_ai_speech_package_in_layout": {
        "prefix": [
            "object.create_ai_speech_package_in_layout",
            "create_ai_speech_package_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_ai_speech_package_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_AI_SPEECH_PACKAGE_IN_LAYOUT (0xE77F61B2) function."
    },
    "object.mark_layout_consider_whole": {
        "prefix": [
            "object.mark_layout_consider_whole",
            "mark_layout_consider_whole"
        ],
        "body": [
            "local result --[[ integer ]] = object.mark_layout_consider_whole(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::MARK_LAYOUT_CONSIDER_WHOLE (0xA936E73B) function."
    },
    "object.release_layout_ref": {
        "prefix": [
            "object.release_layout_ref",
            "release_layout_ref"
        ],
        "body": [
            "object.release_layout_ref(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::RELEASE_LAYOUT_REF (0xD9AC8830) function."
    },
    "object.release_layout_objects": {
        "prefix": [
            "object.release_layout_objects",
            "release_layout_objects"
        ],
        "body": [
            "object.release_layout_objects(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::RELEASE_LAYOUT_OBJECTS (0xE78E66F0) function."
    },
    "object.destroy_layout_objects": {
        "prefix": [
            "object.destroy_layout_objects",
            "destroy_layout_objects"
        ],
        "body": [
            "object.destroy_layout_objects(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_LAYOUT_OBJECTS (0x28A2A4CC) function."
    },
    "object.init_mobile_layout_objects": {
        "prefix": [
            "object.init_mobile_layout_objects",
            "init_mobile_layout_objects"
        ],
        "body": [
            "local result --[[ integer ]] = object.init_mobile_layout_objects(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_MOBILE_LAYOUT_OBJECTS (0x000079CB) function."
    },
    "object.store_mobile_layout_transforms": {
        "prefix": [
            "object.store_mobile_layout_transforms",
            "store_mobile_layout_transforms"
        ],
        "body": [
            "local result --[[ integer ]] = object.store_mobile_layout_transforms(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::STORE_MOBILE_LAYOUT_TRANSFORMS (0x3CD2C250) function."
    },
    "object.transform_object_relative": {
        "prefix": [
            "object.transform_object_relative",
            "transform_object_relative"
        ],
        "body": [
            "local result --[[ integer ]] = object.transform_object_relative(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::TRANSFORM_OBJECT_RELATIVE (0xC15C3361) function."
    },
    "object.mark_object_for_aggressive_cleanup": {
        "prefix": [
            "object.mark_object_for_aggressive_cleanup",
            "mark_object_for_aggressive_cleanup"
        ],
        "body": [
            "object.mark_object_for_aggressive_cleanup(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::MARK_OBJECT_FOR_AGGRESSIVE_CLEANUP (0x8212247D) function."
    },
    "object.release_object_ref": {
        "prefix": [
            "object.release_object_ref",
            "release_object_ref"
        ],
        "body": [
            "object.release_object_ref(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::RELEASE_OBJECT_REF (0x67DB5ABF) function."
    },
    "object.release_actor": {
        "prefix": [
            "object.release_actor",
            "release_actor"
        ],
        "body": [
            "object.release_actor(actor --[[ integer ]])"
        ],
        "description": "OBJECT::RELEASE_ACTOR (0x32489AFB) function."
    },
    "object.release_volume": {
        "prefix": [
            "object.release_volume",
            "release_volume"
        ],
        "body": [
            "object.release_volume(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::RELEASE_VOLUME (0x81F984F8) function."
    },
    "object.release_pers_char": {
        "prefix": [
            "object.release_pers_char",
            "release_pers_char"
        ],
        "body": [
            "object.release_pers_char(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::RELEASE_PERS_CHAR (0x19C3CF93) function."
    },
    "object.destroy_volume": {
        "prefix": [
            "object.destroy_volume",
            "destroy_volume"
        ],
        "body": [
            "object.destroy_volume(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_VOLUME (0x8CAB944F) function."
    },
    "object.destroy_actor": {
        "prefix": [
            "object.destroy_actor",
            "destroy_actor"
        ],
        "body": [
            "object.destroy_actor(actor --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_ACTOR (0x8BD21869) function."
    },
    "object.destroy_layout": {
        "prefix": [
            "object.destroy_layout",
            "destroy_layout"
        ],
        "body": [
            "object.destroy_layout(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_LAYOUT (0xC1756F39) function."
    },
    "object.destroy_object": {
        "prefix": [
            "object.destroy_object",
            "destroy_object"
        ],
        "body": [
            "object.destroy_object(object --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_OBJECT (0x21144994) function."
    },
    "object.destroy_iterator": {
        "prefix": [
            "object.destroy_iterator",
            "destroy_iterator"
        ],
        "body": [
            "object.destroy_iterator(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_ITERATOR (0xE284A10C) function."
    },
    "object.destroy_pers_char": {
        "prefix": [
            "object.destroy_pers_char",
            "destroy_pers_char"
        ],
        "body": [
            "object.destroy_pers_char(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_PERS_CHAR (0x4028CE77) function."
    },
    "object.destroy_point_light": {
        "prefix": [
            "object.destroy_point_light",
            "destroy_point_light"
        ],
        "body": [
            "object.destroy_point_light(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_POINT_LIGHT (0x6BC96263) function."
    },
    "object.destroy_population_set": {
        "prefix": [
            "object.destroy_population_set",
            "destroy_population_set"
        ],
        "body": [
            "object.destroy_population_set(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_POPULATION_SET (0xD064878D) function."
    },
    "object.destroy_zone": {
        "prefix": [
            "object.destroy_zone",
            "destroy_zone"
        ],
        "body": [
            "object.destroy_zone(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_ZONE (0xD62F3D27) function."
    },
    "object.destroy_crime": {
        "prefix": [
            "object.destroy_crime",
            "destroy_crime"
        ],
        "body": [
            "object.destroy_crime(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_CRIME (0xE9AB08C0) function."
    },
    "object.give_object_to_actor": {
        "prefix": [
            "object.give_object_to_actor",
            "give_object_to_actor"
        ],
        "body": [
            "local result --[[ integer ]] = object.give_object_to_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::GIVE_OBJECT_TO_ACTOR (0xCBB2267A) function."
    },
    "object.give_object_to_layout": {
        "prefix": [
            "object.give_object_to_layout",
            "give_object_to_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.give_object_to_layout(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::GIVE_OBJECT_TO_LAYOUT (0x2D160228) function."
    },
    "object.get_object_owner": {
        "prefix": [
            "object.get_object_owner",
            "get_object_owner"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_owner(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_OWNER (0x48B36E07) function."
    },
    "object.destroy_gc_objects": {
        "prefix": [
            "object.destroy_gc_objects",
            "destroy_gc_objects"
        ],
        "body": [
            "object.destroy_gc_objects(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_GC_OBJECTS (0x86B0B004) function."
    },
    "object._was_last_object_already_in_game": {
        "prefix": [
            "object._was_last_object_already_in_game",
            "_was_last_object_already_in_game"
        ],
        "body": [
            "local result --[[ integer ]] = object._was_last_object_already_in_game()"
        ],
        "description": "OBJECT::_WAS_LAST_OBJECT_ALREADY_IN_GAME (0x65C3D8F6) function."
    },
    "object.get_ambient_layout": {
        "prefix": [
            "object.get_ambient_layout",
            "get_ambient_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_ambient_layout()"
        ],
        "description": "OBJECT::GET_AMBIENT_LAYOUT (0xB52A3D48) function."
    },
    "object.get_art_gringo_layout": {
        "prefix": [
            "object.get_art_gringo_layout",
            "get_art_gringo_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_art_gringo_layout()"
        ],
        "description": "OBJECT::GET_ART_GRINGO_LAYOUT (0x76FBF412) function."
    },
    "object.get_gc_layout": {
        "prefix": [
            "object.get_gc_layout",
            "get_gc_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_gc_layout()"
        ],
        "description": "OBJECT::GET_GC_LAYOUT (0xADE13224) function."
    },
    "object.create_objectset_in_layout": {
        "prefix": [
            "object.create_objectset_in_layout",
            "create_objectset_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_objectset_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_OBJECTSET_IN_LAYOUT (0x921B5F2B) function."
    },
    "object.is_objectset_valid": {
        "prefix": [
            "object.is_objectset_valid",
            "is_objectset_valid"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_objectset_valid(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_OBJECTSET_VALID (0x552189FD) function."
    },
    "object.add_object_to_objectset": {
        "prefix": [
            "object.add_object_to_objectset",
            "add_object_to_objectset"
        ],
        "body": [
            "local result --[[ integer ]] = object.add_object_to_objectset(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ADD_OBJECT_TO_OBJECTSET (0x43FBBDE1) function."
    },
    "object.get_objectset_size": {
        "prefix": [
            "object.get_objectset_size",
            "get_objectset_size"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_objectset_size(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECTSET_SIZE (0xE09DE8A0) function."
    },
    "object.get_object_from_objectset": {
        "prefix": [
            "object.get_object_from_objectset",
            "get_object_from_objectset"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_from_objectset(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_FROM_OBJECTSET (0xBF680846) function."
    },
    "object.get_objectset_from_object": {
        "prefix": [
            "object.get_objectset_from_object",
            "get_objectset_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_objectset_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECTSET_FROM_OBJECT (0x2CB3B980) function."
    },
    "object.get_indexed_object_in_objectset": {
        "prefix": [
            "object.get_indexed_object_in_objectset",
            "get_indexed_object_in_objectset"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_indexed_object_in_objectset(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_INDEXED_OBJECT_IN_OBJECTSET (0x50D39153) function."
    },
    "object.is_object_in_objectset": {
        "prefix": [
            "object.is_object_in_objectset",
            "is_object_in_objectset"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_object_in_objectset(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_OBJECT_IN_OBJECTSET (0x0114FCBD) function."
    },
    "object.remove_object_from_objectset": {
        "prefix": [
            "object.remove_object_from_objectset",
            "remove_object_from_objectset"
        ],
        "body": [
            "object.remove_object_from_objectset(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_OBJECT_FROM_OBJECTSET (0xA3E05BAE) function."
    },
    "object.clean_objectset": {
        "prefix": [
            "object.clean_objectset",
            "clean_objectset"
        ],
        "body": [
            "object.clean_objectset(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::CLEAN_OBJECTSET (0x11EE07B5) function."
    },
    "object.disband_objectset": {
        "prefix": [
            "object.disband_objectset",
            "disband_objectset"
        ],
        "body": [
            "object.disband_objectset(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DISBAND_OBJECTSET (0x179A07DD) function."
    },
    "object.destroy_objectset": {
        "prefix": [
            "object.destroy_objectset",
            "destroy_objectset"
        ],
        "body": [
            "object.destroy_objectset(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_OBJECTSET (0x3A71A589) function."
    },
    "object.is_point_light_valid": {
        "prefix": [
            "object.is_point_light_valid",
            "is_point_light_valid"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_point_light_valid(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_POINT_LIGHT_VALID (0x44C07DA5) function."
    },
    "object.set_enable_point_light": {
        "prefix": [
            "object.set_enable_point_light",
            "set_enable_point_light"
        ],
        "body": [
            "object.set_enable_point_light(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_ENABLE_POINT_LIGHT (0x5F66B23E) function."
    },
    "object.is_object_in_volume": {
        "prefix": [
            "object.is_object_in_volume",
            "is_object_in_volume"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_object_in_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_OBJECT_IN_VOLUME (0x2ECF04F3) function."
    },
    "object.locate_named_point": {
        "prefix": [
            "object.locate_named_point",
            "locate_named_point"
        ],
        "body": [
            "local result --[[ integer ]] = object.locate_named_point(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "OBJECT::LOCATE_NAMED_POINT (0xCB3F7DA5) function."
    },
    "object.locate_named_actor": {
        "prefix": [
            "object.locate_named_actor",
            "locate_named_actor"
        ],
        "body": [
            "local result --[[ integer ]] = object.locate_named_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "OBJECT::LOCATE_NAMED_ACTOR (0xA36ED4A6) function."
    },
    "object.locate_named_volume": {
        "prefix": [
            "object.locate_named_volume",
            "locate_named_volume"
        ],
        "body": [
            "local result --[[ integer ]] = object.locate_named_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "OBJECT::LOCATE_NAMED_VOLUME (0x6F513950) function."
    },
    "object.locate_actors_in_volume": {
        "prefix": [
            "object.locate_actors_in_volume",
            "locate_actors_in_volume"
        ],
        "body": [
            "local result --[[ integer ]] = object.locate_actors_in_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::LOCATE_ACTORS_IN_VOLUME (0x35C8FD4A) function."
    },
    "object.locate_gringos_in_volume": {
        "prefix": [
            "object.locate_gringos_in_volume",
            "locate_gringos_in_volume"
        ],
        "body": [
            "local result --[[ integer ]] = object.locate_gringos_in_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::LOCATE_GRINGOS_IN_VOLUME (0x0F701FF7) function."
    },
    "object.set_volume_params": {
        "prefix": [
            "object.set_volume_params",
            "set_volume_params"
        ],
        "body": [
            "object.set_volume_params(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_VOLUME_PARAMS (0xFEC1CBC6) function."
    },
    "object.add_to_volume_set": {
        "prefix": [
            "object.add_to_volume_set",
            "add_to_volume_set"
        ],
        "body": [
            "object.add_to_volume_set(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ADD_TO_VOLUME_SET (0xB104FF3E) function."
    },
    "object.copy_volume": {
        "prefix": [
            "object.copy_volume",
            "copy_volume"
        ],
        "body": [
            "local result --[[ integer ]] = object.copy_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::COPY_VOLUME (0x122C916E) function."
    },
    "object.scale_volume": {
        "prefix": [
            "object.scale_volume",
            "scale_volume"
        ],
        "body": [
            "object.scale_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SCALE_VOLUME (0x14DCF1EF) function."
    },
    "object.set_actor_stay_outside_of_volume": {
        "prefix": [
            "object.set_actor_stay_outside_of_volume",
            "set_actor_stay_outside_of_volume"
        ],
        "body": [
            "object.set_actor_stay_outside_of_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_ACTOR_STAY_OUTSIDE_OF_VOLUME (0x1229C536) function."
    },
    "object.add_actor_stay_outside_of_volume": {
        "prefix": [
            "object.add_actor_stay_outside_of_volume",
            "add_actor_stay_outside_of_volume"
        ],
        "body": [
            "object.add_actor_stay_outside_of_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ADD_ACTOR_STAY_OUTSIDE_OF_VOLUME (0x617C9630) function."
    },
    "object.set_actor_stay_within_volume": {
        "prefix": [
            "object.set_actor_stay_within_volume",
            "set_actor_stay_within_volume"
        ],
        "body": [
            "object.set_actor_stay_within_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_ACTOR_STAY_WITHIN_VOLUME (0x6A4A1699) function."
    },
    "object.add_actor_stay_within_volume": {
        "prefix": [
            "object.add_actor_stay_within_volume",
            "add_actor_stay_within_volume"
        ],
        "body": [
            "object.add_actor_stay_within_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ADD_ACTOR_STAY_WITHIN_VOLUME (0xCDEF4316) function."
    },
    "object.clear_actor_stay_within_volume": {
        "prefix": [
            "object.clear_actor_stay_within_volume",
            "clear_actor_stay_within_volume"
        ],
        "body": [
            "object.clear_actor_stay_within_volume(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::CLEAR_ACTOR_STAY_WITHIN_VOLUME (0xED6D63FE) function."
    },
    "object.set_actor_volume_parameters": {
        "prefix": [
            "object.set_actor_volume_parameters",
            "set_actor_volume_parameters"
        ],
        "body": [
            "object.set_actor_volume_parameters(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_ACTOR_VOLUME_PARAMETERS (0x8B46B294) function."
    },
    "object.remove_actor_stay_within_volume": {
        "prefix": [
            "object.remove_actor_stay_within_volume",
            "remove_actor_stay_within_volume"
        ],
        "body": [
            "object.remove_actor_stay_within_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_ACTOR_STAY_WITHIN_VOLUME (0x2974CAF6) function."
    },
    "object.remove_actor_stay_outside_of_volume": {
        "prefix": [
            "object.remove_actor_stay_outside_of_volume",
            "remove_actor_stay_outside_of_volume"
        ],
        "body": [
            "object.remove_actor_stay_outside_of_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_ACTOR_STAY_OUTSIDE_OF_VOLUME (0x42EF7DB7) function."
    },
    "object.add_corpse_retainment_volume_obj": {
        "prefix": [
            "object.add_corpse_retainment_volume_obj",
            "add_corpse_retainment_volume_obj"
        ],
        "body": [
            "object.add_corpse_retainment_volume_obj(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::ADD_CORPSE_RETAINMENT_VOLUME_OBJ (0x0E41A6AC) function."
    },
    "object.remove_corpse_retainment_volume_obj": {
        "prefix": [
            "object.remove_corpse_retainment_volume_obj",
            "remove_corpse_retainment_volume_obj"
        ],
        "body": [
            "object.remove_corpse_retainment_volume_obj(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_CORPSE_RETAINMENT_VOLUME_OBJ (0x983ED842) function."
    },
    "object.add_corpse_removal_volume_obj": {
        "prefix": [
            "object.add_corpse_removal_volume_obj",
            "add_corpse_removal_volume_obj"
        ],
        "body": [
            "object.add_corpse_removal_volume_obj(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::ADD_CORPSE_REMOVAL_VOLUME_OBJ (0x43E2808B) function."
    },
    "object.remove_corpse_removal_volume_obj": {
        "prefix": [
            "object.remove_corpse_removal_volume_obj",
            "remove_corpse_removal_volume_obj"
        ],
        "body": [
            "object.remove_corpse_removal_volume_obj(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_CORPSE_REMOVAL_VOLUME_OBJ (0xE9E8C31A) function."
    },
    "object.add_corpse_prevent_interference_volume_obj": {
        "prefix": [
            "object.add_corpse_prevent_interference_volume_obj",
            "add_corpse_prevent_interference_volume_obj"
        ],
        "body": [
            "object.add_corpse_prevent_interference_volume_obj(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::ADD_CORPSE_PREVENT_INTERFERENCE_VOLUME_OBJ (0x0ACF7E75) function."
    },
    "object.remove_corpse_prevent_interference_volume_obj": {
        "prefix": [
            "object.remove_corpse_prevent_interference_volume_obj",
            "remove_corpse_prevent_interference_volume_obj"
        ],
        "body": [
            "object.remove_corpse_prevent_interference_volume_obj(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_CORPSE_PREVENT_INTERFERENCE_VOLUME_OBJ (0x80FF115A) function."
    },
    "object.toggle_cover_props": {
        "prefix": [
            "object.toggle_cover_props",
            "toggle_cover_props"
        ],
        "body": [
            "object.toggle_cover_props(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::TOGGLE_COVER_PROPS (0x288E4BFB) function."
    },
    "object.create_zone_volume": {
        "prefix": [
            "object.create_zone_volume",
            "create_zone_volume"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_zone_volume(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_ZONE_VOLUME (0xBB05B731) function."
    },
    "object.create_volume_spawning_zone_volume": {
        "prefix": [
            "object.create_volume_spawning_zone_volume",
            "create_volume_spawning_zone_volume"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_volume_spawning_zone_volume(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_VOLUME_SPAWNING_ZONE_VOLUME (0x9189EB8B) function."
    },
    "object.create_population_set": {
        "prefix": [
            "object.create_population_set",
            "create_population_set"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_population_set(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_POPULATION_SET (0xAF1D570B) function."
    },
    "object.create_population_set_in_layout": {
        "prefix": [
            "object.create_population_set_in_layout",
            "create_population_set_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_population_set_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_POPULATION_SET_IN_LAYOUT (0x0B40BBE3) function."
    },
    "object.create_named_population_set": {
        "prefix": [
            "object.create_named_population_set",
            "create_named_population_set"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_named_population_set(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_NAMED_POPULATION_SET (0xB0882841) function."
    },
    "object.create_gateway_in_layout": {
        "prefix": [
            "object.create_gateway_in_layout",
            "create_gateway_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_gateway_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_GATEWAY_IN_LAYOUT (0x4251BF6C) function."
    },
    "object.create_gateway_from_params_in_layout": {
        "prefix": [
            "object.create_gateway_from_params_in_layout",
            "create_gateway_from_params_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_gateway_from_params_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]], unk12 --[[ integer ]], unk13 --[[ integer ]], unk14 --[[ integer ]], unk15 --[[ integer ]], unk16 --[[ integer ]], unk17 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_GATEWAY_FROM_PARAMS_IN_LAYOUT (0x64BEDDEA) function."
    },
    "object.create_gateway_type": {
        "prefix": [
            "object.create_gateway_type",
            "create_gateway_type"
        ],
        "body": [
            "object.create_gateway_type(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_GATEWAY_TYPE (0x92CC441F) function."
    },
    "object.snap_actor_to_gringo": {
        "prefix": [
            "object.snap_actor_to_gringo",
            "snap_actor_to_gringo"
        ],
        "body": [
            "local result --[[ integer ]] = object.snap_actor_to_gringo(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "OBJECT::SNAP_ACTOR_TO_GRINGO (0xD0A845E9) function."
    },
    "object._rmptfx_effect_start": {
        "prefix": [
            "object._rmptfx_effect_start",
            "_rmptfx_effect_start"
        ],
        "body": [
            "local result --[[ integer ]] = object._rmptfx_effect_start(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::_RMPTFX_EFFECT_START (0x6745191B) function."
    },
    "object._rmptfx_effect_start_and_fade_in": {
        "prefix": [
            "object._rmptfx_effect_start_and_fade_in",
            "_rmptfx_effect_start_and_fade_in"
        ],
        "body": [
            "local result --[[ integer ]] = object._rmptfx_effect_start_and_fade_in(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::_RMPTFX_EFFECT_START_AND_FADE_IN (0x276EFF8E) function."
    },
    "object._rmptfx_effect_stop": {
        "prefix": [
            "object._rmptfx_effect_stop",
            "_rmptfx_effect_stop"
        ],
        "body": [
            "local result --[[ integer ]] = object._rmptfx_effect_stop(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::_RMPTFX_EFFECT_STOP (0xE18028C1) function."
    },
    "object._rmptfx_effect_stop_and_reset": {
        "prefix": [
            "object._rmptfx_effect_stop_and_reset",
            "_rmptfx_effect_stop_and_reset"
        ],
        "body": [
            "local result --[[ integer ]] = object._rmptfx_effect_stop_and_reset(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::_RMPTFX_EFFECT_STOP_AND_RESET (0x7246F438) function."
    },
    "object._rmptfx_effect_stop_and_fade_out": {
        "prefix": [
            "object._rmptfx_effect_stop_and_fade_out",
            "_rmptfx_effect_stop_and_fade_out"
        ],
        "body": [
            "local result --[[ integer ]] = object._rmptfx_effect_stop_and_fade_out(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::_RMPTFX_EFFECT_STOP_AND_FADE_OUT (0x1A59E608) function."
    },
    "object.reset_rmptfx_all": {
        "prefix": [
            "object.reset_rmptfx_all",
            "reset_rmptfx_all"
        ],
        "body": [
            "local result --[[ integer ]] = object.reset_rmptfx_all()"
        ],
        "description": "OBJECT::RESET_RMPTFX_ALL (0x0AFC0B99) function."
    },
    "object.reset_rmptfx_in_volume": {
        "prefix": [
            "object.reset_rmptfx_in_volume",
            "reset_rmptfx_in_volume"
        ],
        "body": [
            "object.reset_rmptfx_in_volume(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::RESET_RMPTFX_IN_VOLUME (0x547166A7) function."
    },
    "object.create_rmptfx_emitter_in_layout": {
        "prefix": [
            "object.create_rmptfx_emitter_in_layout",
            "create_rmptfx_emitter_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_rmptfx_emitter_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_RMPTFX_EMITTER_IN_LAYOUT (0xF1F8AFCA) function."
    },
    "object.create_rmptfx_emitter_on_object": {
        "prefix": [
            "object.create_rmptfx_emitter_on_object",
            "create_rmptfx_emitter_on_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_rmptfx_emitter_on_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_RMPTFX_EMITTER_ON_OBJECT (0xFF8CBD07) function."
    },
    "object.create_rmptfx_emitter_on_bone": {
        "prefix": [
            "object.create_rmptfx_emitter_on_bone",
            "create_rmptfx_emitter_on_bone"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_rmptfx_emitter_on_bone(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_RMPTFX_EMITTER_ON_BONE (0x2A902148) function."
    },
    "object.create_rmptfx_emitter_on_curve": {
        "prefix": [
            "object.create_rmptfx_emitter_on_curve",
            "create_rmptfx_emitter_on_curve"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_rmptfx_emitter_on_curve(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_RMPTFX_EMITTER_ON_CURVE (0x39286DE5) function."
    },
    "object.is_rmptfx_finished": {
        "prefix": [
            "object.is_rmptfx_finished",
            "is_rmptfx_finished"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_rmptfx_finished(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_RMPTFX_FINISHED (0xD3A523FD) function."
    },
    "object.set_rmptfx_scale": {
        "prefix": [
            "object.set_rmptfx_scale",
            "set_rmptfx_scale"
        ],
        "body": [
            "local result --[[ integer ]] = object.set_rmptfx_scale(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_RMPTFX_SCALE (0x1A4C98C1) function."
    },
    "object.hide_rmptfx_effect": {
        "prefix": [
            "object.hide_rmptfx_effect",
            "hide_rmptfx_effect"
        ],
        "body": [
            "local result --[[ integer ]] = object.hide_rmptfx_effect(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::HIDE_RMPTFX_EFFECT (0x21BCC0A9) function."
    },
    "object.show_rmptfx_effect": {
        "prefix": [
            "object.show_rmptfx_effect",
            "show_rmptfx_effect"
        ],
        "body": [
            "local result --[[ integer ]] = object.show_rmptfx_effect(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::SHOW_RMPTFX_EFFECT (0x5B417C9C) function."
    },
    "object.start_recording_shoot_events_for_actor": {
        "prefix": [
            "object.start_recording_shoot_events_for_actor",
            "start_recording_shoot_events_for_actor"
        ],
        "body": [
            "object.start_recording_shoot_events_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::START_RECORDING_SHOOT_EVENTS_FOR_ACTOR (0x1E56BAFD) function."
    },
    "object.stop_recording_shoot_events_for_actor": {
        "prefix": [
            "object.stop_recording_shoot_events_for_actor",
            "stop_recording_shoot_events_for_actor"
        ],
        "body": [
            "object.stop_recording_shoot_events_for_actor(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::STOP_RECORDING_SHOOT_EVENTS_FOR_ACTOR (0xCFE22435) function."
    },
    "object.add_formation_location": {
        "prefix": [
            "object.add_formation_location",
            "add_formation_location"
        ],
        "body": [
            "local result --[[ integer ]] = object.add_formation_location(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ADD_FORMATION_LOCATION (0xFBB1BCDF) function."
    },
    "object.get_formation_location": {
        "prefix": [
            "object.get_formation_location",
            "get_formation_location"
        ],
        "body": [
            "object.get_formation_location(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_FORMATION_LOCATION (0x17FC65A4) function."
    },
    "object.get_num_formation_locations": {
        "prefix": [
            "object.get_num_formation_locations",
            "get_num_formation_locations"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_num_formation_locations(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_NUM_FORMATION_LOCATIONS (0xBE5D84BF) function."
    },
    "object.get_crime_position": {
        "prefix": [
            "object.get_crime_position",
            "get_crime_position"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_POSITION (0x391475E3) function."
    },
    "object.get_crime_type": {
        "prefix": [
            "object.get_crime_type",
            "get_crime_type"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_type(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_TYPE (0xDB2BDEA8) function."
    },
    "object.get_crime_begin_timestamp": {
        "prefix": [
            "object.get_crime_begin_timestamp",
            "get_crime_begin_timestamp"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_begin_timestamp(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_BEGIN_TIMESTAMP (0xA2DA4D24) function."
    },
    "object.get_crime_end_timestamp": {
        "prefix": [
            "object.get_crime_end_timestamp",
            "get_crime_end_timestamp"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_end_timestamp(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_END_TIMESTAMP (0xD96DBABD) function."
    },
    "object.get_crime_witnessed": {
        "prefix": [
            "object.get_crime_witnessed",
            "get_crime_witnessed"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_witnessed(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_WITNESSED (0xE07C2D99) function."
    },
    "object.get_crime_criminal": {
        "prefix": [
            "object.get_crime_criminal",
            "get_crime_criminal"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_criminal(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_CRIMINAL (0xEC2C34A4) function."
    },
    "object.get_crime_victim": {
        "prefix": [
            "object.get_crime_victim",
            "get_crime_victim"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_victim(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_VICTIM (0xD2FD7CB6) function."
    },
    "object.get_crime_world_region": {
        "prefix": [
            "object.get_crime_world_region",
            "get_crime_world_region"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_world_region(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_WORLD_REGION (0x67F224B4) function."
    },
    "object.get_crime_faction": {
        "prefix": [
            "object.get_crime_faction",
            "get_crime_faction"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_faction(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_FACTION (0xE2FE0673) function."
    },
    "object.get_crime_counter": {
        "prefix": [
            "object.get_crime_counter",
            "get_crime_counter"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_counter(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_COUNTER (0xB52BA7E6) function."
    },
    "object.is_crime_tallied": {
        "prefix": [
            "object.is_crime_tallied",
            "is_crime_tallied"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_crime_tallied(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_CRIME_TALLIED (0x72A048B7) function."
    },
    "object.is_crime_in_progress": {
        "prefix": [
            "object.is_crime_in_progress",
            "is_crime_in_progress"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_crime_in_progress(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_CRIME_IN_PROGRESS (0x85C58BE1) function."
    },
    "object.get_crime_objectset": {
        "prefix": [
            "object.get_crime_objectset",
            "get_crime_objectset"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_crime_objectset(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CRIME_OBJECTSET (0x72C52B55) function."
    },
    "object.set_crime_objectset": {
        "prefix": [
            "object.set_crime_objectset",
            "set_crime_objectset"
        ],
        "body": [
            "object.set_crime_objectset(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_OBJECTSET (0xD60B8F77) function."
    },
    "object.set_crime_position": {
        "prefix": [
            "object.set_crime_position",
            "set_crime_position"
        ],
        "body": [
            "local result --[[ integer ]] = object.set_crime_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_POSITION (0xB3F4043B) function."
    },
    "object.set_crime_type": {
        "prefix": [
            "object.set_crime_type",
            "set_crime_type"
        ],
        "body": [
            "object.set_crime_type(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_TYPE (0x85425011) function."
    },
    "object.set_crime_begin_timestamp": {
        "prefix": [
            "object.set_crime_begin_timestamp",
            "set_crime_begin_timestamp"
        ],
        "body": [
            "object.set_crime_begin_timestamp(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_BEGIN_TIMESTAMP (0x2AE7D51F) function."
    },
    "object.set_crime_end_timestamp": {
        "prefix": [
            "object.set_crime_end_timestamp",
            "set_crime_end_timestamp"
        ],
        "body": [
            "object.set_crime_end_timestamp(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_END_TIMESTAMP (0x898B00F4) function."
    },
    "object.set_crime_witnessed": {
        "prefix": [
            "object.set_crime_witnessed",
            "set_crime_witnessed"
        ],
        "body": [
            "object.set_crime_witnessed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_WITNESSED (0x6761D53A) function."
    },
    "object.set_crime_criminal": {
        "prefix": [
            "object.set_crime_criminal",
            "set_crime_criminal"
        ],
        "body": [
            "object.set_crime_criminal(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_CRIMINAL (0xBA02916B) function."
    },
    "object.set_crime_victim": {
        "prefix": [
            "object.set_crime_victim",
            "set_crime_victim"
        ],
        "body": [
            "object.set_crime_victim(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_VICTIM (0x7B917033) function."
    },
    "object.set_crime_world_region": {
        "prefix": [
            "object.set_crime_world_region",
            "set_crime_world_region"
        ],
        "body": [
            "object.set_crime_world_region(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_WORLD_REGION (0x8521A685) function."
    },
    "object.set_crime_faction": {
        "prefix": [
            "object.set_crime_faction",
            "set_crime_faction"
        ],
        "body": [
            "object.set_crime_faction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_FACTION (0x1E552B26) function."
    },
    "object.set_crime_counter": {
        "prefix": [
            "object.set_crime_counter",
            "set_crime_counter"
        ],
        "body": [
            "object.set_crime_counter(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_COUNTER (0xCC14DC8D) function."
    },
    "object.set_crime_tallied": {
        "prefix": [
            "object.set_crime_tallied",
            "set_crime_tallied"
        ],
        "body": [
            "object.set_crime_tallied(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_TALLIED (0x54E7F26B) function."
    },
    "object.set_crime_in_progress": {
        "prefix": [
            "object.set_crime_in_progress",
            "set_crime_in_progress"
        ],
        "body": [
            "object.set_crime_in_progress(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_CRIME_IN_PROGRESS (0x2D6CD106) function."
    },
    "object.create_object_iterator": {
        "prefix": [
            "object.create_object_iterator",
            "create_object_iterator"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_object_iterator(layout --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_OBJECT_ITERATOR (0xD8A12B74) function."
    },
    "object.create_named_object_iterator": {
        "prefix": [
            "object.create_named_object_iterator",
            "create_named_object_iterator"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_named_object_iterator(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_NAMED_OBJECT_ITERATOR (0x2F358B89) function."
    },
    "object.start_object_iterator": {
        "prefix": [
            "object.start_object_iterator",
            "start_object_iterator"
        ],
        "body": [
            "local result --[[ integer ]] = object.start_object_iterator(iterator --[[ integer ]])"
        ],
        "description": "OBJECT::START_OBJECT_ITERATOR (0xE96A0318) function."
    },
    "object.object_iterator_next": {
        "prefix": [
            "object.object_iterator_next",
            "object_iterator_next"
        ],
        "body": [
            "local result --[[ integer ]] = object.object_iterator_next(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::OBJECT_ITERATOR_NEXT (0xD88DC865) function."
    },
    "object.object_iterator_prev": {
        "prefix": [
            "object.object_iterator_prev",
            "object_iterator_prev"
        ],
        "body": [
            "local result --[[ integer ]] = object.object_iterator_prev(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::OBJECT_ITERATOR_PREV (0x91A3A831) function."
    },
    "object.object_iterator_current": {
        "prefix": [
            "object.object_iterator_current",
            "object_iterator_current"
        ],
        "body": [
            "local result --[[ integer ]] = object.object_iterator_current(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::OBJECT_ITERATOR_CURRENT (0x191E32C0) function."
    },
    "object.object_iterator_reset": {
        "prefix": [
            "object.object_iterator_reset",
            "object_iterator_reset"
        ],
        "body": [
            "object.object_iterator_reset(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::OBJECT_ITERATOR_RESET (0x351A482F) function."
    },
    "object.iterate_on_partial_name": {
        "prefix": [
            "object.iterate_on_partial_name",
            "iterate_on_partial_name"
        ],
        "body": [
            "object.iterate_on_partial_name(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_ON_PARTIAL_NAME (0x9624A938) function."
    },
    "object.iterate_on_partial_model_name": {
        "prefix": [
            "object.iterate_on_partial_model_name",
            "iterate_on_partial_model_name"
        ],
        "body": [
            "object.iterate_on_partial_model_name(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_ON_PARTIAL_MODEL_NAME (0xD117DF0D) function."
    },
    "object.iterate_on_object_type": {
        "prefix": [
            "object.iterate_on_object_type",
            "iterate_on_object_type"
        ],
        "body": [
            "object.iterate_on_object_type(iterator --[[ integer ]], type --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_ON_OBJECT_TYPE (0xBE553F84) function."
    },
    "object.iterate_in_sphere": {
        "prefix": [
            "object.iterate_in_sphere",
            "iterate_in_sphere"
        ],
        "body": [
            "object.iterate_in_sphere(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_IN_SPHERE (0x2243FA6E) function."
    },
    "object.iterate_in_volume": {
        "prefix": [
            "object.iterate_in_volume",
            "iterate_in_volume"
        ],
        "body": [
            "object.iterate_in_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_IN_VOLUME (0x6914D904) function."
    },
    "object.iterate_everywhere": {
        "prefix": [
            "object.iterate_everywhere",
            "iterate_everywhere"
        ],
        "body": [
            "object.iterate_everywhere(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_EVERYWHERE (0xF35C5859) function."
    },
    "object.iterate_in_layout": {
        "prefix": [
            "object.iterate_in_layout",
            "iterate_in_layout"
        ],
        "body": [
            "object.iterate_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_IN_LAYOUT (0xF3ABE99C) function."
    },
    "object.iterate_in_set": {
        "prefix": [
            "object.iterate_in_set",
            "iterate_in_set"
        ],
        "body": [
            "object.iterate_in_set(iterator --[[ integer ]], iterationset --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_IN_SET (0xDF6B5E94) function."
    },
    "object.iterate_in_event_trap": {
        "prefix": [
            "object.iterate_in_event_trap",
            "iterate_in_event_trap"
        ],
        "body": [
            "object.iterate_in_event_trap(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_IN_EVENT_TRAP (0x0D8BA78E) function."
    },
    "object.iterate_in_volume_set": {
        "prefix": [
            "object.iterate_in_volume_set",
            "iterate_in_volume_set"
        ],
        "body": [
            "object.iterate_in_volume_set(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::ITERATE_IN_VOLUME_SET (0x8BCB6B86) function."
    },
    "object.get_iterator_parent": {
        "prefix": [
            "object.get_iterator_parent",
            "get_iterator_parent"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_iterator_parent(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ITERATOR_PARENT (0x12AA009F) function."
    },
    "object.get_num_iterator_matches": {
        "prefix": [
            "object.get_num_iterator_matches",
            "get_num_iterator_matches"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_num_iterator_matches(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_NUM_ITERATOR_MATCHES (0xA3874D8A) function."
    },
    "object.find_object_in_object": {
        "prefix": [
            "object.find_object_in_object",
            "find_object_in_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.find_object_in_object(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::FIND_OBJECT_IN_OBJECT (0x070F9693) function."
    },
    "object.find_object_in_layout": {
        "prefix": [
            "object.find_object_in_layout",
            "find_object_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.find_object_in_layout(layout --[[ integer ]], objectname --[[ string ]])"
        ],
        "description": "OBJECT::FIND_OBJECT_IN_LAYOUT (0xCF875EFA) function."
    },
    "object.find_actor_in_layout": {
        "prefix": [
            "object.find_actor_in_layout",
            "find_actor_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.find_actor_in_layout(layout --[[ integer ]], actorname --[[ string ]])"
        ],
        "description": "OBJECT::FIND_ACTOR_IN_LAYOUT (0x53A761DE) function."
    },
    "object.find_volume_in_layout": {
        "prefix": [
            "object.find_volume_in_layout",
            "find_volume_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.find_volume_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::FIND_VOLUME_IN_LAYOUT (0xAC830865) function."
    },
    "object.clear_ambient_objects_sphere": {
        "prefix": [
            "object.clear_ambient_objects_sphere",
            "clear_ambient_objects_sphere"
        ],
        "body": [
            "object.clear_ambient_objects_sphere(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "OBJECT::CLEAR_AMBIENT_OBJECTS_SPHERE (0xC9365FBC) function."
    },
    "object.clear_ambient_objects_volume": {
        "prefix": [
            "object.clear_ambient_objects_volume",
            "clear_ambient_objects_volume"
        ],
        "body": [
            "object.clear_ambient_objects_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::CLEAR_AMBIENT_OBJECTS_VOLUME (0xBB77E597) function."
    },
    "object.get_object_position": {
        "prefix": [
            "object.get_object_position",
            "get_object_position"
        ],
        "body": [
            "local result --[[ vector3 ]] = object.get_object_position(object --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_POSITION (0x31201B4C) function."
    },
    "object.rotate_object_around_axis": {
        "prefix": [
            "object.rotate_object_around_axis",
            "rotate_object_around_axis"
        ],
        "body": [
            "local result --[[ integer ]] = object.rotate_object_around_axis(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::ROTATE_OBJECT_AROUND_AXIS (0x3C45D66A) function."
    },
    "object.get_object_axis": {
        "prefix": [
            "object.get_object_axis",
            "get_object_axis"
        ],
        "body": [
            "local result --[[ boolean ]] = object.get_object_axis(object --[[ integer ]], axis --[[ vector3 ]], rotationorder --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_AXIS (0xCE412E46) function."
    },
    "object.get_object_relative_position": {
        "prefix": [
            "object.get_object_relative_position",
            "get_object_relative_position"
        ],
        "body": [
            "local result --[[ boolean ]] = object.get_object_relative_position(object --[[ integer ]], input --[[ vector3 ]], unused --[[ integer ]], output --[[ vector3 ]])"
        ],
        "description": "OBJECT::GET_OBJECT_RELATIVE_POSITION (0x2243EA59) function."
    },
    "object.get_object_relative_offset": {
        "prefix": [
            "object.get_object_relative_offset",
            "get_object_relative_offset"
        ],
        "body": [
            "local result --[[ boolean ]] = object.get_object_relative_offset(object --[[ integer ]], input --[[ vector3 ]], unused --[[ integer ]], output --[[ vector3 ]])"
        ],
        "description": "OBJECT::GET_OBJECT_RELATIVE_OFFSET (0x15CDF203) function."
    },
    "object.get_object_relative_orientation": {
        "prefix": [
            "object.get_object_relative_orientation",
            "get_object_relative_orientation"
        ],
        "body": [
            "local result --[[ boolean ]] = object.get_object_relative_orientation(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_RELATIVE_ORIENTATION (0x919583DC) function."
    },
    "object.get_object_relative_orientation_in_object_space": {
        "prefix": [
            "object.get_object_relative_orientation_in_object_space",
            "get_object_relative_orientation_in_object_space"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_relative_orientation_in_object_space(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_RELATIVE_ORIENTATION_IN_OBJECT_SPACE (0x6689F85C) function."
    },
    "object.prepare_corpse_for_animal_consumption": {
        "prefix": [
            "object.prepare_corpse_for_animal_consumption",
            "prepare_corpse_for_animal_consumption"
        ],
        "body": [
            "local result --[[ integer ]] = object.prepare_corpse_for_animal_consumption(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "OBJECT::PREPARE_CORPSE_FOR_ANIMAL_CONSUMPTION (0xFC718FC5) function."
    },
    "object.get_position_object_space": {
        "prefix": [
            "object.get_position_object_space",
            "get_position_object_space"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_position_object_space(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_POSITION_OBJECT_SPACE (0x663F1464) function."
    },
    "object.get_object_orientation": {
        "prefix": [
            "object.get_object_orientation",
            "get_object_orientation"
        ],
        "body": [
            "local result --[[ vector3 ]] = object.get_object_orientation(object --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_ORIENTATION (0x27B7D6D6) function."
    },
    "object.get_object_heading": {
        "prefix": [
            "object.get_object_heading",
            "get_object_heading"
        ],
        "body": [
            "local result --[[ number ]] = object.get_object_heading(object --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_HEADING (0x1C02D2F8) function."
    },
    "object.set_object_position": {
        "prefix": [
            "object.set_object_position",
            "set_object_position"
        ],
        "body": [
            "local result --[[ boolean ]] = object.set_object_position(object --[[ integer ]], positionxy --[[ vector2 ]], positionz --[[ number ]])"
        ],
        "description": "OBJECT::SET_OBJECT_POSITION (0xC5D796F8) function."
    },
    "object.set_object_position_on_ground": {
        "prefix": [
            "object.set_object_position_on_ground",
            "set_object_position_on_ground"
        ],
        "body": [
            "object.set_object_position_on_ground(object --[[ integer ]], positionxy --[[ vector2 ]], positionz --[[ number ]])"
        ],
        "description": "OBJECT::SET_OBJECT_POSITION_ON_GROUND (0x5AB0BBA6) function."
    },
    "object.set_object_orientation": {
        "prefix": [
            "object.set_object_orientation",
            "set_object_orientation"
        ],
        "body": [
            "local result --[[ boolean ]] = object.set_object_orientation(object --[[ integer ]], orientationxy --[[ vector2 ]], orientationz --[[ number ]])"
        ],
        "description": "OBJECT::SET_OBJECT_ORIENTATION (0xC8A4EE74) function."
    },
    "object.snap_object_to_ground": {
        "prefix": [
            "object.snap_object_to_ground",
            "snap_object_to_ground"
        ],
        "body": [
            "local result --[[ integer ]] = object.snap_object_to_ground(object --[[ integer ]], unk1 --[[ number ]], unk2 --[[ number ]], unk3 --[[ number ]])"
        ],
        "description": "OBJECT::SNAP_OBJECT_TO_GROUND (0xF437B3D9) function."
    },
    "object.get_object_named_bone_position": {
        "prefix": [
            "object.get_object_named_bone_position",
            "get_object_named_bone_position"
        ],
        "body": [
            "local result --[[ boolean ]] = object.get_object_named_bone_position(object --[[ integer ]], bonename --[[ string ]], position --[[ vector3 ]])"
        ],
        "description": "OBJECT::GET_OBJECT_NAMED_BONE_POSITION (0x30516389) function."
    },
    "object.get_object_named_bone_orientation": {
        "prefix": [
            "object.get_object_named_bone_orientation",
            "get_object_named_bone_orientation"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_named_bone_orientation(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_NAMED_BONE_ORIENTATION (0xCAD543AD) function."
    },
    "object.teleport_object_to_object": {
        "prefix": [
            "object.teleport_object_to_object",
            "teleport_object_to_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.teleport_object_to_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "OBJECT::TELEPORT_OBJECT_TO_OBJECT (0x8C0E3E29) function."
    },
    "object.is_object_attached": {
        "prefix": [
            "object.is_object_attached",
            "is_object_attached"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_object_attached(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_OBJECT_ATTACHED (0xAD08BA79) function."
    },
    "object.get_object_attachement": {
        "prefix": [
            "object.get_object_attachement",
            "get_object_attachement"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_attachement(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_ATTACHEMENT (0x78B73E47) function."
    },
    "object.get_object_attached_to": {
        "prefix": [
            "object.get_object_attached_to",
            "get_object_attached_to"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_object_attached_to(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_OBJECT_ATTACHED_TO (0x533475AE) function."
    },
    "object.attach_objects": {
        "prefix": [
            "object.attach_objects",
            "attach_objects"
        ],
        "body": [
            "local result --[[ integer ]] = object.attach_objects(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "OBJECT::ATTACH_OBJECTS (0xE1421B42) function."
    },
    "object.attach_objects_no_drv": {
        "prefix": [
            "object.attach_objects_no_drv",
            "attach_objects_no_drv"
        ],
        "body": [
            "local result --[[ integer ]] = object.attach_objects_no_drv(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "OBJECT::ATTACH_OBJECTS_NO_DRV (0xCC277C0A) function."
    },
    "object.attach_objects_using_locator": {
        "prefix": [
            "object.attach_objects_using_locator",
            "attach_objects_using_locator"
        ],
        "body": [
            "local result --[[ integer ]] = object.attach_objects_using_locator(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "OBJECT::ATTACH_OBJECTS_USING_LOCATOR (0xB6506558) function."
    },
    "object.attach_objects_continuous": {
        "prefix": [
            "object.attach_objects_continuous",
            "attach_objects_continuous"
        ],
        "body": [
            "local result --[[ integer ]] = object.attach_objects_continuous(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::ATTACH_OBJECTS_CONTINUOUS (0x319D70BD) function."
    },
    "object.attach_objects_physical": {
        "prefix": [
            "object.attach_objects_physical",
            "attach_objects_physical"
        ],
        "body": [
            "local result --[[ integer ]] = object.attach_objects_physical(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "OBJECT::ATTACH_OBJECTS_PHYSICAL (0x1D711058) function."
    },
    "object.attach_set_rotational_constraint": {
        "prefix": [
            "object.attach_set_rotational_constraint",
            "attach_set_rotational_constraint"
        ],
        "body": [
            "local result --[[ integer ]] = object.attach_set_rotational_constraint(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "OBJECT::ATTACH_SET_ROTATIONAL_CONSTRAINT (0x325F7E50) function."
    },
    "object.is_attachment_valid": {
        "prefix": [
            "object.is_attachment_valid",
            "is_attachment_valid"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_attachment_valid(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_ATTACHMENT_VALID (0x50305244) function."
    },
    "object.remove_object_attachment": {
        "prefix": [
            "object.remove_object_attachment",
            "remove_object_attachment"
        ],
        "body": [
            "object.remove_object_attachment(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_OBJECT_ATTACHMENT (0xE894DC13) function."
    },
    "object.remove_object_from_attachment": {
        "prefix": [
            "object.remove_object_from_attachment",
            "remove_object_from_attachment"
        ],
        "body": [
            "object.remove_object_from_attachment(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_OBJECT_FROM_ATTACHMENT (0x67FC68DB) function."
    },
    "object.remove_all_object_attachments": {
        "prefix": [
            "object.remove_all_object_attachments",
            "remove_all_object_attachments"
        ],
        "body": [
            "object.remove_all_object_attachments(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_ALL_OBJECT_ATTACHMENTS (0x8FB32562) function."
    },
    "object.set_attachment_local_rotation": {
        "prefix": [
            "object.set_attachment_local_rotation",
            "set_attachment_local_rotation"
        ],
        "body": [
            "object.set_attachment_local_rotation(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_ATTACHMENT_LOCAL_ROTATION (0x2F7B457B) function."
    },
    "object.set_attachment_local_offset": {
        "prefix": [
            "object.set_attachment_local_offset",
            "set_attachment_local_offset"
        ],
        "body": [
            "object.set_attachment_local_offset(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_ATTACHMENT_LOCAL_OFFSET (0xD4A54348) function."
    },
    "object.set_attachment_ignore_rotation": {
        "prefix": [
            "object.set_attachment_ignore_rotation",
            "set_attachment_ignore_rotation"
        ],
        "body": [
            "object.set_attachment_ignore_rotation(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_ATTACHMENT_IGNORE_ROTATION (0xA870B28E) function."
    },
    "object.reference_object": {
        "prefix": [
            "object.reference_object",
            "reference_object"
        ],
        "body": [
            "object.reference_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::REFERENCE_OBJECT (0x3EEA78A8) function."
    },
    "object.reference_actor": {
        "prefix": [
            "object.reference_actor",
            "reference_actor"
        ],
        "body": [
            "object.reference_actor(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::REFERENCE_ACTOR (0xE9AABF2F) function."
    },
    "object.dereference_object": {
        "prefix": [
            "object.dereference_object",
            "dereference_object"
        ],
        "body": [
            "object.dereference_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DEREFERENCE_OBJECT (0xCEA40973) function."
    },
    "object.dereference_actor": {
        "prefix": [
            "object.dereference_actor",
            "dereference_actor"
        ],
        "body": [
            "object.dereference_actor(actor --[[ integer ]])"
        ],
        "description": "OBJECT::DEREFERENCE_ACTOR (0x92339B5E) function."
    },
    "object.init_native_actorenum_player": {
        "prefix": [
            "object.init_native_actorenum_player",
            "init_native_actorenum_player"
        ],
        "body": [
            "object.init_native_actorenum_player(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_PLAYER (0xCBA75200) function."
    },
    "object.init_native_actorenum_human": {
        "prefix": [
            "object.init_native_actorenum_human",
            "init_native_actorenum_human"
        ],
        "body": [
            "object.init_native_actorenum_human(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_HUMAN (0x88FD9623) function."
    },
    "object.init_native_actorenum_animal": {
        "prefix": [
            "object.init_native_actorenum_animal",
            "init_native_actorenum_animal"
        ],
        "body": [
            "object.init_native_actorenum_animal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_ANIMAL (0x192973A0) function."
    },
    "object.init_native_actorenum_rideable_animal": {
        "prefix": [
            "object.init_native_actorenum_rideable_animal",
            "init_native_actorenum_rideable_animal"
        ],
        "body": [
            "object.init_native_actorenum_rideable_animal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_RIDEABLE_ANIMAL (0x4D42E285) function."
    },
    "object.init_native_actorenum_flying_animal": {
        "prefix": [
            "object.init_native_actorenum_flying_animal",
            "init_native_actorenum_flying_animal"
        ],
        "body": [
            "object.init_native_actorenum_flying_animal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_FLYING_ANIMAL (0xE694F53A) function."
    },
    "object.init_native_actorenum_vehicle": {
        "prefix": [
            "object.init_native_actorenum_vehicle",
            "init_native_actorenum_vehicle"
        ],
        "body": [
            "object.init_native_actorenum_vehicle(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_VEHICLE (0x6D0B8619) function."
    },
    "object.init_native_actorenum_train": {
        "prefix": [
            "object.init_native_actorenum_train",
            "init_native_actorenum_train"
        ],
        "body": [
            "object.init_native_actorenum_train(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_TRAIN (0x807B9519) function."
    },
    "object.init_native_actorenum_dlc_player": {
        "prefix": [
            "object.init_native_actorenum_dlc_player",
            "init_native_actorenum_dlc_player"
        ],
        "body": [
            "object.init_native_actorenum_dlc_player(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_DLC_PLAYER (0x1904CC1D) function."
    },
    "object.init_native_actorenum_dlc_human": {
        "prefix": [
            "object.init_native_actorenum_dlc_human",
            "init_native_actorenum_dlc_human"
        ],
        "body": [
            "object.init_native_actorenum_dlc_human(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_DLC_HUMAN (0x1957B498) function."
    },
    "object.init_native_actorenum_dlc_rideable_animal": {
        "prefix": [
            "object.init_native_actorenum_dlc_rideable_animal",
            "init_native_actorenum_dlc_rideable_animal"
        ],
        "body": [
            "object.init_native_actorenum_dlc_rideable_animal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "OBJECT::INIT_NATIVE_ACTORENUM_DLC_RIDEABLE_ANIMAL (0x10BD98C9) function."
    },
    "object.is_actorenum_dlc": {
        "prefix": [
            "object.is_actorenum_dlc",
            "is_actorenum_dlc"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_actorenum_dlc(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_ACTORENUM_DLC (0xF2140DEE) function."
    },
    "object.is_actorenum_installed": {
        "prefix": [
            "object.is_actorenum_installed",
            "is_actorenum_installed"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_actorenum_installed(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_ACTORENUM_INSTALLED (0x9B903F45) function."
    },
    "object.set_lock_offset_actorenum_animal": {
        "prefix": [
            "object.set_lock_offset_actorenum_animal",
            "set_lock_offset_actorenum_animal"
        ],
        "body": [
            "object.set_lock_offset_actorenum_animal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_LOCK_OFFSET_ACTORENUM_ANIMAL (0xC741F051) function."
    },
    "object.create_actor_in_layout": {
        "prefix": [
            "object.create_actor_in_layout",
            "create_actor_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_actor_in_layout(layout --[[ integer ]], actorname --[[ string ]], model --[[ integer ]], positionxy --[[ vector2 ]], positionz --[[ number ]], rotationxy --[[ vector2 ]], rotationz --[[ number ]])"
        ],
        "description": "OBJECT::CREATE_ACTOR_IN_LAYOUT (0x8D67F397) function."
    },
    "object.create_player_actor_in_layout": {
        "prefix": [
            "object.create_player_actor_in_layout",
            "create_player_actor_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_player_actor_in_layout(layout --[[ integer ]], actorname --[[ string ]], model --[[ integer ]], positionxy --[[ vector2 ]], positionz --[[ number ]], rotationxy --[[ vector2 ]], rotationz --[[ number ]], outfitvariation --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_PLAYER_ACTOR_IN_LAYOUT (0x6A307D5F) function."
    },
    "object.create_pers_char_in_layout": {
        "prefix": [
            "object.create_pers_char_in_layout",
            "create_pers_char_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_pers_char_in_layout(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_PERS_CHAR_IN_LAYOUT (0x013B3937) function."
    },
    "object.respawn_player_actor_in_layout": {
        "prefix": [
            "object.respawn_player_actor_in_layout",
            "respawn_player_actor_in_layout"
        ],
        "body": [
            "local result --[[ integer ]] = object.respawn_player_actor_in_layout(layout --[[ integer ]], actor --[[ integer ]], actorinlayout --[[ string ]], model --[[ integer ]], positionxy --[[ vector2 ]], positionz --[[ number ]], rotationxy --[[ vector2 ]], rotationz --[[ number ]], unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::RESPAWN_PLAYER_ACTOR_IN_LAYOUT (0x637E446B) function."
    },
    "object.is_actor_inited": {
        "prefix": [
            "object.is_actor_inited",
            "is_actor_inited"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_actor_inited(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_ACTOR_INITED (0x24F4DAB2) function."
    },
    "object.get_actor_enum": {
        "prefix": [
            "object.get_actor_enum",
            "get_actor_enum"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_actor_enum(actor --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ACTOR_ENUM (0x0B28E9EC) function."
    },
    "object.get_actor_enum_string": {
        "prefix": [
            "object.get_actor_enum_string",
            "get_actor_enum_string"
        ],
        "body": [
            "local result --[[ string ]] = object.get_actor_enum_string(actor --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ACTOR_ENUM_STRING (0xD98CB6F6) function."
    },
    "object.get_actor_enum_from_string": {
        "prefix": [
            "object.get_actor_enum_from_string",
            "get_actor_enum_from_string"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_actor_enum_from_string(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ACTOR_ENUM_FROM_STRING (0xC739D1D2) function."
    },
    "object.get_actor_enum_string_from_enum": {
        "prefix": [
            "object.get_actor_enum_string_from_enum",
            "get_actor_enum_string_from_enum"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_actor_enum_string_from_enum(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ACTOR_ENUM_STRING_FROM_ENUM (0x990614C1) function."
    },
    "object.get_actor_enum_variation_count": {
        "prefix": [
            "object.get_actor_enum_variation_count",
            "get_actor_enum_variation_count"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_actor_enum_variation_count(model --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ACTOR_ENUM_VARIATION_COUNT (0xB50E95D7) function."
    },
    "object.get_actor_enum_faction": {
        "prefix": [
            "object.get_actor_enum_faction",
            "get_actor_enum_faction"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_actor_enum_faction(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ACTOR_ENUM_FACTION (0x2803BDA8) function."
    },
    "object.switch_actor_enum_variation": {
        "prefix": [
            "object.switch_actor_enum_variation",
            "switch_actor_enum_variation"
        ],
        "body": [
            "object.switch_actor_enum_variation(actor --[[ integer ]], variationid --[[ integer ]])"
        ],
        "description": "OBJECT::SWITCH_ACTOR_ENUM_VARIATION (0x7AB17813) function."
    },
    "object.switch_player_to_enum": {
        "prefix": [
            "object.switch_player_to_enum",
            "switch_player_to_enum"
        ],
        "body": [
            "object.switch_player_to_enum(model --[[ integer ]], variationid --[[ integer ]])"
        ],
        "description": "OBJECT::SWITCH_PLAYER_TO_ENUM (0x95FBA0B0) function."
    },
    "object.turn_actor_into_zombie": {
        "prefix": [
            "object.turn_actor_into_zombie",
            "turn_actor_into_zombie"
        ],
        "body": [
            "object.turn_actor_into_zombie(actor --[[ integer ]], model --[[ integer ]])"
        ],
        "description": "OBJECT::TURN_ACTOR_INTO_ZOMBIE (0x39928706) function."
    },
    "object.set_actor_hard_lock_aquire_bone_casual": {
        "prefix": [
            "object.set_actor_hard_lock_aquire_bone_casual",
            "set_actor_hard_lock_aquire_bone_casual"
        ],
        "body": [
            "object.set_actor_hard_lock_aquire_bone_casual(actor --[[ integer ]], bonename --[[ string ]])"
        ],
        "description": "OBJECT::SET_ACTOR_HARD_LOCK_AQUIRE_BONE_CASUAL (0x12A86E9D) function."
    },
    "object.set_actor_hard_lock_aquire_bone": {
        "prefix": [
            "object.set_actor_hard_lock_aquire_bone",
            "set_actor_hard_lock_aquire_bone"
        ],
        "body": [
            "object.set_actor_hard_lock_aquire_bone(actor --[[ integer ]], bonename --[[ string ]])"
        ],
        "description": "OBJECT::SET_ACTOR_HARD_LOCK_AQUIRE_BONE (0x5613615B) function."
    },
    "object.request_asset": {
        "prefix": [
            "object.request_asset",
            "request_asset"
        ],
        "body": [
            "local result --[[ integer ]] = object.request_asset(assetdir --[[ string ]], assettype --[[ integer ]])"
        ],
        "description": "OBJECT::REQUEST_ASSET (0x9AA02DA7) function."
    },
    "object.get_asset_id": {
        "prefix": [
            "object.get_asset_id",
            "get_asset_id"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_asset_id(assetpath --[[ string ]], assettype --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ASSET_ID (0x6005B514) function."
    },
    "object.remove_asset": {
        "prefix": [
            "object.remove_asset",
            "remove_asset"
        ],
        "body": [
            "local result --[[ integer ]] = object.remove_asset(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::REMOVE_ASSET (0xE7829D28) function."
    },
    "object.ae_get_asset_id": {
        "prefix": [
            "object.ae_get_asset_id",
            "ae_get_asset_id"
        ],
        "body": [
            "local result --[[ integer ]] = object.ae_get_asset_id(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::AE_GET_ASSET_ID (0x55E6227E) function."
    },
    "object.get_asset_name": {
        "prefix": [
            "object.get_asset_name",
            "get_asset_name"
        ],
        "body": [
            "local result --[[ string ]] = object.get_asset_name(assetid --[[ integer ]], assettype --[[ integer ]])"
        ],
        "description": "OBJECT::GET_ASSET_NAME (0x9EDBBB84) function."
    },
    "object.is_assettypeid_valid": {
        "prefix": [
            "object.is_assettypeid_valid",
            "is_assettypeid_valid"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_assettypeid_valid(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_ASSETTYPEID_VALID (0x214AFB8C) function."
    },
    "object.is_assettypeid_valid_by_string": {
        "prefix": [
            "object.is_assettypeid_valid_by_string",
            "is_assettypeid_valid_by_string"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_assettypeid_valid_by_string(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_ASSETTYPEID_VALID_BY_STRING (0xFDF42AAC) function."
    },
    "object.get_corpse_actor_enum": {
        "prefix": [
            "object.get_corpse_actor_enum",
            "get_corpse_actor_enum"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_corpse_actor_enum(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CORPSE_ACTOR_ENUM (0x1FCC8FEF) function."
    },
    "object.get_previous_actor_from_corpse": {
        "prefix": [
            "object.get_previous_actor_from_corpse",
            "get_previous_actor_from_corpse"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_previous_actor_from_corpse(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_PREVIOUS_ACTOR_FROM_CORPSE (0xAF2597E8) function."
    },
    "object.request_articulated_corpse": {
        "prefix": [
            "object.request_articulated_corpse",
            "request_articulated_corpse"
        ],
        "body": [
            "local result --[[ integer ]] = object.request_articulated_corpse(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::REQUEST_ARTICULATED_CORPSE (0x97951004) function."
    },
    "object.request_fixed_corpse": {
        "prefix": [
            "object.request_fixed_corpse",
            "request_fixed_corpse"
        ],
        "body": [
            "local result --[[ integer ]] = object.request_fixed_corpse(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::REQUEST_FIXED_CORPSE (0x0D447878) function."
    },
    "object.set_prop_collide_with_world": {
        "prefix": [
            "object.set_prop_collide_with_world",
            "set_prop_collide_with_world"
        ],
        "body": [
            "object.set_prop_collide_with_world(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_PROP_COLLIDE_WITH_WORLD (0xCEC355CE) function."
    },
    "object.set_prop_collide_with_movables": {
        "prefix": [
            "object.set_prop_collide_with_movables",
            "set_prop_collide_with_movables"
        ],
        "body": [
            "object.set_prop_collide_with_movables(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_PROP_COLLIDE_WITH_MOVABLES (0x418A22D5) function."
    },
    "object.set_prop_collide_with_object": {
        "prefix": [
            "object.set_prop_collide_with_object",
            "set_prop_collide_with_object"
        ],
        "body": [
            "object.set_prop_collide_with_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_PROP_COLLIDE_WITH_OBJECT (0x77403213) function."
    },
    "object.set_object_collide_with_world": {
        "prefix": [
            "object.set_object_collide_with_world",
            "set_object_collide_with_world"
        ],
        "body": [
            "object.set_object_collide_with_world(object --[[ integer ]], collide --[[ boolean ]])"
        ],
        "description": "OBJECT::SET_OBJECT_COLLIDE_WITH_WORLD (0x601FC9F4) function."
    },
    "object.set_object_collide_with_movables": {
        "prefix": [
            "object.set_object_collide_with_movables",
            "set_object_collide_with_movables"
        ],
        "body": [
            "object.set_object_collide_with_movables(object --[[ integer ]], collide --[[ boolean ]])"
        ],
        "description": "OBJECT::SET_OBJECT_COLLIDE_WITH_MOVABLES (0x05D69EA6) function."
    },
    "object.set_object_collide_with_object": {
        "prefix": [
            "object.set_object_collide_with_object",
            "set_object_collide_with_object"
        ],
        "body": [
            "object.set_object_collide_with_object(object --[[ integer ]], collide --[[ boolean ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_OBJECT_COLLIDE_WITH_OBJECT (0x9AC1CA75) function."
    },
    "object.set_prop_ai_obstacle_enabled": {
        "prefix": [
            "object.set_prop_ai_obstacle_enabled",
            "set_prop_ai_obstacle_enabled"
        ],
        "body": [
            "local result --[[ integer ]] = object.set_prop_ai_obstacle_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_PROP_AI_OBSTACLE_ENABLED (0x0DC83543) function."
    },
    "object.get_curve_from_object": {
        "prefix": [
            "object.get_curve_from_object",
            "get_curve_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_curve_from_object(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_CURVE_FROM_OBJECT (0x49D0DF2E) function."
    },
    "object.destroy_curvequery": {
        "prefix": [
            "object.destroy_curvequery",
            "destroy_curvequery"
        ],
        "body": [
            "object.destroy_curvequery(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_CURVEQUERY (0xDF93BD7C) function."
    },
    "object.destroy_camera": {
        "prefix": [
            "object.destroy_camera",
            "destroy_camera"
        ],
        "body": [
            "object.destroy_camera(camera --[[ integer ]])"
        ],
        "description": "OBJECT::DESTROY_CAMERA (0x767E08D0) function."
    },
    "object.create_world_sector": {
        "prefix": [
            "object.create_world_sector",
            "create_world_sector"
        ],
        "body": [
            "local result --[[ integer ]] = object.create_world_sector(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::CREATE_WORLD_SECTOR (0xC94CC336) function."
    },
    "object.is_world_sector_loaded": {
        "prefix": [
            "object.is_world_sector_loaded",
            "is_world_sector_loaded"
        ],
        "body": [
            "local result --[[ integer ]] = object.is_world_sector_loaded(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::IS_WORLD_SECTOR_LOADED (0xBF81A6C4) function."
    },
    "object.mark_region_ready": {
        "prefix": [
            "object.mark_region_ready",
            "mark_region_ready"
        ],
        "body": [
            "object.mark_region_ready(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::MARK_REGION_READY (0x276A420B) function."
    },
    "object.get_world_sector_child_object": {
        "prefix": [
            "object.get_world_sector_child_object",
            "get_world_sector_child_object"
        ],
        "body": [
            "local result --[[ integer ]] = object.get_world_sector_child_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "OBJECT::GET_WORLD_SECTOR_CHILD_OBJECT (0xA5F229C9) function."
    },
    "object.save_pop_set_birds_spawning_from_trees": {
        "prefix": [
            "object.save_pop_set_birds_spawning_from_trees",
            "save_pop_set_birds_spawning_from_trees"
        ],
        "body": [
            "local result --[[ integer ]] = object.save_pop_set_birds_spawning_from_trees(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::SAVE_POP_SET_BIRDS_SPAWNING_FROM_TREES (0x03B2D067) function."
    },
    "object.set_town_volume_for_ambient_peds": {
        "prefix": [
            "object.set_town_volume_for_ambient_peds",
            "set_town_volume_for_ambient_peds"
        ],
        "body": [
            "object.set_town_volume_for_ambient_peds(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_TOWN_VOLUME_FOR_AMBIENT_PEDS (0x6C526E7B) function."
    },
    "object.save_pop_set_human_spawning_in_town": {
        "prefix": [
            "object.save_pop_set_human_spawning_in_town",
            "save_pop_set_human_spawning_in_town"
        ],
        "body": [
            "local result --[[ integer ]] = object.save_pop_set_human_spawning_in_town(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::SAVE_POP_SET_HUMAN_SPAWNING_IN_TOWN (0xC1195126) function."
    },
    "object.save_pop_set_human_spawning_in_town_conversation_full": {
        "prefix": [
            "object.save_pop_set_human_spawning_in_town_conversation_full",
            "save_pop_set_human_spawning_in_town_conversation_full"
        ],
        "body": [
            "local result --[[ integer ]] = object.save_pop_set_human_spawning_in_town_conversation_full(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::SAVE_POP_SET_HUMAN_SPAWNING_IN_TOWN_CONVERSATION_FULL (0x00CDD849) function."
    },
    "object.save_pop_set_human_spawning_in_town_conversation_response": {
        "prefix": [
            "object.save_pop_set_human_spawning_in_town_conversation_response",
            "save_pop_set_human_spawning_in_town_conversation_response"
        ],
        "body": [
            "local result --[[ integer ]] = object.save_pop_set_human_spawning_in_town_conversation_response(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::SAVE_POP_SET_HUMAN_SPAWNING_IN_TOWN_CONVERSATION_RESPONSE (0x6138B1B8) function."
    },
    "object.set_agressive_event_on": {
        "prefix": [
            "object.set_agressive_event_on",
            "set_agressive_event_on"
        ],
        "body": [
            "object.set_agressive_event_on(unk0 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_AGRESSIVE_EVENT_ON (0xF037DCA2) function."
    },
    "object.set_town_density": {
        "prefix": [
            "object.set_town_density",
            "set_town_density"
        ],
        "body": [
            "object.set_town_density(density --[[ number ]])"
        ],
        "description": "OBJECT::SET_TOWN_DENSITY (0x3748F199) function."
    },
    "object.set_weather_pop_density": {
        "prefix": [
            "object.set_weather_pop_density",
            "set_weather_pop_density"
        ],
        "body": [
            "object.set_weather_pop_density(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "OBJECT::SET_WEATHER_POP_DENSITY (0x03CD9C87) function."
    },
    "path.set_path_looping": {
        "prefix": [
            "path.set_path_looping",
            "set_path_looping"
        ],
        "body": [
            "path.set_path_looping(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PATH::SET_PATH_LOOPING (0x44930268) function."
    },
    "path.add_point_to_path": {
        "prefix": [
            "path.add_point_to_path",
            "add_point_to_path"
        ],
        "body": [
            "local result --[[ integer ]] = path.add_point_to_path(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "PATH::ADD_POINT_TO_PATH (0xECC40138) function."
    },
    "path.get_num_path_points": {
        "prefix": [
            "path.get_num_path_points",
            "get_num_path_points"
        ],
        "body": [
            "local result --[[ integer ]] = path.get_num_path_points(unk0 --[[ integer ]])"
        ],
        "description": "PATH::GET_NUM_PATH_POINTS (0xBD374C00) function."
    },
    "path.get_path_num_points": {
        "prefix": [
            "path.get_path_num_points",
            "get_path_num_points"
        ],
        "body": [
            "local result --[[ integer ]] = path.get_path_num_points(unk0 --[[ integer ]])"
        ],
        "description": "PATH::GET_PATH_NUM_POINTS (0x42A4CCD5) function."
    },
    "path.get_path_point": {
        "prefix": [
            "path.get_path_point",
            "get_path_point"
        ],
        "body": [
            "path.get_path_point(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "PATH::GET_PATH_POINT (0x415F635C) function."
    },
    "path.estimate_two_distances_along_path": {
        "prefix": [
            "path.estimate_two_distances_along_path",
            "estimate_two_distances_along_path"
        ],
        "body": [
            "path.estimate_two_distances_along_path(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "PATH::ESTIMATE_TWO_DISTANCES_ALONG_PATH (0xA1D9AF6B) function."
    },
    "pc.set_hogtying": {
        "prefix": [
            "pc.set_hogtying",
            "set_hogtying"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_hogtying(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_HOGTYING (0x8CF09BD7) function."
    },
    "pc.set_fasttravel": {
        "prefix": [
            "pc.set_fasttravel",
            "set_fasttravel"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_fasttravel(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_FASTTRAVEL (0xBAE0A3F8) function."
    },
    "pc._0x9f832205": {
        "prefix": [
            "pc._0x9f832205",
            "_0x9f832205"
        ],
        "body": [
            "local result --[[ integer ]] = pc._0x9f832205(unk0 --[[ integer ]])"
        ],
        "description": "PC::_0x9F832205 (0x9F832205) function."
    },
    "pc._0xf413fdb2": {
        "prefix": [
            "pc._0xf413fdb2",
            "_0xf413fdb2"
        ],
        "body": [
            "local result --[[ integer ]] = pc._0xf413fdb2(unk0 --[[ integer ]])"
        ],
        "description": "PC::_0xF413FDB2 (0xF413FDB2) function."
    },
    "pc._0x63d3aafc": {
        "prefix": [
            "pc._0x63d3aafc",
            "_0x63d3aafc"
        ],
        "body": [
            "local result --[[ integer ]] = pc._0x63d3aafc(unk0 --[[ integer ]])"
        ],
        "description": "PC::_0x63D3AAFC (0x63D3AAFC) function."
    },
    "pc._0x3b93b981": {
        "prefix": [
            "pc._0x3b93b981",
            "_0x3b93b981"
        ],
        "body": [
            "local result --[[ integer ]] = pc._0x3b93b981(unk0 --[[ integer ]])"
        ],
        "description": "PC::_0x3B93B981 (0x3B93B981) function."
    },
    "pc.set_horse_break_intro": {
        "prefix": [
            "pc.set_horse_break_intro",
            "set_horse_break_intro"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_horse_break_intro(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_HORSE_BREAK_INTRO (0x854ACCFE) function."
    },
    "pc._0xeb0f9f0c": {
        "prefix": [
            "pc._0xeb0f9f0c",
            "_0xeb0f9f0c"
        ],
        "body": [
            "local result --[[ integer ]] = pc._0xeb0f9f0c(unk0 --[[ integer ]])"
        ],
        "description": "PC::_0xEB0F9F0C (0xEB0F9F0C) function."
    },
    "pc.set_saving_game": {
        "prefix": [
            "pc.set_saving_game",
            "set_saving_game"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_saving_game(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_SAVING_GAME (0xFD198D8B) function."
    },
    "pc.set_saving_game_zombie": {
        "prefix": [
            "pc.set_saving_game_zombie",
            "set_saving_game_zombie"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_saving_game_zombie(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_SAVING_GAME_ZOMBIE (0xA62D75BA) function."
    },
    "pc.set_first_pay_cutscene": {
        "prefix": [
            "pc.set_first_pay_cutscene",
            "set_first_pay_cutscene"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_first_pay_cutscene(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_FIRST_PAY_CUTSCENE (0x7C730896) function."
    },
    "pc._0x02859ce6": {
        "prefix": [
            "pc._0x02859ce6",
            "_0x02859ce6"
        ],
        "body": [
            "local result --[[ integer ]] = pc._0x02859ce6(unk0 --[[ integer ]])"
        ],
        "description": "PC::_0x02859CE6 (0x02859CE6) function."
    },
    "pc.set_armadillo_movie_playing": {
        "prefix": [
            "pc.set_armadillo_movie_playing",
            "set_armadillo_movie_playing"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_armadillo_movie_playing(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_ARMADILLO_MOVIE_PLAYING (0x5B47E49A) function."
    },
    "pc.set_blackwater_movie_playing": {
        "prefix": [
            "pc.set_blackwater_movie_playing",
            "set_blackwater_movie_playing"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_blackwater_movie_playing(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_BLACKWATER_MOVIE_PLAYING (0x97609434) function."
    },
    "pc.set_in_prison": {
        "prefix": [
            "pc.set_in_prison",
            "set_in_prison"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_in_prison(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_IN_PRISON (0x0920DB21) function."
    },
    "pc._0x9ced1c7e": {
        "prefix": [
            "pc._0x9ced1c7e",
            "_0x9ced1c7e"
        ],
        "body": [
            "local result --[[ integer ]] = pc._0x9ced1c7e(unk0 --[[ integer ]])"
        ],
        "description": "PC::_0x9CED1C7E (0x9CED1C7E) function."
    },
    "pc._0xd9dda7e2": {
        "prefix": [
            "pc._0xd9dda7e2",
            "_0xd9dda7e2"
        ],
        "body": [
            "local result --[[ integer ]] = pc._0xd9dda7e2(unk0 --[[ integer ]])"
        ],
        "description": "PC::_0xD9DDA7E2 (0xD9DDA7E2) function."
    },
    "pc.set_using_binoculars": {
        "prefix": [
            "pc.set_using_binoculars",
            "set_using_binoculars"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_using_binoculars(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_USING_BINOCULARS (0x14664FF4) function."
    },
    "pc.set_paying_bounty": {
        "prefix": [
            "pc.set_paying_bounty",
            "set_paying_bounty"
        ],
        "body": [
            "local result --[[ integer ]] = pc.set_paying_bounty(unk0 --[[ integer ]])"
        ],
        "description": "PC::SET_PAYING_BOUNTY (0xB0E60B63) function."
    },
    "perschar.activate_actor_for_pers_char": {
        "prefix": [
            "perschar.activate_actor_for_pers_char",
            "activate_actor_for_pers_char"
        ],
        "body": [
            "local result --[[ integer ]] = perschar.activate_actor_for_pers_char(unk0 --[[ integer ]])"
        ],
        "description": "PERSCHAR::ACTIVATE_ACTOR_FOR_PERS_CHAR (0x2CA16327) function."
    },
    "perschar.deactivate_actor_for_pers_char": {
        "prefix": [
            "perschar.deactivate_actor_for_pers_char",
            "deactivate_actor_for_pers_char"
        ],
        "body": [
            "local result --[[ integer ]] = perschar.deactivate_actor_for_pers_char(unk0 --[[ integer ]])"
        ],
        "description": "PERSCHAR::DEACTIVATE_ACTOR_FOR_PERS_CHAR (0x9B2A39BC) function."
    },
    "perschar.deactivate_actors_for_pers_chars_in_volume": {
        "prefix": [
            "perschar.deactivate_actors_for_pers_chars_in_volume",
            "deactivate_actors_for_pers_chars_in_volume"
        ],
        "body": [
            "perschar.deactivate_actors_for_pers_chars_in_volume(unk0 --[[ integer ]])"
        ],
        "description": "PERSCHAR::DEACTIVATE_ACTORS_FOR_PERS_CHARS_IN_VOLUME (0x6F8C238B) function."
    },
    "perschar.get_actor_from_pers_char": {
        "prefix": [
            "perschar.get_actor_from_pers_char",
            "get_actor_from_pers_char"
        ],
        "body": [
            "local result --[[ integer ]] = perschar.get_actor_from_pers_char(unk0 --[[ integer ]])"
        ],
        "description": "PERSCHAR::GET_ACTOR_FROM_PERS_CHAR (0xE04ED21E) function."
    },
    "perschar.get_pers_char_death_timestamp": {
        "prefix": [
            "perschar.get_pers_char_death_timestamp",
            "get_pers_char_death_timestamp"
        ],
        "body": [
            "local result --[[ integer ]] = perschar.get_pers_char_death_timestamp(unk0 --[[ integer ]])"
        ],
        "description": "PERSCHAR::GET_PERS_CHAR_DEATH_TIMESTAMP (0xD78D1B4F) function."
    },
    "perschar.get_pers_char_from_actor": {
        "prefix": [
            "perschar.get_pers_char_from_actor",
            "get_pers_char_from_actor"
        ],
        "body": [
            "local result --[[ integer ]] = perschar.get_pers_char_from_actor(unk0 --[[ integer ]])"
        ],
        "description": "PERSCHAR::GET_PERS_CHAR_FROM_ACTOR (0x69DA275F) function."
    },
    "perschar.set_pers_char_safe_zone": {
        "prefix": [
            "perschar.set_pers_char_safe_zone",
            "set_pers_char_safe_zone"
        ],
        "body": [
            "local result --[[ integer ]] = perschar.set_pers_char_safe_zone(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PERSCHAR::SET_PERS_CHAR_SAFE_ZONE (0x67258116) function."
    },
    "perschar.is_pers_char_alive": {
        "prefix": [
            "perschar.is_pers_char_alive",
            "is_pers_char_alive"
        ],
        "body": [
            "local result --[[ integer ]] = perschar.is_pers_char_alive(unk0 --[[ integer ]])"
        ],
        "description": "PERSCHAR::IS_PERS_CHAR_ALIVE (0x5F3A1B81) function."
    },
    "perschar.revive_pers_char": {
        "prefix": [
            "perschar.revive_pers_char",
            "revive_pers_char"
        ],
        "body": [
            "local result --[[ integer ]] = perschar.revive_pers_char(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PERSCHAR::REVIVE_PERS_CHAR (0xEDA4B02B) function."
    },
    "perschar.set_pers_char_exempt_from_ambient_restrictions": {
        "prefix": [
            "perschar.set_pers_char_exempt_from_ambient_restrictions",
            "set_pers_char_exempt_from_ambient_restrictions"
        ],
        "body": [
            "perschar.set_pers_char_exempt_from_ambient_restrictions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PERSCHAR::SET_PERS_CHAR_EXEMPT_FROM_AMBIENT_RESTRICTIONS (0x2A709F33) function."
    },
    "perschar.set_pers_char_enabled": {
        "prefix": [
            "perschar.set_pers_char_enabled",
            "set_pers_char_enabled"
        ],
        "body": [
            "perschar.set_pers_char_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PERSCHAR::SET_PERS_CHAR_ENABLED (0xC85CFEA9) function."
    },
    "perschar.set_pers_char_allow_spawn_elsewhere": {
        "prefix": [
            "perschar.set_pers_char_allow_spawn_elsewhere",
            "set_pers_char_allow_spawn_elsewhere"
        ],
        "body": [
            "perschar.set_pers_char_allow_spawn_elsewhere(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PERSCHAR::SET_PERS_CHAR_ALLOW_SPAWN_ELSEWHERE (0x366B0AD1) function."
    },
    "physics.get_physinst_velocity": {
        "prefix": [
            "physics.get_physinst_velocity",
            "get_physinst_velocity"
        ],
        "body": [
            "local result --[[ boolean ]] = physics.get_physinst_velocity(physinst --[[ integer ]], velocity --[[ vector3 ]])"
        ],
        "description": "PHYSICS::GET_PHYSINST_VELOCITY (0x17B69196) function."
    },
    "physics.is_physinst_active": {
        "prefix": [
            "physics.is_physinst_active",
            "is_physinst_active"
        ],
        "body": [
            "local result --[[ boolean ]] = physics.is_physinst_active(unk0 --[[ integer ]])"
        ],
        "description": "PHYSICS::IS_PHYSINST_ACTIVE (0xAFB1DFA2) function."
    },
    "physics.set_physinst_collides_against_inactive": {
        "prefix": [
            "physics.set_physinst_collides_against_inactive",
            "set_physinst_collides_against_inactive"
        ],
        "body": [
            "physics.set_physinst_collides_against_inactive(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSICS::SET_PHYSINST_COLLIDES_AGAINST_INACTIVE (0x38636EBF) function."
    },
    "physics.set_physinst_frozen": {
        "prefix": [
            "physics.set_physinst_frozen",
            "set_physinst_frozen"
        ],
        "body": [
            "physics.set_physinst_frozen(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSICS::SET_PHYSINST_FROZEN (0x2C0AF634) function."
    },
    "physics.is_physinst_frozen": {
        "prefix": [
            "physics.is_physinst_frozen",
            "is_physinst_frozen"
        ],
        "body": [
            "local result --[[ boolean ]] = physics.is_physinst_frozen(unk0 --[[ integer ]])"
        ],
        "description": "PHYSICS::IS_PHYSINST_FROZEN (0x789AA2B2) function."
    },
    "physics.set_physinst_hide": {
        "prefix": [
            "physics.set_physinst_hide",
            "set_physinst_hide"
        ],
        "body": [
            "local result --[[ integer ]] = physics.set_physinst_hide(unk0 --[[ integer ]], hide --[[ boolean ]])"
        ],
        "description": "PHYSICS::SET_PHYSINST_HIDE (0xEBD9DFE6) function."
    },
    "physics.is_physinst_hide": {
        "prefix": [
            "physics.is_physinst_hide",
            "is_physinst_hide"
        ],
        "body": [
            "local result --[[ boolean ]] = physics.is_physinst_hide(unk0 --[[ integer ]])"
        ],
        "description": "PHYSICS::IS_PHYSINST_HIDE (0x445990D8) function."
    },
    "physics.break_off_above": {
        "prefix": [
            "physics.break_off_above",
            "break_off_above"
        ],
        "body": [
            "physics.break_off_above(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSICS::BREAK_OFF_ABOVE (0xB5F9F4CF) function."
    },
    "physics.get_locator_offsets": {
        "prefix": [
            "physics.get_locator_offsets",
            "get_locator_offsets"
        ],
        "body": [
            "local result --[[ integer ]] = physics.get_locator_offsets(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "PHYSICS::GET_LOCATOR_OFFSETS (0x0BA5E579) function."
    },
    "physics.set_infinite_mass_vs_movers": {
        "prefix": [
            "physics.set_infinite_mass_vs_movers",
            "set_infinite_mass_vs_movers"
        ],
        "body": [
            "physics.set_infinite_mass_vs_movers(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSICS::SET_INFINITE_MASS_VS_MOVERS (0xFD759593) function."
    },
    "physics.set_global_disable_spu_collider_update": {
        "prefix": [
            "physics.set_global_disable_spu_collider_update",
            "set_global_disable_spu_collider_update"
        ],
        "body": [
            "physics.set_global_disable_spu_collider_update(unk0 --[[ integer ]])"
        ],
        "description": "PHYSICS::SET_GLOBAL_DISABLE_SPU_COLLIDER_UPDATE (0x87A2C1D5) function."
    },
    "physics.set_global_aggressive_corpse_recycling": {
        "prefix": [
            "physics.set_global_aggressive_corpse_recycling",
            "set_global_aggressive_corpse_recycling"
        ],
        "body": [
            "physics.set_global_aggressive_corpse_recycling(unk0 --[[ integer ]])"
        ],
        "description": "PHYSICS::SET_GLOBAL_AGGRESSIVE_CORPSE_RECYCLING (0x374DE883) function."
    },
    "physics.liquid_test_set_velocity_scale": {
        "prefix": [
            "physics.liquid_test_set_velocity_scale",
            "liquid_test_set_velocity_scale"
        ],
        "body": [
            "local result --[[ integer ]] = physics.liquid_test_set_velocity_scale(unk0 --[[ number ]])"
        ],
        "description": "PHYSICS::LIQUID_TEST_SET_VELOCITY_SCALE (0x89B45C7D) function."
    },
    "physics.clean_cache_entries": {
        "prefix": [
            "physics.clean_cache_entries",
            "clean_cache_entries"
        ],
        "body": [
            "physics.clean_cache_entries()"
        ],
        "description": "PHYSICS::CLEAN_CACHE_ENTRIES (0x4C02E1E5) function."
    },
    "physinst.is_prop_broken": {
        "prefix": [
            "physinst.is_prop_broken",
            "is_prop_broken"
        ],
        "body": [
            "local result --[[ boolean ]] = physinst.is_prop_broken(unk0 --[[ integer ]])"
        ],
        "description": "PHYSINST::IS_PROP_BROKEN (0x25277BBC) function."
    },
    "physinst.get_prop_velocity": {
        "prefix": [
            "physinst.get_prop_velocity",
            "get_prop_velocity"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.get_prop_velocity(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSINST::GET_PROP_VELOCITY (0x5AEA8801) function."
    },
    "physinst.set_prop_velocity": {
        "prefix": [
            "physinst.set_prop_velocity",
            "set_prop_velocity"
        ],
        "body": [
            "local result --[[ boolean ]] = physinst.set_prop_velocity(physinst --[[ integer ]], velocity --[[ vector3 ]])"
        ],
        "description": "PHYSINST::SET_PROP_VELOCITY (0x28425D8C) function."
    },
    "physinst.set_prop_angular_velocity_degs": {
        "prefix": [
            "physinst.set_prop_angular_velocity_degs",
            "set_prop_angular_velocity_degs"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.set_prop_angular_velocity_degs(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSINST::SET_PROP_ANGULAR_VELOCITY_DEGS (0x544BCE48) function."
    },
    "physinst.set_prop_velocity_on_axis": {
        "prefix": [
            "physinst.set_prop_velocity_on_axis",
            "set_prop_velocity_on_axis"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.set_prop_velocity_on_axis(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "PHYSINST::SET_PROP_VELOCITY_ON_AXIS (0xC9F3981D) function."
    },
    "physinst.is_physinst_valid": {
        "prefix": [
            "physinst.is_physinst_valid",
            "is_physinst_valid"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.is_physinst_valid(unk0 --[[ integer ]])"
        ],
        "description": "PHYSINST::IS_PHYSINST_VALID (0x16C0A6CB) function."
    },
    "physinst.is_physinst_ready": {
        "prefix": [
            "physinst.is_physinst_ready",
            "is_physinst_ready"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.is_physinst_ready(unk0 --[[ integer ]])"
        ],
        "description": "PHYSINST::IS_PHYSINST_READY (0xE83E6A41) function."
    },
    "physinst.is_physinst_in_level": {
        "prefix": [
            "physinst.is_physinst_in_level",
            "is_physinst_in_level"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.is_physinst_in_level(unk0 --[[ integer ]])"
        ],
        "description": "PHYSINST::IS_PHYSINST_IN_LEVEL (0x6243A6AF) function."
    },
    "physinst.set_sleep_tolerance": {
        "prefix": [
            "physinst.set_sleep_tolerance",
            "set_sleep_tolerance"
        ],
        "body": [
            "physinst.set_sleep_tolerance(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSINST::SET_SLEEP_TOLERANCE (0x750ADBE5) function."
    },
    "physinst.set_bridge_stiffness": {
        "prefix": [
            "physinst.set_bridge_stiffness",
            "set_bridge_stiffness"
        ],
        "body": [
            "physinst.set_bridge_stiffness(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSINST::SET_BRIDGE_STIFFNESS (0x987FD4F6) function."
    },
    "physinst.activate_physinst": {
        "prefix": [
            "physinst.activate_physinst",
            "activate_physinst"
        ],
        "body": [
            "physinst.activate_physinst(unk0 --[[ integer ]])"
        ],
        "description": "PHYSINST::ACTIVATE_PHYSINST (0xC0961D18) function."
    },
    "physinst.has_physinst_broken_apart": {
        "prefix": [
            "physinst.has_physinst_broken_apart",
            "has_physinst_broken_apart"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.has_physinst_broken_apart(unk0 --[[ integer ]])"
        ],
        "description": "PHYSINST::HAS_PHYSINST_BROKEN_APART (0x65CA3037) function."
    },
    "physinst.locate_physinst_of_type": {
        "prefix": [
            "physinst.locate_physinst_of_type",
            "locate_physinst_of_type"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.locate_physinst_of_type(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "PHYSINST::LOCATE_PHYSINST_OF_TYPE (0x734CC17B) function."
    },
    "physinst.locate_physinst_of_partial_type": {
        "prefix": [
            "physinst.locate_physinst_of_partial_type",
            "locate_physinst_of_partial_type"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.locate_physinst_of_partial_type(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "PHYSINST::LOCATE_PHYSINST_OF_PARTIAL_TYPE (0x4FF36FA7) function."
    },
    "physinst.locate_physinsts_of_partial_type": {
        "prefix": [
            "physinst.locate_physinsts_of_partial_type",
            "locate_physinsts_of_partial_type"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.locate_physinsts_of_partial_type(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "PHYSINST::LOCATE_PHYSINSTS_OF_PARTIAL_TYPE (0xC5E372BC) function."
    },
    "physinst.attach_physinst_to_world2_high_quality": {
        "prefix": [
            "physinst.attach_physinst_to_world2_high_quality",
            "attach_physinst_to_world2_high_quality"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.attach_physinst_to_world2_high_quality(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "PHYSINST::ATTACH_PHYSINST_TO_WORLD2_HIGH_QUALITY (0x4A05AA7D) function."
    },
    "physinst.release_constraint": {
        "prefix": [
            "physinst.release_constraint",
            "release_constraint"
        ],
        "body": [
            "physinst.release_constraint(unk0 --[[ integer ]])"
        ],
        "description": "PHYSINST::RELEASE_CONSTRAINT (0x8B9659EF) function."
    },
    "physinst.hide_physinst": {
        "prefix": [
            "physinst.hide_physinst",
            "hide_physinst"
        ],
        "body": [
            "physinst.hide_physinst(physinst --[[ integer ]])"
        ],
        "description": "PHYSINST::HIDE_PHYSINST (0x0D6BFDD9) function."
    },
    "physinst.show_physinst": {
        "prefix": [
            "physinst.show_physinst",
            "show_physinst"
        ],
        "body": [
            "physinst.show_physinst(physinst --[[ integer ]])"
        ],
        "description": "PHYSINST::SHOW_PHYSINST (0x342FDCD6) function."
    },
    "physinst.set_sector_props_super_locked": {
        "prefix": [
            "physinst.set_sector_props_super_locked",
            "set_sector_props_super_locked"
        ],
        "body": [
            "physinst.set_sector_props_super_locked(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSINST::SET_SECTOR_PROPS_SUPER_LOCKED (0xED3ADF67) function."
    },
    "physinst.lights_set_on_time": {
        "prefix": [
            "physinst.lights_set_on_time",
            "lights_set_on_time"
        ],
        "body": [
            "physinst.lights_set_on_time(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSINST::LIGHTS_SET_ON_TIME (0x3774465F) function."
    },
    "physinst.lights_set_off_time": {
        "prefix": [
            "physinst.lights_set_off_time",
            "lights_set_off_time"
        ],
        "body": [
            "physinst.lights_set_off_time(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PHYSINST::LIGHTS_SET_OFF_TIME (0xD0CDEED4) function."
    },
    "physinst.set_prop_no_fade": {
        "prefix": [
            "physinst.set_prop_no_fade",
            "set_prop_no_fade"
        ],
        "body": [
            "local result --[[ integer ]] = physinst.set_prop_no_fade(unk0 --[[ integer ]])"
        ],
        "description": "PHYSINST::SET_PROP_NO_FADE (0x1260ACCC) function."
    },
    "playernames.net_gamer_set_actor_override": {
        "prefix": [
            "playernames.net_gamer_set_actor_override",
            "net_gamer_set_actor_override"
        ],
        "body": [
            "playernames.net_gamer_set_actor_override(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_SET_ACTOR_OVERRIDE (0x77D6ABF5) function."
    },
    "playernames.net_gamer_set_team": {
        "prefix": [
            "playernames.net_gamer_set_team",
            "net_gamer_set_team"
        ],
        "body": [
            "playernames.net_gamer_set_team(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_SET_TEAM (0xE79F6CD4) function."
    },
    "playernames.net_gamer_setmy_jpn_title": {
        "prefix": [
            "playernames.net_gamer_setmy_jpn_title",
            "net_gamer_setmy_jpn_title"
        ],
        "body": [
            "local result --[[ integer ]] = playernames.net_gamer_setmy_jpn_title(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_SETMY_JPN_TITLE (0xFD91BE0D) function."
    },
    "playernames.in_selected_pedpath": {
        "prefix": [
            "playernames.in_selected_pedpath",
            "in_selected_pedpath"
        ],
        "body": [
            "local result --[[ integer ]] = playernames.in_selected_pedpath(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::IN_SELECTED_PEDPATH (0xE2E6C722) function."
    },
    "playernames.net_gamer_barker_accept": {
        "prefix": [
            "playernames.net_gamer_barker_accept",
            "net_gamer_barker_accept"
        ],
        "body": [
            "playernames.net_gamer_barker_accept(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_BARKER_ACCEPT (0xCE8F6304) function."
    },
    "playernames.net_gamer_barker_reject": {
        "prefix": [
            "playernames.net_gamer_barker_reject",
            "net_gamer_barker_reject"
        ],
        "body": [
            "playernames.net_gamer_barker_reject(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_BARKER_REJECT (0xAB32D5D9) function."
    },
    "playernames.net_gamer_set_title": {
        "prefix": [
            "playernames.net_gamer_set_title",
            "net_gamer_set_title"
        ],
        "body": [
            "playernames.net_gamer_set_title(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_SET_TITLE (0x7BD7A465) function."
    },
    "playernames.net_gamer_icon_force_visibility": {
        "prefix": [
            "playernames.net_gamer_icon_force_visibility",
            "net_gamer_icon_force_visibility"
        ],
        "body": [
            "playernames.net_gamer_icon_force_visibility(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_ICON_FORCE_VISIBILITY (0x160E79C6) function."
    },
    "playernames.net_gamer_icon_reset_timer": {
        "prefix": [
            "playernames.net_gamer_icon_reset_timer",
            "net_gamer_icon_reset_timer"
        ],
        "body": [
            "playernames.net_gamer_icon_reset_timer(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_ICON_RESET_TIMER (0xB5DDEF68) function."
    },
    "playernames.net_gamer_icon_force_text_visible": {
        "prefix": [
            "playernames.net_gamer_icon_force_text_visible",
            "net_gamer_icon_force_text_visible"
        ],
        "body": [
            "playernames.net_gamer_icon_force_text_visible(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_ICON_FORCE_TEXT_VISIBLE (0xE783219A) function."
    },
    "playernames.end_scripted_request": {
        "prefix": [
            "playernames.end_scripted_request",
            "end_scripted_request"
        ],
        "body": [
            "playernames.end_scripted_request(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::END_SCRIPTED_REQUEST (0x1958F478) function."
    },
    "playernames.net_gamer_icons_show_local": {
        "prefix": [
            "playernames.net_gamer_icons_show_local",
            "net_gamer_icons_show_local"
        ],
        "body": [
            "playernames.net_gamer_icons_show_local(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_ICONS_SHOW_LOCAL (0x2FB85996) function."
    },
    "playernames.net_gamer_icons_set_stealth": {
        "prefix": [
            "playernames.net_gamer_icons_set_stealth",
            "net_gamer_icons_set_stealth"
        ],
        "body": [
            "playernames.net_gamer_icons_set_stealth(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_ICONS_SET_STEALTH (0xF34B8448) function."
    },
    "playernames.net_gamer_blips_set_stealth": {
        "prefix": [
            "playernames.net_gamer_blips_set_stealth",
            "net_gamer_blips_set_stealth"
        ],
        "body": [
            "playernames.net_gamer_blips_set_stealth(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_BLIPS_SET_STEALTH (0x796E66E7) function."
    },
    "playernames.net_hud_tune_value": {
        "prefix": [
            "playernames.net_hud_tune_value",
            "net_hud_tune_value"
        ],
        "body": [
            "local result --[[ integer ]] = playernames.net_hud_tune_value(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_HUD_TUNE_VALUE (0x650A7440) function."
    },
    "playernames.net_gamer_set_icon_stealth_override": {
        "prefix": [
            "playernames.net_gamer_set_icon_stealth_override",
            "net_gamer_set_icon_stealth_override"
        ],
        "body": [
            "playernames.net_gamer_set_icon_stealth_override(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_SET_ICON_STEALTH_OVERRIDE (0xA0A5FF80) function."
    },
    "playernames.net_gamer_set_blip_stealth_override": {
        "prefix": [
            "playernames.net_gamer_set_blip_stealth_override",
            "net_gamer_set_blip_stealth_override"
        ],
        "body": [
            "playernames.net_gamer_set_blip_stealth_override(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_SET_BLIP_STEALTH_OVERRIDE (0x2634F265) function."
    },
    "playernames.is_horses_relative": {
        "prefix": [
            "playernames.is_horses_relative",
            "is_horses_relative"
        ],
        "body": [
            "playernames.is_horses_relative(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::IS_HORSES_RELATIVE (0x4A2E7533) function."
    },
    "playernames.net_gamer_blips_force_visible": {
        "prefix": [
            "playernames.net_gamer_blips_force_visible",
            "net_gamer_blips_force_visible"
        ],
        "body": [
            "playernames.net_gamer_blips_force_visible(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_BLIPS_FORCE_VISIBLE (0x08D84437) function."
    },
    "playernames.net_gamer_blips_show_posse_members": {
        "prefix": [
            "playernames.net_gamer_blips_show_posse_members",
            "net_gamer_blips_show_posse_members"
        ],
        "body": [
            "playernames.net_gamer_blips_show_posse_members(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_BLIPS_SHOW_POSSE_MEMBERS (0x784F04DD) function."
    },
    "playernames.net_gamer_blips_show_on_full_map": {
        "prefix": [
            "playernames.net_gamer_blips_show_on_full_map",
            "net_gamer_blips_show_on_full_map"
        ],
        "body": [
            "playernames.net_gamer_blips_show_on_full_map(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_BLIPS_SHOW_ON_FULL_MAP (0xE5FE0A6A) function."
    },
    "playernames.net_gamer_blips_treat_cover_as_alive": {
        "prefix": [
            "playernames.net_gamer_blips_treat_cover_as_alive",
            "net_gamer_blips_treat_cover_as_alive"
        ],
        "body": [
            "playernames.net_gamer_blips_treat_cover_as_alive(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_GAMER_BLIPS_TREAT_COVER_AS_ALIVE (0x3248D20E) function."
    },
    "playernames.net_posse_get_leader_waypoint": {
        "prefix": [
            "playernames.net_posse_get_leader_waypoint",
            "net_posse_get_leader_waypoint"
        ],
        "body": [
            "local result --[[ integer ]] = playernames.net_posse_get_leader_waypoint(unk0 --[[ integer ]])"
        ],
        "description": "PLAYERNAMES::NET_POSSE_GET_LEADER_WAYPOINT (0x9DDB29B1) function."
    },
    "playernames.net_posse_is_leader_waypoint_valid": {
        "prefix": [
            "playernames.net_posse_is_leader_waypoint_valid",
            "net_posse_is_leader_waypoint_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = playernames.net_posse_is_leader_waypoint_valid()"
        ],
        "description": "PLAYERNAMES::NET_POSSE_IS_LEADER_WAYPOINT_VALID (0x24A1B923) function."
    },
    "playstats.playstat_int": {
        "prefix": [
            "playstats.playstat_int",
            "playstat_int"
        ],
        "body": [
            "playstats.playstat_int(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYSTATS::PLAYSTAT_INT (0x2547029C) function."
    },
    "playstats.playstat_int3": {
        "prefix": [
            "playstats.playstat_int3",
            "playstat_int3"
        ],
        "body": [
            "playstats.playstat_int3(unk0 --[[ integer ]], unk1 --[[ string ]], unk2 --[[ integer ]], unk3 --[[ string ]], unk4 --[[ integer ]], unk5 --[[ string ]], unk6 --[[ integer ]])"
        ],
        "description": "PLAYSTATS::PLAYSTAT_INT3 (0x6F6D942B) function."
    },
    "playstats.playstat_string": {
        "prefix": [
            "playstats.playstat_string",
            "playstat_string"
        ],
        "body": [
            "playstats.playstat_string(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PLAYSTATS::PLAYSTAT_STRING (0x713B1D7F) function."
    },
    "playstats.playstat_deed_named": {
        "prefix": [
            "playstats.playstat_deed_named",
            "playstat_deed_named"
        ],
        "body": [
            "playstats.playstat_deed_named(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "PLAYSTATS::PLAYSTAT_DEED_NAMED (0x9C80A3A4) function."
    },
    "playstats.playstat_mp_deed_start": {
        "prefix": [
            "playstats.playstat_mp_deed_start",
            "playstat_mp_deed_start"
        ],
        "body": [
            "playstats.playstat_mp_deed_start(unk0 --[[ integer ]])"
        ],
        "description": "PLAYSTATS::PLAYSTAT_MP_DEED_START (0x27A00456) function."
    },
    "playstats.playstat_mp_deed_complete": {
        "prefix": [
            "playstats.playstat_mp_deed_complete",
            "playstat_mp_deed_complete"
        ],
        "body": [
            "playstats.playstat_mp_deed_complete(unk0 --[[ integer ]])"
        ],
        "description": "PLAYSTATS::PLAYSTAT_MP_DEED_COMPLETE (0x120E6123) function."
    },
    "playstats.playstat_mp_deed_complete_ex": {
        "prefix": [
            "playstats.playstat_mp_deed_complete_ex",
            "playstat_mp_deed_complete_ex"
        ],
        "body": [
            "playstats.playstat_mp_deed_complete_ex(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "PLAYSTATS::PLAYSTAT_MP_DEED_COMPLETE_EX (0x4585821E) function."
    },
    "playstats.playstat_mp_coop_complete": {
        "prefix": [
            "playstats.playstat_mp_coop_complete",
            "playstat_mp_coop_complete"
        ],
        "body": [
            "playstats.playstat_mp_coop_complete(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "PLAYSTATS::PLAYSTAT_MP_COOP_COMPLETE (0x46C39437) function."
    },
    "population.begin_population_definition": {
        "prefix": [
            "population.begin_population_definition",
            "begin_population_definition"
        ],
        "body": [
            "population.begin_population_definition()"
        ],
        "description": "POPULATION::BEGIN_POPULATION_DEFINITION (0x1344515B) function."
    },
    "population.end_population_definition": {
        "prefix": [
            "population.end_population_definition",
            "end_population_definition"
        ],
        "body": [
            "population.end_population_definition()"
        ],
        "description": "POPULATION::END_POPULATION_DEFINITION (0x364F41D6) function."
    },
    "population.link_actorenum_to_population": {
        "prefix": [
            "population.link_actorenum_to_population",
            "link_actorenum_to_population"
        ],
        "body": [
            "population.link_actorenum_to_population(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "POPULATION::LINK_ACTORENUM_TO_POPULATION (0x0C1B8DEA) function."
    },
    "population.link_actorenum_to_population_timed": {
        "prefix": [
            "population.link_actorenum_to_population_timed",
            "link_actorenum_to_population_timed"
        ],
        "body": [
            "population.link_actorenum_to_population_timed(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "POPULATION::LINK_ACTORENUM_TO_POPULATION_TIMED (0x93B6135B) function."
    },
    "population.set_accessoryset_on_spawn": {
        "prefix": [
            "population.set_accessoryset_on_spawn",
            "set_accessoryset_on_spawn"
        ],
        "body": [
            "population.set_accessoryset_on_spawn(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ACCESSORYSET_ON_SPAWN (0xC79F2BD3) function."
    },
    "population.set_zone_population_animal_domestication": {
        "prefix": [
            "population.set_zone_population_animal_domestication",
            "set_zone_population_animal_domestication"
        ],
        "body": [
            "population.set_zone_population_animal_domestication(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_ANIMAL_DOMESTICATION (0x5996941F) function."
    },
    "population.set_zone_population_count": {
        "prefix": [
            "population.set_zone_population_count",
            "set_zone_population_count"
        ],
        "body": [
            "population.set_zone_population_count(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_COUNT (0x1B271D85) function."
    },
    "population.set_zone_population_count_random": {
        "prefix": [
            "population.set_zone_population_count_random",
            "set_zone_population_count_random"
        ],
        "body": [
            "population.set_zone_population_count_random(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_COUNT_RANDOM (0xE339719A) function."
    },
    "population.set_zone_population_density": {
        "prefix": [
            "population.set_zone_population_density",
            "set_zone_population_density"
        ],
        "body": [
            "population.set_zone_population_density(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_DENSITY (0x9381D459) function."
    },
    "population.set_zone_population_type": {
        "prefix": [
            "population.set_zone_population_type",
            "set_zone_population_type"
        ],
        "body": [
            "population.set_zone_population_type(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_TYPE (0xFC30948B) function."
    },
    "population.set_zone_population_spawn_multi_per_point": {
        "prefix": [
            "population.set_zone_population_spawn_multi_per_point",
            "set_zone_population_spawn_multi_per_point"
        ],
        "body": [
            "population.set_zone_population_spawn_multi_per_point(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_SPAWN_MULTI_PER_POINT (0x7D4FB8C8) function."
    },
    "population.set_zone_restrict_actors": {
        "prefix": [
            "population.set_zone_restrict_actors",
            "set_zone_restrict_actors"
        ],
        "body": [
            "population.set_zone_restrict_actors(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_RESTRICT_ACTORS (0xE0FDD026) function."
    },
    "population.set_zone_population_is_flock": {
        "prefix": [
            "population.set_zone_population_is_flock",
            "set_zone_population_is_flock"
        ],
        "body": [
            "population.set_zone_population_is_flock(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_IS_FLOCK (0x0B24CE10) function."
    },
    "population.set_zone_population_max_flock_size": {
        "prefix": [
            "population.set_zone_population_max_flock_size",
            "set_zone_population_max_flock_size"
        ],
        "body": [
            "population.set_zone_population_max_flock_size(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_MAX_FLOCK_SIZE (0x07FD0A76) function."
    },
    "population.set_zone_population_min_flock_size": {
        "prefix": [
            "population.set_zone_population_min_flock_size",
            "set_zone_population_min_flock_size"
        ],
        "body": [
            "population.set_zone_population_min_flock_size(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_MIN_FLOCK_SIZE (0xE4A789D8) function."
    },
    "population.set_zone_population_max_per_cell": {
        "prefix": [
            "population.set_zone_population_max_per_cell",
            "set_zone_population_max_per_cell"
        ],
        "body": [
            "population.set_zone_population_max_per_cell(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_POPULATION_MAX_PER_CELL (0x354DDFED) function."
    },
    "population.set_flock_default_population_max_per_cell": {
        "prefix": [
            "population.set_flock_default_population_max_per_cell",
            "set_flock_default_population_max_per_cell"
        ],
        "body": [
            "population.set_flock_default_population_max_per_cell(unk0 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_FLOCK_DEFAULT_POPULATION_MAX_PER_CELL (0x7ABDE1F0) function."
    },
    "population.set_individual_default_population_max_per_cell": {
        "prefix": [
            "population.set_individual_default_population_max_per_cell",
            "set_individual_default_population_max_per_cell"
        ],
        "body": [
            "population.set_individual_default_population_max_per_cell(unk0 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_INDIVIDUAL_DEFAULT_POPULATION_MAX_PER_CELL (0x7D7F9770) function."
    },
    "population.set_zone_priority": {
        "prefix": [
            "population.set_zone_priority",
            "set_zone_priority"
        ],
        "body": [
            "population.set_zone_priority(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_PRIORITY (0x4B8C0945) function."
    },
    "population.set_zone_force_spawn_distance": {
        "prefix": [
            "population.set_zone_force_spawn_distance",
            "set_zone_force_spawn_distance"
        ],
        "body": [
            "population.set_zone_force_spawn_distance(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_FORCE_SPAWN_DISTANCE (0xE7F19909) function."
    },
    "population.set_zone_reserve_gringos": {
        "prefix": [
            "population.set_zone_reserve_gringos",
            "set_zone_reserve_gringos"
        ],
        "body": [
            "population.set_zone_reserve_gringos(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_RESERVE_GRINGOS (0xC43C4D76) function."
    },
    "population.set_zone_spawn_only_at_gringos": {
        "prefix": [
            "population.set_zone_spawn_only_at_gringos",
            "set_zone_spawn_only_at_gringos"
        ],
        "body": [
            "population.set_zone_spawn_only_at_gringos(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_SPAWN_ONLY_AT_GRINGOS (0xD72DF5C6) function."
    },
    "population.clear_zone_allowed_gringo_type_list": {
        "prefix": [
            "population.clear_zone_allowed_gringo_type_list",
            "clear_zone_allowed_gringo_type_list"
        ],
        "body": [
            "population.clear_zone_allowed_gringo_type_list(unk0 --[[ integer ]])"
        ],
        "description": "POPULATION::CLEAR_ZONE_ALLOWED_GRINGO_TYPE_LIST (0x230AB95E) function."
    },
    "population.add_to_zone_allowed_gringo_type_list": {
        "prefix": [
            "population.add_to_zone_allowed_gringo_type_list",
            "add_to_zone_allowed_gringo_type_list"
        ],
        "body": [
            "population.add_to_zone_allowed_gringo_type_list(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::ADD_TO_ZONE_ALLOWED_GRINGO_TYPE_LIST (0x64799CEE) function."
    },
    "population.set_zone_respect_volume_restrictions": {
        "prefix": [
            "population.set_zone_respect_volume_restrictions",
            "set_zone_respect_volume_restrictions"
        ],
        "body": [
            "population.set_zone_respect_volume_restrictions(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_RESPECT_VOLUME_RESTRICTIONS (0xFCA83D15) function."
    },
    "population.set_default_population_density": {
        "prefix": [
            "population.set_default_population_density",
            "set_default_population_density"
        ],
        "body": [
            "population.set_default_population_density(density --[[ number ]])"
        ],
        "description": "POPULATION::SET_DEFAULT_POPULATION_DENSITY (0x04EFC113) function."
    },
    "population.set_default_population_type": {
        "prefix": [
            "population.set_default_population_type",
            "set_default_population_type"
        ],
        "body": [
            "population.set_default_population_type(unk0 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_DEFAULT_POPULATION_TYPE (0xD28A3706) function."
    },
    "population.get_rand_actorenum_from_population_native": {
        "prefix": [
            "population.get_rand_actorenum_from_population_native",
            "get_rand_actorenum_from_population_native"
        ],
        "body": [
            "local result --[[ integer ]] = population.get_rand_actorenum_from_population_native(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "POPULATION::GET_RAND_ACTORENUM_FROM_POPULATION_NATIVE (0xD3503922) function."
    },
    "population.make_next_rand_actorenums_unique": {
        "prefix": [
            "population.make_next_rand_actorenums_unique",
            "make_next_rand_actorenums_unique"
        ],
        "body": [
            "population.make_next_rand_actorenums_unique(unk0 --[[ integer ]])"
        ],
        "description": "POPULATION::MAKE_NEXT_RAND_ACTORENUMS_UNIQUE (0x1CE58D42) function."
    },
    "population.is_population_set_ready": {
        "prefix": [
            "population.is_population_set_ready",
            "is_population_set_ready"
        ],
        "body": [
            "local result --[[ integer ]] = population.is_population_set_ready(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "POPULATION::IS_POPULATION_SET_READY (0xFA5EA974) function."
    },
    "population.is_population_set_required_resident": {
        "prefix": [
            "population.is_population_set_required_resident",
            "is_population_set_required_resident"
        ],
        "body": [
            "local result --[[ integer ]] = population.is_population_set_required_resident(unk0 --[[ integer ]])"
        ],
        "description": "POPULATION::IS_POPULATION_SET_REQUIRED_RESIDENT (0x76E416FD) function."
    },
    "population.find_named_population_set": {
        "prefix": [
            "population.find_named_population_set",
            "find_named_population_set"
        ],
        "body": [
            "local result --[[ integer ]] = population.find_named_population_set(unk0 --[[ integer ]])"
        ],
        "description": "POPULATION::FIND_NAMED_POPULATION_SET (0x4646C335) function."
    },
    "population.get_num_actorenums_in_population": {
        "prefix": [
            "population.get_num_actorenums_in_population",
            "get_num_actorenums_in_population"
        ],
        "body": [
            "local result --[[ integer ]] = population.get_num_actorenums_in_population(unk0 --[[ integer ]])"
        ],
        "description": "POPULATION::GET_NUM_ACTORENUMS_IN_POPULATION (0x8FD12F97) function."
    },
    "population.get_actorenum_in_population": {
        "prefix": [
            "population.get_actorenum_in_population",
            "get_actorenum_in_population"
        ],
        "body": [
            "local result --[[ integer ]] = population.get_actorenum_in_population(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::GET_ACTORENUM_IN_POPULATION (0xABEC5676) function."
    },
    "population.get_actorenum_in_population_weight": {
        "prefix": [
            "population.get_actorenum_in_population_weight",
            "get_actorenum_in_population_weight"
        ],
        "body": [
            "local result --[[ integer ]] = population.get_actorenum_in_population_weight(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::GET_ACTORENUM_IN_POPULATION_WEIGHT (0xEDD44891) function."
    },
    "population.marketing_get_ambient_density_level": {
        "prefix": [
            "population.marketing_get_ambient_density_level",
            "marketing_get_ambient_density_level"
        ],
        "body": [
            "local result --[[ integer ]] = population.marketing_get_ambient_density_level()"
        ],
        "description": "POPULATION::MARKETING_GET_AMBIENT_DENSITY_LEVEL (0x72F6EED0) function."
    },
    "population.set_zone_allowed_spawn_ready_too_close": {
        "prefix": [
            "population.set_zone_allowed_spawn_ready_too_close",
            "set_zone_allowed_spawn_ready_too_close"
        ],
        "body": [
            "population.set_zone_allowed_spawn_ready_too_close(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "POPULATION::SET_ZONE_ALLOWED_SPAWN_READY_TOO_CLOSE (0x84FB15FA) function."
    },
    "population.ambient_spawn_prestream_set": {
        "prefix": [
            "population.ambient_spawn_prestream_set",
            "ambient_spawn_prestream_set"
        ],
        "body": [
            "population.ambient_spawn_prestream_set(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "POPULATION::AMBIENT_SPAWN_PRESTREAM_SET (0x687545BF) function."
    },
    "pppelements.wantedfx_set_opacity": {
        "prefix": [
            "pppelements.wantedfx_set_opacity",
            "wantedfx_set_opacity"
        ],
        "body": [
            "pppelements.wantedfx_set_opacity(unk0 --[[ number ]])"
        ],
        "description": "PPPELEMENTS::WANTEDFX_SET_OPACITY (0x598815BD) function."
    },
    "pppelements.fire_bloodsplatfx": {
        "prefix": [
            "pppelements.fire_bloodsplatfx",
            "fire_bloodsplatfx"
        ],
        "body": [
            "pppelements.fire_bloodsplatfx(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "PPPELEMENTS::FIRE_BLOODSPLATFX (0xD1C91A7F) function."
    },
    "pppelements.clear_deathfx": {
        "prefix": [
            "pppelements.clear_deathfx",
            "clear_deathfx"
        ],
        "body": [
            "pppelements.clear_deathfx()"
        ],
        "description": "PPPELEMENTS::CLEAR_DEATHFX (0x7E0CDD87) function."
    },
    "pppelements.binocularsfx_enabled": {
        "prefix": [
            "pppelements.binocularsfx_enabled",
            "binocularsfx_enabled"
        ],
        "body": [
            "pppelements.binocularsfx_enabled(unk0 --[[ integer ]])"
        ],
        "description": "PPPELEMENTS::BINOCULARSFX_ENABLED (0xE6C1DBD9) function."
    },
    "pppelements.binocularsfx_isloaded": {
        "prefix": [
            "pppelements.binocularsfx_isloaded",
            "binocularsfx_isloaded"
        ],
        "body": [
            "local result --[[ boolean ]] = pppelements.binocularsfx_isloaded()"
        ],
        "description": "PPPELEMENTS::BINOCULARSFX_ISLOADED (0x00EF33EF) function."
    },
    "pppelements.zombiemode_enabled": {
        "prefix": [
            "pppelements.zombiemode_enabled",
            "zombiemode_enabled"
        ],
        "body": [
            "pppelements.zombiemode_enabled(enable --[[ boolean ]])"
        ],
        "description": "PPPELEMENTS::ZOMBIEMODE_ENABLED (0xDF505043) function."
    },
    "pppelements.texturefx_set_opacity": {
        "prefix": [
            "pppelements.texturefx_set_opacity",
            "texturefx_set_opacity"
        ],
        "body": [
            "pppelements.texturefx_set_opacity(unk0 --[[ integer ]])"
        ],
        "description": "PPPELEMENTS::TEXTUREFX_SET_OPACITY (0xE613AE52) function."
    },
    "pppelements.texturefx_set_position": {
        "prefix": [
            "pppelements.texturefx_set_position",
            "texturefx_set_position"
        ],
        "body": [
            "pppelements.texturefx_set_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PPPELEMENTS::TEXTUREFX_SET_POSITION (0x84F3DD81) function."
    },
    "pppelements.texturefx_enabled": {
        "prefix": [
            "pppelements.texturefx_enabled",
            "texturefx_enabled"
        ],
        "body": [
            "pppelements.texturefx_enabled(unk0 --[[ integer ]])"
        ],
        "description": "PPPELEMENTS::TEXTUREFX_ENABLED (0xF55B50ED) function."
    },
    "pppelements.texturefx_set_name": {
        "prefix": [
            "pppelements.texturefx_set_name",
            "texturefx_set_name"
        ],
        "body": [
            "pppelements.texturefx_set_name(unk0 --[[ integer ]])"
        ],
        "description": "PPPELEMENTS::TEXTUREFX_SET_NAME (0x6336182D) function."
    },
    "pppelements.texturefx_set_scale": {
        "prefix": [
            "pppelements.texturefx_set_scale",
            "texturefx_set_scale"
        ],
        "body": [
            "pppelements.texturefx_set_scale(unk0 --[[ integer ]])"
        ],
        "description": "PPPELEMENTS::TEXTUREFX_SET_SCALE (0x3A6960B2) function."
    },
    "probe.rotate_object_upright_to_ground": {
        "prefix": [
            "probe.rotate_object_upright_to_ground",
            "rotate_object_upright_to_ground"
        ],
        "body": [
            "local result --[[ integer ]] = probe.rotate_object_upright_to_ground(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "PROBE::ROTATE_OBJECT_UPRIGHT_TO_GROUND (0x7080E24A) function."
    },
    "probe.visible_rects_boolean": {
        "prefix": [
            "probe.visible_rects_boolean",
            "visible_rects_boolean"
        ],
        "body": [
            "probe.visible_rects_boolean(unk0 --[[ integer ]])"
        ],
        "description": "PROBE::VISIBLE_RECTS_BOOLEAN (0x1D7845B7) function."
    },
    "prop.get_physinst_from_object": {
        "prefix": [
            "prop.get_physinst_from_object",
            "get_physinst_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = prop.get_physinst_from_object(unk0 --[[ integer ]])"
        ],
        "description": "PROP::GET_PHYSINST_FROM_OBJECT (0xDB70DF0C) function."
    },
    "prop.get_new_physinst_in_sphere": {
        "prefix": [
            "prop.get_new_physinst_in_sphere",
            "get_new_physinst_in_sphere"
        ],
        "body": [
            "local result --[[ integer ]] = prop.get_new_physinst_in_sphere(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "PROP::GET_NEW_PHYSINST_IN_SPHERE (0x6517FF1B) function."
    },
    "prop.is_prop_fixed": {
        "prefix": [
            "prop.is_prop_fixed",
            "is_prop_fixed"
        ],
        "body": [
            "local result --[[ integer ]] = prop.is_prop_fixed(unk0 --[[ integer ]])"
        ],
        "description": "PROP::IS_PROP_FIXED (0xBD2FFD8C) function."
    },
    "prop.set_prop_fixed": {
        "prefix": [
            "prop.set_prop_fixed",
            "set_prop_fixed"
        ],
        "body": [
            "prop.set_prop_fixed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::SET_PROP_FIXED (0x7DBB277A) function."
    },
    "prop.get_center_of_gravity": {
        "prefix": [
            "prop.get_center_of_gravity",
            "get_center_of_gravity"
        ],
        "body": [
            "local result --[[ integer ]] = prop.get_center_of_gravity(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::GET_CENTER_OF_GRAVITY (0x31940E4C) function."
    },
    "prop.has_prop_been_damaged": {
        "prefix": [
            "prop.has_prop_been_damaged",
            "has_prop_been_damaged"
        ],
        "body": [
            "local result --[[ integer ]] = prop.has_prop_been_damaged(unk0 --[[ integer ]])"
        ],
        "description": "PROP::HAS_PROP_BEEN_DAMAGED (0x7151E7F0) function."
    },
    "prop.set_prop_health": {
        "prefix": [
            "prop.set_prop_health",
            "set_prop_health"
        ],
        "body": [
            "prop.set_prop_health(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::SET_PROP_HEALTH (0xC6D12FF5) function."
    },
    "prop.reset_props_in_world": {
        "prefix": [
            "prop.reset_props_in_world",
            "reset_props_in_world"
        ],
        "body": [
            "prop.reset_props_in_world()"
        ],
        "description": "PROP::RESET_PROPS_IN_WORLD (0xB3E331AC) function."
    },
    "prop.reset_props_in_volume": {
        "prefix": [
            "prop.reset_props_in_volume",
            "reset_props_in_volume"
        ],
        "body": [
            "prop.reset_props_in_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::RESET_PROPS_IN_VOLUME (0xCF1B9B11) function."
    },
    "prop.reset_prop": {
        "prefix": [
            "prop.reset_prop",
            "reset_prop"
        ],
        "body": [
            "prop.reset_prop(unk0 --[[ integer ]])"
        ],
        "description": "PROP::RESET_PROP (0x5E7A7E9B) function."
    },
    "prop.set_prop_targetable": {
        "prefix": [
            "prop.set_prop_targetable",
            "set_prop_targetable"
        ],
        "body": [
            "prop.set_prop_targetable(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "PROP::SET_PROP_TARGETABLE (0x32C810BF) function."
    },
    "prop.set_prop_targetable_acquisition_radius": {
        "prefix": [
            "prop.set_prop_targetable_acquisition_radius",
            "set_prop_targetable_acquisition_radius"
        ],
        "body": [
            "prop.set_prop_targetable_acquisition_radius(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::SET_PROP_TARGETABLE_ACQUISITION_RADIUS (0xE84EB2D5) function."
    },
    "prop.set_prop_targetable_target_box_size": {
        "prefix": [
            "prop.set_prop_targetable_target_box_size",
            "set_prop_targetable_target_box_size"
        ],
        "body": [
            "prop.set_prop_targetable_target_box_size(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "PROP::SET_PROP_TARGETABLE_TARGET_BOX_SIZE (0x6A937CBB) function."
    },
    "prop.set_prop_targetable_score_bias": {
        "prefix": [
            "prop.set_prop_targetable_score_bias",
            "set_prop_targetable_score_bias"
        ],
        "body": [
            "prop.set_prop_targetable_score_bias(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::SET_PROP_TARGETABLE_SCORE_BIAS (0x0E2B0212) function."
    },
    "prop.set_prop_targetable_as_enemy": {
        "prefix": [
            "prop.set_prop_targetable_as_enemy",
            "set_prop_targetable_as_enemy"
        ],
        "body": [
            "prop.set_prop_targetable_as_enemy(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::SET_PROP_TARGETABLE_AS_ENEMY (0x5895EBBE) function."
    },
    "prop.is_prop_streamed_in": {
        "prefix": [
            "prop.is_prop_streamed_in",
            "is_prop_streamed_in"
        ],
        "body": [
            "local result --[[ integer ]] = prop.is_prop_streamed_in(unk0 --[[ integer ]])"
        ],
        "description": "PROP::IS_PROP_STREAMED_IN (0x5131AEF1) function."
    },
    "prop.grave_set_dug_up": {
        "prefix": [
            "prop.grave_set_dug_up",
            "grave_set_dug_up"
        ],
        "body": [
            "prop.grave_set_dug_up(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::GRAVE_SET_DUG_UP (0x674156BB) function."
    },
    "prop.get_grave_from_object": {
        "prefix": [
            "prop.get_grave_from_object",
            "get_grave_from_object"
        ],
        "body": [
            "local result --[[ integer ]] = prop.get_grave_from_object(unk0 --[[ integer ]])"
        ],
        "description": "PROP::GET_GRAVE_FROM_OBJECT (0xA90E602F) function."
    },
    "prop.play_simple_prop_animation": {
        "prefix": [
            "prop.play_simple_prop_animation",
            "play_simple_prop_animation"
        ],
        "body": [
            "local result --[[ integer ]] = prop.play_simple_prop_animation(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "PROP::PLAY_SIMPLE_PROP_ANIMATION (0xDC3FBAE6) function."
    },
    "prop.set_draw_object": {
        "prefix": [
            "prop.set_draw_object",
            "set_draw_object"
        ],
        "body": [
            "prop.set_draw_object(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::SET_DRAW_OBJECT (0xC5A886DC) function."
    },
    "prop.prop_is_variable_mesh_enabled": {
        "prefix": [
            "prop.prop_is_variable_mesh_enabled",
            "prop_is_variable_mesh_enabled"
        ],
        "body": [
            "local result --[[ integer ]] = prop.prop_is_variable_mesh_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::PROP_IS_VARIABLE_MESH_ENABLED (0x375A33F0) function."
    },
    "prop.prop_enable_variable_mesh": {
        "prefix": [
            "prop.prop_enable_variable_mesh",
            "prop_enable_variable_mesh"
        ],
        "body": [
            "local result --[[ integer ]] = prop.prop_enable_variable_mesh(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "PROP::PROP_ENABLE_VARIABLE_MESH (0x8287F8B3) function."
    },
    "prop.set_prop_remap": {
        "prefix": [
            "prop.set_prop_remap",
            "set_prop_remap"
        ],
        "body": [
            "local result --[[ integer ]] = prop.set_prop_remap(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "PROP::SET_PROP_REMAP (0x4BCFADB1) function."
    },
    "render.rendering_enable_character_clipping": {
        "prefix": [
            "render.rendering_enable_character_clipping",
            "rendering_enable_character_clipping"
        ],
        "body": [
            "render.rendering_enable_character_clipping(unk0 --[[ integer ]])"
        ],
        "description": "RENDER::RENDERING_ENABLE_CHARACTER_CLIPPING (0x6AF07F86) function."
    },
    "render.print_frame_time": {
        "prefix": [
            "render.print_frame_time",
            "print_frame_time"
        ],
        "body": [
            "render.print_frame_time(unk0 --[[ integer ]])"
        ],
        "description": "RENDER::PRINT_FRAME_TIME (0xB84DE79E) function."
    },
    "render.set_maximum_spotlight_cascade_count": {
        "prefix": [
            "render.set_maximum_spotlight_cascade_count",
            "set_maximum_spotlight_cascade_count"
        ],
        "body": [
            "render.set_maximum_spotlight_cascade_count(maxcascadecount --[[ integer ]])"
        ],
        "description": "RENDER::SET_MAXIMUM_SPOTLIGHT_CASCADE_COUNT (0x09D4CDEF) function."
    },
    "riding.set_most_recent_mount": {
        "prefix": [
            "riding.set_most_recent_mount",
            "set_most_recent_mount"
        ],
        "body": [
            "riding.set_most_recent_mount(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "RIDING::SET_MOST_RECENT_MOUNT (0x00AF2CB0) function."
    },
    "riding.get_most_recent_mount": {
        "prefix": [
            "riding.get_most_recent_mount",
            "get_most_recent_mount"
        ],
        "body": [
            "local result --[[ integer ]] = riding.get_most_recent_mount(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::GET_MOST_RECENT_MOUNT (0x708E450F) function."
    },
    "riding.get_most_recent_rider": {
        "prefix": [
            "riding.get_most_recent_rider",
            "get_most_recent_rider"
        ],
        "body": [
            "local result --[[ integer ]] = riding.get_most_recent_rider(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::GET_MOST_RECENT_RIDER (0x668E55C3) function."
    },
    "riding.is_actor_horse": {
        "prefix": [
            "riding.is_actor_horse",
            "is_actor_horse"
        ],
        "body": [
            "local result --[[ integer ]] = riding.is_actor_horse(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::IS_ACTOR_HORSE (0xDB0D0478) function."
    },
    "riding.is_actor_mule": {
        "prefix": [
            "riding.is_actor_mule",
            "is_actor_mule"
        ],
        "body": [
            "local result --[[ integer ]] = riding.is_actor_mule(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::IS_ACTOR_MULE (0x1F739295) function."
    },
    "riding.is_actor_riding": {
        "prefix": [
            "riding.is_actor_riding",
            "is_actor_riding"
        ],
        "body": [
            "local result --[[ boolean ]] = riding.is_actor_riding(actor --[[ integer ]])"
        ],
        "description": "RIDING::IS_ACTOR_RIDING (0xA6BBE769) function."
    },
    "riding.is_actor_riding_and_in_saddle": {
        "prefix": [
            "riding.is_actor_riding_and_in_saddle",
            "is_actor_riding_and_in_saddle"
        ],
        "body": [
            "local result --[[ integer ]] = riding.is_actor_riding_and_in_saddle(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::IS_ACTOR_RIDING_AND_IN_SADDLE (0xF270EAC1) function."
    },
    "riding.is_actor_mounted": {
        "prefix": [
            "riding.is_actor_mounted",
            "is_actor_mounted"
        ],
        "body": [
            "local result --[[ integer ]] = riding.is_actor_mounted(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::IS_ACTOR_MOUNTED (0xA3AB3708) function."
    },
    "riding.get_rider": {
        "prefix": [
            "riding.get_rider",
            "get_rider"
        ],
        "body": [
            "local result --[[ integer ]] = riding.get_rider(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::GET_RIDER (0x88A283E5) function."
    },
    "riding.get_mount": {
        "prefix": [
            "riding.get_mount",
            "get_mount"
        ],
        "body": [
            "local result --[[ integer ]] = riding.get_mount(actor --[[ integer ]])"
        ],
        "description": "RIDING::GET_MOUNT (0xDD31EC4E) function."
    },
    "riding.set_mounts_as_passenger": {
        "prefix": [
            "riding.set_mounts_as_passenger",
            "set_mounts_as_passenger"
        ],
        "body": [
            "riding.set_mounts_as_passenger(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "RIDING::SET_MOUNTS_AS_PASSENGER (0xDC6DEE92) function."
    },
    "riding.actor_mount_actor": {
        "prefix": [
            "riding.actor_mount_actor",
            "actor_mount_actor"
        ],
        "body": [
            "local result --[[ integer ]] = riding.actor_mount_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "RIDING::ACTOR_MOUNT_ACTOR (0xC28242F4) function."
    },
    "riding.does_horse_have_accessory": {
        "prefix": [
            "riding.does_horse_have_accessory",
            "does_horse_have_accessory"
        ],
        "body": [
            "local result --[[ integer ]] = riding.does_horse_have_accessory(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "RIDING::DOES_HORSE_HAVE_ACCESSORY (0x75D4E33F) function."
    },
    "riding.accessorize_horse": {
        "prefix": [
            "riding.accessorize_horse",
            "accessorize_horse"
        ],
        "body": [
            "local result --[[ integer ]] = riding.accessorize_horse(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "RIDING::ACCESSORIZE_HORSE (0x6C939AA7) function."
    },
    "riding.horse_add_repulsion_exclusion_volume": {
        "prefix": [
            "riding.horse_add_repulsion_exclusion_volume",
            "horse_add_repulsion_exclusion_volume"
        ],
        "body": [
            "local result --[[ integer ]] = riding.horse_add_repulsion_exclusion_volume(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::HORSE_ADD_REPULSION_EXCLUSION_VOLUME (0x28FCBDF2) function."
    },
    "riding.horse_remove_repulsion_exclusion_volume": {
        "prefix": [
            "riding.horse_remove_repulsion_exclusion_volume",
            "horse_remove_repulsion_exclusion_volume"
        ],
        "body": [
            "local result --[[ integer ]] = riding.horse_remove_repulsion_exclusion_volume(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::HORSE_REMOVE_REPULSION_EXCLUSION_VOLUME (0x5DE07F18) function."
    },
    "riding.horse_set_curr_freshness": {
        "prefix": [
            "riding.horse_set_curr_freshness",
            "horse_set_curr_freshness"
        ],
        "body": [
            "riding.horse_set_curr_freshness(actor --[[ integer ]], value --[[ number ]])"
        ],
        "description": "RIDING::HORSE_SET_CURR_FRESHNESS (0xF3976D70) function."
    },
    "riding.horse_get_curr_freshness": {
        "prefix": [
            "riding.horse_get_curr_freshness",
            "horse_get_curr_freshness"
        ],
        "body": [
            "local result --[[ number ]] = riding.horse_get_curr_freshness(actor --[[ integer ]])"
        ],
        "description": "RIDING::HORSE_GET_CURR_FRESHNESS (0xB8665D8A) function."
    },
    "riding.horse_lock_freshness": {
        "prefix": [
            "riding.horse_lock_freshness",
            "horse_lock_freshness"
        ],
        "body": [
            "local result --[[ integer ]] = riding.horse_lock_freshness(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::HORSE_LOCK_FRESHNESS (0x8754817D) function."
    },
    "riding.horse_unlock_freshness": {
        "prefix": [
            "riding.horse_unlock_freshness",
            "horse_unlock_freshness"
        ],
        "body": [
            "local result --[[ integer ]] = riding.horse_unlock_freshness(unk0 --[[ integer ]])"
        ],
        "description": "RIDING::HORSE_UNLOCK_FRESHNESS (0x6AFA044B) function."
    },
    "riding.horse_set_infinite_freshness_cheat": {
        "prefix": [
            "riding.horse_set_infinite_freshness_cheat",
            "horse_set_infinite_freshness_cheat"
        ],
        "body": [
            "riding.horse_set_infinite_freshness_cheat(toggle --[[ boolean ]])"
        ],
        "description": "RIDING::HORSE_SET_INFINITE_FRESHNESS_CHEAT (0xB731EB45) function."
    },
    "shop.shop_clear": {
        "prefix": [
            "shop.shop_clear",
            "shop_clear"
        ],
        "body": [
            "shop.shop_clear()"
        ],
        "description": "SHOP::SHOP_CLEAR (0xCEBD595A) function."
    },
    "shop.shop_refresh": {
        "prefix": [
            "shop.shop_refresh",
            "shop_refresh"
        ],
        "body": [
            "shop.shop_refresh(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_REFRESH (0xE7F6AA5D) function."
    },
    "shop.shop_set_player_bank": {
        "prefix": [
            "shop.shop_set_player_bank",
            "shop_set_player_bank"
        ],
        "body": [
            "shop.shop_set_player_bank(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_SET_PLAYER_BANK (0xB75FAD6A) function."
    },
    "shop.shop_add_item": {
        "prefix": [
            "shop.shop_add_item",
            "shop_add_item"
        ],
        "body": [
            "local result --[[ integer ]] = shop.shop_add_item(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_ADD_ITEM (0x2FCD8CCA) function."
    },
    "shop.shop_set_item_quantity": {
        "prefix": [
            "shop.shop_set_item_quantity",
            "shop_set_item_quantity"
        ],
        "body": [
            "shop.shop_set_item_quantity(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_SET_ITEM_QUANTITY (0x777CF9FA) function."
    },
    "shop.shop_get_item_quantity": {
        "prefix": [
            "shop.shop_get_item_quantity",
            "shop_get_item_quantity"
        ],
        "body": [
            "local result --[[ integer ]] = shop.shop_get_item_quantity(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_GET_ITEM_QUANTITY (0xFAF37414) function."
    },
    "shop.shop_set_item_purchase_price": {
        "prefix": [
            "shop.shop_set_item_purchase_price",
            "shop_set_item_purchase_price"
        ],
        "body": [
            "shop.shop_set_item_purchase_price(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_SET_ITEM_PURCHASE_PRICE (0xA40EFFFF) function."
    },
    "shop.shop_get_item_purchase_price": {
        "prefix": [
            "shop.shop_get_item_purchase_price",
            "shop_get_item_purchase_price"
        ],
        "body": [
            "local result --[[ integer ]] = shop.shop_get_item_purchase_price(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_GET_ITEM_PURCHASE_PRICE (0x94D8F49E) function."
    },
    "shop.shop_get_item_sell_price": {
        "prefix": [
            "shop.shop_get_item_sell_price",
            "shop_get_item_sell_price"
        ],
        "body": [
            "local result --[[ integer ]] = shop.shop_get_item_sell_price(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_GET_ITEM_SELL_PRICE (0x42CBA241) function."
    },
    "shop.shop_set_item_blocked": {
        "prefix": [
            "shop.shop_set_item_blocked",
            "shop_set_item_blocked"
        ],
        "body": [
            "shop.shop_set_item_blocked(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_SET_ITEM_BLOCKED (0x7A34C33D) function."
    },
    "shop.shop_is_item_blocked": {
        "prefix": [
            "shop.shop_is_item_blocked",
            "shop_is_item_blocked"
        ],
        "body": [
            "local result --[[ integer ]] = shop.shop_is_item_blocked(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_IS_ITEM_BLOCKED (0xB954DE78) function."
    },
    "shop.shop_get_item_misc_flag": {
        "prefix": [
            "shop.shop_get_item_misc_flag",
            "shop_get_item_misc_flag"
        ],
        "body": [
            "local result --[[ integer ]] = shop.shop_get_item_misc_flag(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_GET_ITEM_MISC_FLAG (0x1BF8FD6D) function."
    },
    "shop.shop_is_sell_selected": {
        "prefix": [
            "shop.shop_is_sell_selected",
            "shop_is_sell_selected"
        ],
        "body": [
            "local result --[[ integer ]] = shop.shop_is_sell_selected()"
        ],
        "description": "SHOP::SHOP_IS_SELL_SELECTED (0x5A12BB48) function."
    },
    "shop.shop_set_current_tab": {
        "prefix": [
            "shop.shop_set_current_tab",
            "shop_set_current_tab"
        ],
        "body": [
            "shop.shop_set_current_tab(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_SET_CURRENT_TAB (0x3601E3E2) function."
    },
    "shop.shop_lock_input": {
        "prefix": [
            "shop.shop_lock_input",
            "shop_lock_input"
        ],
        "body": [
            "shop.shop_lock_input(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SHOP_LOCK_INPUT (0xB84DE662) function."
    },
    "shop.satchel_set_enabled": {
        "prefix": [
            "shop.satchel_set_enabled",
            "satchel_set_enabled"
        ],
        "body": [
            "shop.satchel_set_enabled(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SATCHEL_SET_ENABLED (0x2692B771) function."
    },
    "shop.satchel_toggle_no_pause_outfit": {
        "prefix": [
            "shop.satchel_toggle_no_pause_outfit",
            "satchel_toggle_no_pause_outfit"
        ],
        "body": [
            "shop.satchel_toggle_no_pause_outfit(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SATCHEL_TOGGLE_NO_PAUSE_OUTFIT (0xEB046CD9) function."
    },
    "shop.satchel_create_outfit": {
        "prefix": [
            "shop.satchel_create_outfit",
            "satchel_create_outfit"
        ],
        "body": [
            "local result --[[ integer ]] = shop.satchel_create_outfit(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SHOP::SATCHEL_CREATE_OUTFIT (0x427F4D58) function."
    },
    "shop.satchel_set_outfit_state": {
        "prefix": [
            "shop.satchel_set_outfit_state",
            "satchel_set_outfit_state"
        ],
        "body": [
            "shop.satchel_set_outfit_state(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SHOP::SATCHEL_SET_OUTFIT_STATE (0x0A87A573) function."
    },
    "shop.satchel_get_outfit_state": {
        "prefix": [
            "shop.satchel_get_outfit_state",
            "satchel_get_outfit_state"
        ],
        "body": [
            "local result --[[ integer ]] = shop.satchel_get_outfit_state(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SATCHEL_GET_OUTFIT_STATE (0x25EF49AD) function."
    },
    "shop.satchel_set_outfit_texture": {
        "prefix": [
            "shop.satchel_set_outfit_texture",
            "satchel_set_outfit_texture"
        ],
        "body": [
            "shop.satchel_set_outfit_texture(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SHOP::SATCHEL_SET_OUTFIT_TEXTURE (0x23EB81F0) function."
    },
    "shop.satchel_allow_outfit_change": {
        "prefix": [
            "shop.satchel_allow_outfit_change",
            "satchel_allow_outfit_change"
        ],
        "body": [
            "shop.satchel_allow_outfit_change(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SATCHEL_ALLOW_OUTFIT_CHANGE (0x58018D83) function."
    },
    "shop.satchel_set_current_outfit": {
        "prefix": [
            "shop.satchel_set_current_outfit",
            "satchel_set_current_outfit"
        ],
        "body": [
            "shop.satchel_set_current_outfit(unk0 --[[ integer ]])"
        ],
        "description": "SHOP::SATCHEL_SET_CURRENT_OUTFIT (0x1C462085) function."
    },
    "socialclub.ui_challenge_create": {
        "prefix": [
            "socialclub.ui_challenge_create",
            "ui_challenge_create"
        ],
        "body": [
            "socialclub.ui_challenge_create(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_CREATE (0x1EB9AF29) function."
    },
    "socialclub.ui_challenge_set_description": {
        "prefix": [
            "socialclub.ui_challenge_set_description",
            "ui_challenge_set_description"
        ],
        "body": [
            "socialclub.ui_challenge_set_description(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_DESCRIPTION (0x2A39FD8A) function."
    },
    "socialclub.ui_challenge_set_title_texture": {
        "prefix": [
            "socialclub.ui_challenge_set_title_texture",
            "ui_challenge_set_title_texture"
        ],
        "body": [
            "socialclub.ui_challenge_set_title_texture(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_TITLE_TEXTURE (0xD5ED5FCB) function."
    },
    "socialclub.ui_challenge_set_progress": {
        "prefix": [
            "socialclub.ui_challenge_set_progress",
            "ui_challenge_set_progress"
        ],
        "body": [
            "socialclub.ui_challenge_set_progress(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_PROGRESS (0x10F5386D) function."
    },
    "socialclub.ui_challenge_set_progress_detail": {
        "prefix": [
            "socialclub.ui_challenge_set_progress_detail",
            "ui_challenge_set_progress_detail"
        ],
        "body": [
            "socialclub.ui_challenge_set_progress_detail(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_PROGRESS_DETAIL (0x9D9CDCE3) function."
    },
    "socialclub.ui_challenge_set_trophy_type": {
        "prefix": [
            "socialclub.ui_challenge_set_trophy_type",
            "ui_challenge_set_trophy_type"
        ],
        "body": [
            "socialclub.ui_challenge_set_trophy_type(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_TROPHY_TYPE (0x3731AC9F) function."
    },
    "socialclub.ui_challenge_set_objective": {
        "prefix": [
            "socialclub.ui_challenge_set_objective",
            "ui_challenge_set_objective"
        ],
        "body": [
            "socialclub.ui_challenge_set_objective(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_OBJECTIVE (0x9CF5C747) function."
    },
    "socialclub.ui_challenge_set_objective_style": {
        "prefix": [
            "socialclub.ui_challenge_set_objective_style",
            "ui_challenge_set_objective_style"
        ],
        "body": [
            "socialclub.ui_challenge_set_objective_style(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_OBJECTIVE_STYLE (0x4A598723) function."
    },
    "socialclub.ui_challenge_set_objective_style_b": {
        "prefix": [
            "socialclub.ui_challenge_set_objective_style_b",
            "ui_challenge_set_objective_style_b"
        ],
        "body": [
            "socialclub.ui_challenge_set_objective_style_b(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_OBJECTIVE_STYLE_B (0x9272926C) function."
    },
    "socialclub.ui_challenge_set_column_header": {
        "prefix": [
            "socialclub.ui_challenge_set_column_header",
            "ui_challenge_set_column_header"
        ],
        "body": [
            "socialclub.ui_challenge_set_column_header(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_COLUMN_HEADER (0xAFC9071D) function."
    },
    "socialclub.ui_challenge_set_time_header": {
        "prefix": [
            "socialclub.ui_challenge_set_time_header",
            "ui_challenge_set_time_header"
        ],
        "body": [
            "socialclub.ui_challenge_set_time_header(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_TIME_HEADER (0x761A6750) function."
    },
    "socialclub.ui_challenge_set_time_info": {
        "prefix": [
            "socialclub.ui_challenge_set_time_info",
            "ui_challenge_set_time_info"
        ],
        "body": [
            "socialclub.ui_challenge_set_time_info(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_SET_TIME_INFO (0xC201524D) function."
    },
    "socialclub.ui_challenge_make_current": {
        "prefix": [
            "socialclub.ui_challenge_make_current",
            "ui_challenge_make_current"
        ],
        "body": [
            "socialclub.ui_challenge_make_current(unk0 --[[ integer ]])"
        ],
        "description": "SOCIALCLUB::UI_CHALLENGE_MAKE_CURRENT (0x04A3022E) function."
    },
    "speech.can_actor_enum_play_speech_context": {
        "prefix": [
            "speech.can_actor_enum_play_speech_context",
            "can_actor_enum_play_speech_context"
        ],
        "body": [
            "local result --[[ integer ]] = speech.can_actor_enum_play_speech_context(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SPEECH::CAN_ACTOR_ENUM_PLAY_SPEECH_CONTEXT (0xD02757C1) function."
    },
    "speech.register_actor_speech_context": {
        "prefix": [
            "speech.register_actor_speech_context",
            "register_actor_speech_context"
        ],
        "body": [
            "speech.register_actor_speech_context(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "SPEECH::REGISTER_ACTOR_SPEECH_CONTEXT (0x886E06C2) function."
    },
    "speech.finish_registering_actor_speech_contexts": {
        "prefix": [
            "speech.finish_registering_actor_speech_contexts",
            "finish_registering_actor_speech_contexts"
        ],
        "body": [
            "speech.finish_registering_actor_speech_contexts()"
        ],
        "description": "SPEECH::FINISH_REGISTERING_ACTOR_SPEECH_CONTEXTS (0xB6839756) function."
    },
    "speech.register_num_speech_contexts": {
        "prefix": [
            "speech.register_num_speech_contexts",
            "register_num_speech_contexts"
        ],
        "body": [
            "speech.register_num_speech_contexts(unk0 --[[ integer ]])"
        ],
        "description": "SPEECH::REGISTER_NUM_SPEECH_CONTEXTS (0xCB139D15) function."
    },
    "speech.register_num_context_types": {
        "prefix": [
            "speech.register_num_context_types",
            "register_num_context_types"
        ],
        "body": [
            "speech.register_num_context_types(unk0 --[[ integer ]])"
        ],
        "description": "SPEECH::REGISTER_NUM_CONTEXT_TYPES (0xF07F5E41) function."
    },
    "squads.squad_get": {
        "prefix": [
            "squads.squad_get",
            "squad_get"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_get(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GET (0xB3732081) function."
    },
    "squads.squad_is_valid": {
        "prefix": [
            "squads.squad_is_valid",
            "squad_is_valid"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_is_valid(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_IS_VALID (0xBDB3061E) function."
    },
    "squads.squad_join": {
        "prefix": [
            "squads.squad_join",
            "squad_join"
        ],
        "body": [
            "squads.squad_join(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_JOIN (0xB14302C8) function."
    },
    "squads.squad_leave": {
        "prefix": [
            "squads.squad_leave",
            "squad_leave"
        ],
        "body": [
            "squads.squad_leave(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_LEAVE (0x077591FF) function."
    },
    "squads.squad_make_empty": {
        "prefix": [
            "squads.squad_make_empty",
            "squad_make_empty"
        ],
        "body": [
            "squads.squad_make_empty(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_MAKE_EMPTY (0x90D92CF1) function."
    },
    "squads.squads_merge": {
        "prefix": [
            "squads.squads_merge",
            "squads_merge"
        ],
        "body": [
            "squads.squads_merge(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUADS_MERGE (0x320E2604) function."
    },
    "squads.squad_get_actor_by_index": {
        "prefix": [
            "squads.squad_get_actor_by_index",
            "squad_get_actor_by_index"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_get_actor_by_index(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GET_ACTOR_BY_INDEX (0x5126039A) function."
    },
    "squads.squad_get_size": {
        "prefix": [
            "squads.squad_get_size",
            "squad_get_size"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_get_size(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GET_SIZE (0xEEC83187) function."
    },
    "squads.squad_compute_centroid": {
        "prefix": [
            "squads.squad_compute_centroid",
            "squad_compute_centroid"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_compute_centroid(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_COMPUTE_CENTROID (0x142D9F3A) function."
    },
    "squads.squad_set_faction": {
        "prefix": [
            "squads.squad_set_faction",
            "squad_set_faction"
        ],
        "body": [
            "squads.squad_set_faction(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_SET_FACTION (0xAEA4E9AE) function."
    },
    "squads.squad_goal_add_battle_allies": {
        "prefix": [
            "squads.squad_goal_add_battle_allies",
            "squad_goal_add_battle_allies"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_battle_allies(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_BATTLE_ALLIES (0x65888454) function."
    },
    "squads.squad_goal_add_battle_defend_volume": {
        "prefix": [
            "squads.squad_goal_add_battle_defend_volume",
            "squad_goal_add_battle_defend_volume"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_battle_defend_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_BATTLE_DEFEND_VOLUME (0xD52A28F0) function."
    },
    "squads.squad_goal_add_combat": {
        "prefix": [
            "squads.squad_goal_add_combat",
            "squad_goal_add_combat"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_combat(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_COMBAT (0x4DD06256) function."
    },
    "squads.squad_goal_add_faction_status_within_goal": {
        "prefix": [
            "squads.squad_goal_add_faction_status_within_goal",
            "squad_goal_add_faction_status_within_goal"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_faction_status_within_goal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_FACTION_STATUS_WITHIN_GOAL (0xA4BC2A1B) function."
    },
    "squads.squad_goal_add_follow_traffic_curve": {
        "prefix": [
            "squads.squad_goal_add_follow_traffic_curve",
            "squad_goal_add_follow_traffic_curve"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_follow_traffic_curve(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_FOLLOW_TRAFFIC_CURVE (0xE77B9FC0) function."
    },
    "squads.squad_goal_add_general_task": {
        "prefix": [
            "squads.squad_goal_add_general_task",
            "squad_goal_add_general_task"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_general_task(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_GENERAL_TASK (0x83D78A49) function."
    },
    "squads.squad_goal_add_meet_at_position": {
        "prefix": [
            "squads.squad_goal_add_meet_at_position",
            "squad_goal_add_meet_at_position"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_meet_at_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_MEET_AT_POSITION (0xA2AE53BD) function."
    },
    "squads.squad_goal_add_restrict_investigation_distance_from_squad": {
        "prefix": [
            "squads.squad_goal_add_restrict_investigation_distance_from_squad",
            "squad_goal_add_restrict_investigation_distance_from_squad"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_restrict_investigation_distance_from_squad(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_RESTRICT_INVESTIGATION_DISTANCE_FROM_SQUAD (0x35051831) function."
    },
    "squads.squad_goal_add_share_perception": {
        "prefix": [
            "squads.squad_goal_add_share_perception",
            "squad_goal_add_share_perception"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_share_perception(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_SHARE_PERCEPTION (0x435A982F) function."
    },
    "squads.squad_goal_add_stay_outside_of_volume": {
        "prefix": [
            "squads.squad_goal_add_stay_outside_of_volume",
            "squad_goal_add_stay_outside_of_volume"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_stay_outside_of_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_STAY_OUTSIDE_OF_VOLUME (0x5F4DEC49) function."
    },
    "squads.squad_goal_add_stay_within_volume": {
        "prefix": [
            "squads.squad_goal_add_stay_within_volume",
            "squad_goal_add_stay_within_volume"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_stay_within_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_STAY_WITHIN_VOLUME (0xE775EF0D) function."
    },
    "squads.squad_goal_add_animal_herd": {
        "prefix": [
            "squads.squad_goal_add_animal_herd",
            "squad_goal_add_animal_herd"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_add_animal_herd(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_ADD_ANIMAL_HERD (0x48588CCB) function."
    },
    "squads.squad_goal_get_status": {
        "prefix": [
            "squads.squad_goal_get_status",
            "squad_goal_get_status"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_get_status(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_GET_STATUS (0xC6AF3662) function."
    },
    "squads.squad_goal_is_valid": {
        "prefix": [
            "squads.squad_goal_is_valid",
            "squad_goal_is_valid"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_is_valid(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_IS_VALID (0xFAD7A113) function."
    },
    "squads.squad_goals_clear": {
        "prefix": [
            "squads.squad_goals_clear",
            "squad_goals_clear"
        ],
        "body": [
            "squads.squad_goals_clear(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOALS_CLEAR (0xCA950EF0) function."
    },
    "squads.squad_is_goal_controlling_actor": {
        "prefix": [
            "squads.squad_is_goal_controlling_actor",
            "squad_is_goal_controlling_actor"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_is_goal_controlling_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_IS_GOAL_CONTROLLING_ACTOR (0x817AC6D6) function."
    },
    "squads.squad_get_single_actor_controlled_by_goal": {
        "prefix": [
            "squads.squad_get_single_actor_controlled_by_goal",
            "squad_get_single_actor_controlled_by_goal"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_get_single_actor_controlled_by_goal(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GET_SINGLE_ACTOR_CONTROLLED_BY_GOAL (0xF37E8A9E) function."
    },
    "squads.squad_goal_link_modifier_to_other_goal": {
        "prefix": [
            "squads.squad_goal_link_modifier_to_other_goal",
            "squad_goal_link_modifier_to_other_goal"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_goal_link_modifier_to_other_goal(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GOAL_LINK_MODIFIER_TO_OTHER_GOAL (0x1B74CCA1) function."
    },
    "squads.squad_flock_set_external_movement_tuning": {
        "prefix": [
            "squads.squad_flock_set_external_movement_tuning",
            "squad_flock_set_external_movement_tuning"
        ],
        "body": [
            "squads.squad_flock_set_external_movement_tuning(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FLOCK_SET_EXTERNAL_MOVEMENT_TUNING (0x224CFE5B) function."
    },
    "squads.squad_flock_add_external_alert": {
        "prefix": [
            "squads.squad_flock_add_external_alert",
            "squad_flock_add_external_alert"
        ],
        "body": [
            "squads.squad_flock_add_external_alert(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FLOCK_ADD_EXTERNAL_ALERT (0x1F0E5B88) function."
    },
    "squads.squad_flock_add_external_attraction_path": {
        "prefix": [
            "squads.squad_flock_add_external_attraction_path",
            "squad_flock_add_external_attraction_path"
        ],
        "body": [
            "squads.squad_flock_add_external_attraction_path(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FLOCK_ADD_EXTERNAL_ATTRACTION_PATH (0x895AA97B) function."
    },
    "squads.squad_flock_add_external_repulsion": {
        "prefix": [
            "squads.squad_flock_add_external_repulsion",
            "squad_flock_add_external_repulsion"
        ],
        "body": [
            "squads.squad_flock_add_external_repulsion(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FLOCK_ADD_EXTERNAL_REPULSION (0x53609885) function."
    },
    "squads.squad_flock_add_external_velocity_match": {
        "prefix": [
            "squads.squad_flock_add_external_velocity_match",
            "squad_flock_add_external_velocity_match"
        ],
        "body": [
            "squads.squad_flock_add_external_velocity_match(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FLOCK_ADD_EXTERNAL_VELOCITY_MATCH (0xE8B7AA08) function."
    },
    "squads.squad_flock_player_proximity_boost_set_enabled": {
        "prefix": [
            "squads.squad_flock_player_proximity_boost_set_enabled",
            "squad_flock_player_proximity_boost_set_enabled"
        ],
        "body": [
            "squads.squad_flock_player_proximity_boost_set_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FLOCK_PLAYER_PROXIMITY_BOOST_SET_ENABLED (0xE4E94286) function."
    },
    "squads.squad_flock_player_whistle_boost_set_enabled": {
        "prefix": [
            "squads.squad_flock_player_whistle_boost_set_enabled",
            "squad_flock_player_whistle_boost_set_enabled"
        ],
        "body": [
            "squads.squad_flock_player_whistle_boost_set_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FLOCK_PLAYER_WHISTLE_BOOST_SET_ENABLED (0x6770774F) function."
    },
    "squads.squad_animal_herd_set_flocking_parameter": {
        "prefix": [
            "squads.squad_animal_herd_set_flocking_parameter",
            "squad_animal_herd_set_flocking_parameter"
        ],
        "body": [
            "squads.squad_animal_herd_set_flocking_parameter(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_ANIMAL_HERD_SET_FLOCKING_PARAMETER (0x175BE678) function."
    },
    "squads.squad_animal_herd_clear_external_influences": {
        "prefix": [
            "squads.squad_animal_herd_clear_external_influences",
            "squad_animal_herd_clear_external_influences"
        ],
        "body": [
            "squads.squad_animal_herd_clear_external_influences(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_ANIMAL_HERD_CLEAR_EXTERNAL_INFLUENCES (0x5AEA32D1) function."
    },
    "squads.squad_animal_herd_add_external_repulsion": {
        "prefix": [
            "squads.squad_animal_herd_add_external_repulsion",
            "squad_animal_herd_add_external_repulsion"
        ],
        "body": [
            "squads.squad_animal_herd_add_external_repulsion(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_ANIMAL_HERD_ADD_EXTERNAL_REPULSION (0xB4D9B233) function."
    },
    "squads.squad_hunt_enemies_set_default_blip_alerted": {
        "prefix": [
            "squads.squad_hunt_enemies_set_default_blip_alerted",
            "squad_hunt_enemies_set_default_blip_alerted"
        ],
        "body": [
            "squads.squad_hunt_enemies_set_default_blip_alerted(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_HUNT_ENEMIES_SET_DEFAULT_BLIP_ALERTED (0xE7A0A109) function."
    },
    "squads.squad_hunt_enemies_set_default_blip_investigating": {
        "prefix": [
            "squads.squad_hunt_enemies_set_default_blip_investigating",
            "squad_hunt_enemies_set_default_blip_investigating"
        ],
        "body": [
            "squads.squad_hunt_enemies_set_default_blip_investigating(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_HUNT_ENEMIES_SET_DEFAULT_BLIP_INVESTIGATING (0x0073024E) function."
    },
    "squads.squad_hunt_enemies_set_default_blip_unalerted": {
        "prefix": [
            "squads.squad_hunt_enemies_set_default_blip_unalerted",
            "squad_hunt_enemies_set_default_blip_unalerted"
        ],
        "body": [
            "squads.squad_hunt_enemies_set_default_blip_unalerted(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_HUNT_ENEMIES_SET_DEFAULT_BLIP_UNALERTED (0x82C54B8A) function."
    },
    "squads.squad_get_num_not_eliminated_actors": {
        "prefix": [
            "squads.squad_get_num_not_eliminated_actors",
            "squad_get_num_not_eliminated_actors"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_get_num_not_eliminated_actors(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GET_NUM_NOT_ELIMINATED_ACTORS (0x55DAC120) function."
    },
    "squads.squad_set_not_eliminated_impairment_mask": {
        "prefix": [
            "squads.squad_set_not_eliminated_impairment_mask",
            "squad_set_not_eliminated_impairment_mask"
        ],
        "body": [
            "squads.squad_set_not_eliminated_impairment_mask(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_SET_NOT_ELIMINATED_IMPAIRMENT_MASK (0xE7D45FB3) function."
    },
    "squads.squad_get_not_eliminated_impairment_mask": {
        "prefix": [
            "squads.squad_get_not_eliminated_impairment_mask",
            "squad_get_not_eliminated_impairment_mask"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_get_not_eliminated_impairment_mask(unk0 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_GET_NOT_ELIMINATED_IMPAIRMENT_MASK (0xAEDD7512) function."
    },
    "squads.squad_battle_allies_set_formation_density": {
        "prefix": [
            "squads.squad_battle_allies_set_formation_density",
            "squad_battle_allies_set_formation_density"
        ],
        "body": [
            "squads.squad_battle_allies_set_formation_density(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_BATTLE_ALLIES_SET_FORMATION_DENSITY (0x6BC42101) function."
    },
    "squads.squad_follow_traffic_curve_set_behavior_flag": {
        "prefix": [
            "squads.squad_follow_traffic_curve_set_behavior_flag",
            "squad_follow_traffic_curve_set_behavior_flag"
        ],
        "body": [
            "squads.squad_follow_traffic_curve_set_behavior_flag(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FOLLOW_TRAFFIC_CURVE_SET_BEHAVIOR_FLAG (0x7FEE2B3C) function."
    },
    "squads.squad_follow_traffic_curve_enqueue_curve": {
        "prefix": [
            "squads.squad_follow_traffic_curve_enqueue_curve",
            "squad_follow_traffic_curve_enqueue_curve"
        ],
        "body": [
            "squads.squad_follow_traffic_curve_enqueue_curve(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FOLLOW_TRAFFIC_CURVE_ENQUEUE_CURVE (0x041C0802) function."
    },
    "squads.squad_follow_traffic_curve_set_task_priority": {
        "prefix": [
            "squads.squad_follow_traffic_curve_set_task_priority",
            "squad_follow_traffic_curve_set_task_priority"
        ],
        "body": [
            "squads.squad_follow_traffic_curve_set_task_priority(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FOLLOW_TRAFFIC_CURVE_SET_TASK_PRIORITY (0x8C8EEEF2) function."
    },
    "squads.squad_follow_traffic_curve_is_curve_already_in_list": {
        "prefix": [
            "squads.squad_follow_traffic_curve_is_curve_already_in_list",
            "squad_follow_traffic_curve_is_curve_already_in_list"
        ],
        "body": [
            "local result --[[ integer ]] = squads.squad_follow_traffic_curve_is_curve_already_in_list(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "SQUADS::SQUAD_FOLLOW_TRAFFIC_CURVE_IS_CURVE_ALREADY_IN_LIST (0x8DC095B0) function."
    },
    "stat.create_stat": {
        "prefix": [
            "stat.create_stat",
            "create_stat"
        ],
        "body": [
            "stat.create_stat(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "STAT::CREATE_STAT (0x32A3A7AE) function."
    },
    "stat.hide_stat": {
        "prefix": [
            "stat.hide_stat",
            "hide_stat"
        ],
        "body": [
            "stat.hide_stat(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "STAT::HIDE_STAT (0x1CF1FCC4) function."
    },
    "stat.update_stat": {
        "prefix": [
            "stat.update_stat",
            "update_stat"
        ],
        "body": [
            "stat.update_stat(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "STAT::UPDATE_STAT (0xC9212F76) function."
    },
    "stat.enable_journal_replay": {
        "prefix": [
            "stat.enable_journal_replay",
            "enable_journal_replay"
        ],
        "body": [
            "stat.enable_journal_replay(unk0 --[[ integer ]])"
        ],
        "description": "STAT::ENABLE_JOURNAL_REPLAY (0x957F1618) function."
    },
    "stat.set_journal_info_label": {
        "prefix": [
            "stat.set_journal_info_label",
            "set_journal_info_label"
        ],
        "body": [
            "stat.set_journal_info_label(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "STAT::SET_JOURNAL_INFO_LABEL (0x40C2576F) function."
    },
    "stat.get_sagplayer_stat_float": {
        "prefix": [
            "stat.get_sagplayer_stat_float",
            "get_sagplayer_stat_float"
        ],
        "body": [
            "local result --[[ number ]] = stat.get_sagplayer_stat_float(statid --[[ integer ]])"
        ],
        "description": "STAT::GET_SAGPLAYER_STAT_FLOAT (0x5545C218) function."
    },
    "stat.get_sagplayer_stat_int": {
        "prefix": [
            "stat.get_sagplayer_stat_int",
            "get_sagplayer_stat_int"
        ],
        "body": [
            "local result --[[ integer ]] = stat.get_sagplayer_stat_int(statid --[[ integer ]])"
        ],
        "description": "STAT::GET_SAGPLAYER_STAT_INT (0xE623B382) function."
    },
    "stat.set_sagplayer_stat_float": {
        "prefix": [
            "stat.set_sagplayer_stat_float",
            "set_sagplayer_stat_float"
        ],
        "body": [
            "stat.set_sagplayer_stat_float(statid --[[ integer ]], value --[[ number ]])"
        ],
        "description": "STAT::SET_SAGPLAYER_STAT_FLOAT (0x2104B1C0) function."
    },
    "stat.set_sagplayer_stat_int": {
        "prefix": [
            "stat.set_sagplayer_stat_int",
            "set_sagplayer_stat_int"
        ],
        "body": [
            "stat.set_sagplayer_stat_int(statid --[[ integer ]], value --[[ integer ]])"
        ],
        "description": "STAT::SET_SAGPLAYER_STAT_INT (0xF1A723D0) function."
    },
    "stat.get_num_kills_last_deadeye": {
        "prefix": [
            "stat.get_num_kills_last_deadeye",
            "get_num_kills_last_deadeye"
        ],
        "body": [
            "local result --[[ integer ]] = stat.get_num_kills_last_deadeye()"
        ],
        "description": "STAT::GET_NUM_KILLS_LAST_DEADEYE (0xBBF4F7E4) function."
    },
    "stream.streaming_request_actor": {
        "prefix": [
            "stream.streaming_request_actor",
            "streaming_request_actor"
        ],
        "body": [
            "stream.streaming_request_actor(model --[[ integer ]], unk0 --[[ boolean ]], unk1 --[[ boolean ]])"
        ],
        "description": "STREAM::STREAMING_REQUEST_ACTOR (0xB0A79FEE) function."
    },
    "stream.streaming_is_actor_loaded": {
        "prefix": [
            "stream.streaming_is_actor_loaded",
            "streaming_is_actor_loaded"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.streaming_is_actor_loaded(model --[[ integer ]], unk --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_IS_ACTOR_LOADED (0x7DF72579) function."
    },
    "stream.streaming_evict_actor": {
        "prefix": [
            "stream.streaming_evict_actor",
            "streaming_evict_actor"
        ],
        "body": [
            "stream.streaming_evict_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_EVICT_ACTOR (0x6661CF89) function."
    },
    "stream.streaming_is_world_loaded": {
        "prefix": [
            "stream.streaming_is_world_loaded",
            "streaming_is_world_loaded"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.streaming_is_world_loaded()"
        ],
        "description": "STREAM::STREAMING_IS_WORLD_LOADED (0x87B74064) function."
    },
    "stream.streaming_is_world_loaded_priority": {
        "prefix": [
            "stream.streaming_is_world_loaded_priority",
            "streaming_is_world_loaded_priority"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.streaming_is_world_loaded_priority(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_IS_WORLD_LOADED_PRIORITY (0x943BE053) function."
    },
    "stream.streaming_are_bounds_loaded": {
        "prefix": [
            "stream.streaming_are_bounds_loaded",
            "streaming_are_bounds_loaded"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.streaming_are_bounds_loaded(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_ARE_BOUNDS_LOADED (0xC07681C1) function."
    },
    "stream.streaming_request_prop": {
        "prefix": [
            "stream.streaming_request_prop",
            "streaming_request_prop"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.streaming_request_prop(assetid --[[ integer ]], unk --[[ boolean ]])"
        ],
        "description": "STREAM::STREAMING_REQUEST_PROP (0x38DC1F50) function."
    },
    "stream.streaming_is_prop_loaded": {
        "prefix": [
            "stream.streaming_is_prop_loaded",
            "streaming_is_prop_loaded"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.streaming_is_prop_loaded(assetid --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_IS_PROP_LOADED (0xD7F80035) function."
    },
    "stream.streaming_evict_prop": {
        "prefix": [
            "stream.streaming_evict_prop",
            "streaming_evict_prop"
        ],
        "body": [
            "stream.streaming_evict_prop(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_EVICT_PROP (0xA8D12960) function."
    },
    "stream.streaming_request_propset": {
        "prefix": [
            "stream.streaming_request_propset",
            "streaming_request_propset"
        ],
        "body": [
            "stream.streaming_request_propset(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_REQUEST_PROPSET (0xEC1F14C8) function."
    },
    "stream.streaming_is_propset_loaded": {
        "prefix": [
            "stream.streaming_is_propset_loaded",
            "streaming_is_propset_loaded"
        ],
        "body": [
            "local result --[[ integer ]] = stream.streaming_is_propset_loaded(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_IS_PROPSET_LOADED (0xF7D65903) function."
    },
    "stream.streaming_evict_propset": {
        "prefix": [
            "stream.streaming_evict_propset",
            "streaming_evict_propset"
        ],
        "body": [
            "stream.streaming_evict_propset(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_EVICT_PROPSET (0x4A5E4C13) function."
    },
    "stream.streaming_request_gringo": {
        "prefix": [
            "stream.streaming_request_gringo",
            "streaming_request_gringo"
        ],
        "body": [
            "stream.streaming_request_gringo(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_REQUEST_GRINGO (0x563E2E79) function."
    },
    "stream.streaming_is_gringo_loaded": {
        "prefix": [
            "stream.streaming_is_gringo_loaded",
            "streaming_is_gringo_loaded"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.streaming_is_gringo_loaded(assetid --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_IS_GRINGO_LOADED (0xA6C9DCEA) function."
    },
    "stream.streaming_evict_gringo": {
        "prefix": [
            "stream.streaming_evict_gringo",
            "streaming_evict_gringo"
        ],
        "body": [
            "stream.streaming_evict_gringo(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_EVICT_GRINGO (0xA02B6AAE) function."
    },
    "stream.streaming_request_gringo_dictionary": {
        "prefix": [
            "stream.streaming_request_gringo_dictionary",
            "streaming_request_gringo_dictionary"
        ],
        "body": [
            "stream.streaming_request_gringo_dictionary(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_REQUEST_GRINGO_DICTIONARY (0x620649B4) function."
    },
    "stream.streaming_is_gringo_dictionary_loaded": {
        "prefix": [
            "stream.streaming_is_gringo_dictionary_loaded",
            "streaming_is_gringo_dictionary_loaded"
        ],
        "body": [
            "local result --[[ integer ]] = stream.streaming_is_gringo_dictionary_loaded(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_IS_GRINGO_DICTIONARY_LOADED (0x67994764) function."
    },
    "stream.streaming_evict_gringo_dictionary": {
        "prefix": [
            "stream.streaming_evict_gringo_dictionary",
            "streaming_evict_gringo_dictionary"
        ],
        "body": [
            "stream.streaming_evict_gringo_dictionary(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_EVICT_GRINGO_DICTIONARY (0x32FCA813) function."
    },
    "stream.streaming_request_script": {
        "prefix": [
            "stream.streaming_request_script",
            "streaming_request_script"
        ],
        "body": [
            "stream.streaming_request_script(assetid --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_REQUEST_SCRIPT (0x11E57A92) function."
    },
    "stream.streaming_is_script_loaded": {
        "prefix": [
            "stream.streaming_is_script_loaded",
            "streaming_is_script_loaded"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.streaming_is_script_loaded(assetid --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_IS_SCRIPT_LOADED (0xB5B4AEAD) function."
    },
    "stream.streaming_evict_script": {
        "prefix": [
            "stream.streaming_evict_script",
            "streaming_evict_script"
        ],
        "body": [
            "stream.streaming_evict_script(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_EVICT_SCRIPT (0x570163E2) function."
    },
    "stream.streaming_load_all_requests_now": {
        "prefix": [
            "stream.streaming_load_all_requests_now",
            "streaming_load_all_requests_now"
        ],
        "body": [
            "stream.streaming_load_all_requests_now()"
        ],
        "description": "STREAM::STREAMING_LOAD_ALL_REQUESTS_NOW (0x7B5C28F3) function."
    },
    "stream.streaming_load_scene_ext": {
        "prefix": [
            "stream.streaming_load_scene_ext",
            "streaming_load_scene_ext"
        ],
        "body": [
            "stream.streaming_load_scene_ext(positionxy1 --[[ vector2 ]], positionz1 --[[ number ]], positionxy2 --[[ vector2 ]], positionz2 --[[ number ]], unk5 --[[ boolean ]])"
        ],
        "description": "STREAM::STREAMING_LOAD_SCENE_EXT (0xCB1E8485) function."
    },
    "stream.streaming_unload_scene": {
        "prefix": [
            "stream.streaming_unload_scene",
            "streaming_unload_scene"
        ],
        "body": [
            "stream.streaming_unload_scene()"
        ],
        "description": "STREAM::STREAMING_UNLOAD_SCENE (0x39E69B1B) function."
    },
    "stream.streaming_override_main_poi": {
        "prefix": [
            "stream.streaming_override_main_poi",
            "streaming_override_main_poi"
        ],
        "body": [
            "stream.streaming_override_main_poi(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_OVERRIDE_MAIN_POI (0x338F85D9) function."
    },
    "stream.streaming_release_main_poi": {
        "prefix": [
            "stream.streaming_release_main_poi",
            "streaming_release_main_poi"
        ],
        "body": [
            "stream.streaming_release_main_poi()"
        ],
        "description": "STREAM::STREAMING_RELEASE_MAIN_POI (0x7D5C0C4D) function."
    },
    "stream.streaming_has_override_main_poi": {
        "prefix": [
            "stream.streaming_has_override_main_poi",
            "streaming_has_override_main_poi"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.streaming_has_override_main_poi()"
        ],
        "description": "STREAM::STREAMING_HAS_OVERRIDE_MAIN_POI (0x5B404EDA) function."
    },
    "stream.streaming_get_override_main_poi_pos": {
        "prefix": [
            "stream.streaming_get_override_main_poi_pos",
            "streaming_get_override_main_poi_pos"
        ],
        "body": [
            "stream.streaming_get_override_main_poi_pos(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_GET_OVERRIDE_MAIN_POI_POS (0xDF3DF05A) function."
    },
    "stream.streaming_enable_poi_streaming": {
        "prefix": [
            "stream.streaming_enable_poi_streaming",
            "streaming_enable_poi_streaming"
        ],
        "body": [
            "stream.streaming_enable_poi_streaming(enable --[[ boolean ]])"
        ],
        "description": "STREAM::STREAMING_ENABLE_POI_STREAMING (0x49E4EB10) function."
    },
    "stream.streaming_prevent_sniper_mode": {
        "prefix": [
            "stream.streaming_prevent_sniper_mode",
            "streaming_prevent_sniper_mode"
        ],
        "body": [
            "stream.streaming_prevent_sniper_mode(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_PREVENT_SNIPER_MODE (0x5F4C08A2) function."
    },
    "stream.streaming_set_cutscene_mode": {
        "prefix": [
            "stream.streaming_set_cutscene_mode",
            "streaming_set_cutscene_mode"
        ],
        "body": [
            "stream.streaming_set_cutscene_mode(enable --[[ boolean ]])"
        ],
        "description": "STREAM::STREAMING_SET_CUTSCENE_MODE (0x83088F62) function."
    },
    "stream.streaming_enable_bounds": {
        "prefix": [
            "stream.streaming_enable_bounds",
            "streaming_enable_bounds"
        ],
        "body": [
            "stream.streaming_enable_bounds(enable --[[ boolean ]])"
        ],
        "description": "STREAM::STREAMING_ENABLE_BOUNDS (0x0BEBB187) function."
    },
    "stream.streaming_load_bounds": {
        "prefix": [
            "stream.streaming_load_bounds",
            "streaming_load_bounds"
        ],
        "body": [
            "stream.streaming_load_bounds(positionxy --[[ vector2 ]], positionz --[[ number ]], radius --[[ number ]], unk4 --[[ boolean ]])"
        ],
        "description": "STREAM::STREAMING_LOAD_BOUNDS (0x0F8FC4D0) function."
    },
    "stream.streaming_load_bounds_ext": {
        "prefix": [
            "stream.streaming_load_bounds_ext",
            "streaming_load_bounds_ext"
        ],
        "body": [
            "stream.streaming_load_bounds_ext(index --[[ integer ]], positionxy --[[ vector2 ]], positionz --[[ number ]], radius --[[ number ]], unk4 --[[ boolean ]])"
        ],
        "description": "STREAM::STREAMING_LOAD_BOUNDS_EXT (0x1CD960B8) function."
    },
    "stream.streaming_unload_bounds": {
        "prefix": [
            "stream.streaming_unload_bounds",
            "streaming_unload_bounds"
        ],
        "body": [
            "stream.streaming_unload_bounds()"
        ],
        "description": "STREAM::STREAMING_UNLOAD_BOUNDS (0x09A67EC6) function."
    },
    "stream.streaming_evict_all": {
        "prefix": [
            "stream.streaming_evict_all",
            "streaming_evict_all"
        ],
        "body": [
            "stream.streaming_evict_all()"
        ],
        "description": "STREAM::STREAMING_EVICT_ALL (0x7D432781) function."
    },
    "stream.is_player_teleporting": {
        "prefix": [
            "stream.is_player_teleporting",
            "is_player_teleporting"
        ],
        "body": [
            "local result --[[ boolean ]] = stream.is_player_teleporting()"
        ],
        "description": "STREAM::IS_PLAYER_TELEPORTING (0x8EB0B2AD) function."
    },
    "stream.dump_memory_stats": {
        "prefix": [
            "stream.dump_memory_stats",
            "dump_memory_stats"
        ],
        "body": [
            "stream.dump_memory_stats()"
        ],
        "description": "STREAM::DUMP_MEMORY_STATS (0xCA99D3B4) function."
    },
    "stream.report_metrics_performance": {
        "prefix": [
            "stream.report_metrics_performance",
            "report_metrics_performance"
        ],
        "body": [
            "stream.report_metrics_performance()"
        ],
        "description": "STREAM::REPORT_METRICS_PERFORMANCE (0xE74C4851) function."
    },
    "stream.streaming_set_poi_limit": {
        "prefix": [
            "stream.streaming_set_poi_limit",
            "streaming_set_poi_limit"
        ],
        "body": [
            "stream.streaming_set_poi_limit(unk0 --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_SET_POI_LIMIT (0x6F9C399B) function."
    },
    "stream.streaming_enable_force_fragment_high_lod": {
        "prefix": [
            "stream.streaming_enable_force_fragment_high_lod",
            "streaming_enable_force_fragment_high_lod"
        ],
        "body": [
            "stream.streaming_enable_force_fragment_high_lod(object --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_ENABLE_FORCE_FRAGMENT_HIGH_LOD (0xBEABC729) function."
    },
    "stream.streaming_disable_force_fragment_high_lod": {
        "prefix": [
            "stream.streaming_disable_force_fragment_high_lod",
            "streaming_disable_force_fragment_high_lod"
        ],
        "body": [
            "stream.streaming_disable_force_fragment_high_lod(object --[[ integer ]])"
        ],
        "description": "STREAM::STREAMING_DISABLE_FORCE_FRAGMENT_HIGH_LOD (0xB226E8E3) function."
    },
    "stream.streaming_enable_force_child_sector_high_lod": {
        "prefix": [
            "stream.streaming_enable_force_child_sector_high_lod",
            "streaming_enable_force_child_sector_high_lod"
        ],
        "body": [
            "stream.streaming_enable_force_child_sector_high_lod(sectorname --[[ string ]])"
        ],
        "description": "STREAM::STREAMING_ENABLE_FORCE_CHILD_SECTOR_HIGH_LOD (0xE981992C) function."
    },
    "stream.streaming_disable_force_child_sector_high_lod": {
        "prefix": [
            "stream.streaming_disable_force_child_sector_high_lod",
            "streaming_disable_force_child_sector_high_lod"
        ],
        "body": [
            "stream.streaming_disable_force_child_sector_high_lod(sectorname --[[ string ]])"
        ],
        "description": "STREAM::STREAMING_DISABLE_FORCE_CHILD_SECTOR_HIGH_LOD (0x8CC6066C) function."
    },
    "stream.resize_actor_set": {
        "prefix": [
            "stream.resize_actor_set",
            "resize_actor_set"
        ],
        "body": [
            "stream.resize_actor_set()"
        ],
        "description": "STREAM::RESIZE_ACTOR_SET (0x83E043A6) function."
    },
    "string.is_string_valid": {
        "prefix": [
            "string.is_string_valid",
            "is_string_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = string.is_string_valid(unk0 --[[ string ]])"
        ],
        "description": "STRING::IS_STRING_VALID (0xBDC61056) function."
    },
    "string.strings_are_equal": {
        "prefix": [
            "string.strings_are_equal",
            "strings_are_equal"
        ],
        "body": [
            "local result --[[ boolean ]] = string.strings_are_equal(str1 --[[ string ]], str2 --[[ string ]])"
        ],
        "description": "STRING::STRINGS_ARE_EQUAL (0x8218D693) function."
    },
    "string.strings_are_equal_clamped": {
        "prefix": [
            "string.strings_are_equal_clamped",
            "strings_are_equal_clamped"
        ],
        "body": [
            "local result --[[ integer ]] = string.strings_are_equal_clamped(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "STRING::STRINGS_ARE_EQUAL_CLAMPED (0xEC28CA8E) function."
    },
    "string.string_contains_string": {
        "prefix": [
            "string.string_contains_string",
            "string_contains_string"
        ],
        "body": [
            "local result --[[ integer ]] = string.string_contains_string(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "STRING::STRING_CONTAINS_STRING (0xFCAFC819) function."
    },
    "string.string_to_float": {
        "prefix": [
            "string.string_to_float",
            "string_to_float"
        ],
        "body": [
            "local result --[[ number ]] = string.string_to_float(str --[[ string ]])"
        ],
        "description": "STRING::STRING_TO_FLOAT (0x43BE70B5) function."
    },
    "string.string_to_int": {
        "prefix": [
            "string.string_to_int",
            "string_to_int"
        ],
        "body": [
            "local result --[[ integer ]] = string.string_to_int(unk0 --[[ string ]])"
        ],
        "description": "STRING::STRING_TO_INT (0x590A8160) function."
    },
    "string.string_to_hash": {
        "prefix": [
            "string.string_to_hash",
            "string_to_hash"
        ],
        "body": [
            "local result --[[ integer ]] = string.string_to_hash(str --[[ string ]])"
        ],
        "description": "STRING::STRING_TO_HASH (0x84415E28) function."
    },
    "string.string_length": {
        "prefix": [
            "string.string_length",
            "string_length"
        ],
        "body": [
            "local result --[[ integer ]] = string.string_length(unk0 --[[ string ]])"
        ],
        "description": "STRING::STRING_LENGTH (0x6CE4B233) function."
    },
    "string.stringtable_length": {
        "prefix": [
            "string.stringtable_length",
            "stringtable_length"
        ],
        "body": [
            "local result --[[ integer ]] = string.stringtable_length(unk0 --[[ integer ]])"
        ],
        "description": "STRING::STRINGTABLE_LENGTH (0x71D550C6) function."
    },
    "string.string_lower": {
        "prefix": [
            "string.string_lower",
            "string_lower"
        ],
        "body": [
            "local result --[[ integer ]] = string.string_lower(unk0 --[[ integer ]])"
        ],
        "description": "STRING::STRING_LOWER (0x3E785560) function."
    },
    "string.string_upper": {
        "prefix": [
            "string.string_upper",
            "string_upper"
        ],
        "body": [
            "local result --[[ integer ]] = string.string_upper(unk0 --[[ integer ]])"
        ],
        "description": "STRING::STRING_UPPER (0xBC5B2116) function."
    },
    "string.set_ownership_straggler": {
        "prefix": [
            "string.set_ownership_straggler",
            "set_ownership_straggler"
        ],
        "body": [
            "local result --[[ integer ]] = string.set_ownership_straggler(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "STRING::SET_OWNERSHIP_STRAGGLER (0x346E91C2) function."
    },
    "string.string_num_tokens": {
        "prefix": [
            "string.string_num_tokens",
            "string_num_tokens"
        ],
        "body": [
            "local result --[[ integer ]] = string.string_num_tokens()"
        ],
        "description": "STRING::STRING_NUM_TOKENS (0x7FB72180) function."
    },
    "string.string_get_token": {
        "prefix": [
            "string.string_get_token",
            "string_get_token"
        ],
        "body": [
            "local result --[[ integer ]] = string.string_get_token(unk0 --[[ integer ]])"
        ],
        "description": "STRING::STRING_GET_TOKEN (0xEE2791E5) function."
    },
    "string.string_clear_tokenizer": {
        "prefix": [
            "string.string_clear_tokenizer",
            "string_clear_tokenizer"
        ],
        "body": [
            "string.string_clear_tokenizer()"
        ],
        "description": "STRING::STRING_CLEAR_TOKENIZER (0x10873616) function."
    },
    "string.ss_init": {
        "prefix": [
            "string.ss_init",
            "ss_init"
        ],
        "body": [
            "string.ss_init(unk0 --[[ integer ]])"
        ],
        "description": "STRING::SS_INIT (0x8785E0CE) function."
    },
    "string.ss_register": {
        "prefix": [
            "string.ss_register",
            "ss_register"
        ],
        "body": [
            "local result --[[ integer ]] = string.ss_register(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "STRING::SS_REGISTER (0xFD717A47) function."
    },
    "string.ss_get_string": {
        "prefix": [
            "string.ss_get_string",
            "ss_get_string"
        ],
        "body": [
            "local result --[[ string ]] = string.ss_get_string(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "STRING::SS_GET_STRING (0x20D34AC5) function."
    },
    "string.ss_get_string_id": {
        "prefix": [
            "string.ss_get_string_id",
            "ss_get_string_id"
        ],
        "body": [
            "local result --[[ integer ]] = string.ss_get_string_id(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "STRING::SS_GET_STRING_ID (0xA2D27A1F) function."
    },
    "string.ss_finalize": {
        "prefix": [
            "string.ss_finalize",
            "ss_finalize"
        ],
        "body": [
            "string.ss_finalize()"
        ],
        "description": "STRING::SS_FINALIZE (0xEC1E8210) function."
    },
    "string.ss_unfinalize": {
        "prefix": [
            "string.ss_unfinalize",
            "ss_unfinalize"
        ],
        "body": [
            "string.ss_unfinalize()"
        ],
        "description": "STRING::SS_UNFINALIZE (0xBEDF7AA8) function."
    },
    "string.ss_set_table_size": {
        "prefix": [
            "string.ss_set_table_size",
            "ss_set_table_size"
        ],
        "body": [
            "local result --[[ integer ]] = string.ss_set_table_size(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "STRING::SS_SET_TABLE_SIZE (0xAFFA5ABE) function."
    },
    "stringtable.stringtable_append_table": {
        "prefix": [
            "stringtable.stringtable_append_table",
            "stringtable_append_table"
        ],
        "body": [
            "stringtable.stringtable_append_table(unk0 --[[ integer ]])"
        ],
        "description": "STRINGTABLE::STRINGTABLE_APPEND_TABLE (0xB3E44649) function."
    },
    "stringtable.request_string_table": {
        "prefix": [
            "stringtable.request_string_table",
            "request_string_table"
        ],
        "body": [
            "stringtable.request_string_table(stringtablepath --[[ string ]])"
        ],
        "description": "STRINGTABLE::REQUEST_STRING_TABLE (0x82B4DCCE) function."
    },
    "stringtable.has_string_table_loaded": {
        "prefix": [
            "stringtable.has_string_table_loaded",
            "has_string_table_loaded"
        ],
        "body": [
            "local result --[[ boolean ]] = stringtable.has_string_table_loaded(stringtablepath --[[ string ]])"
        ],
        "description": "STRINGTABLE::HAS_STRING_TABLE_LOADED (0x12D77EEC) function."
    },
    "stringtable.remove_string_table": {
        "prefix": [
            "stringtable.remove_string_table",
            "remove_string_table"
        ],
        "body": [
            "stringtable.remove_string_table(unk0 --[[ integer ]])"
        ],
        "description": "STRINGTABLE::REMOVE_STRING_TABLE (0x6857E514) function."
    },
    "targeting.get_actor_under_reticle": {
        "prefix": [
            "targeting.get_actor_under_reticle",
            "get_actor_under_reticle"
        ],
        "body": [
            "local result --[[ integer ]] = targeting.get_actor_under_reticle(actor --[[ integer ]], flag --[[ integer ]])"
        ],
        "description": "TARGETING::GET_ACTOR_UNDER_RETICLE (0x86BAAC6C) function."
    },
    "targeting.get_reticle_target_point": {
        "prefix": [
            "targeting.get_reticle_target_point",
            "get_reticle_target_point"
        ],
        "body": [
            "local result --[[ boolean ]] = targeting.get_reticle_target_point(actor --[[ integer ]], position --[[ vector3 ]])"
        ],
        "description": "TARGETING::GET_RETICLE_TARGET_POINT (0x8AE7281E) function."
    },
    "targeting.set_player_perfect_accuracy": {
        "prefix": [
            "targeting.set_player_perfect_accuracy",
            "set_player_perfect_accuracy"
        ],
        "body": [
            "targeting.set_player_perfect_accuracy(player --[[ integer ]], enabled --[[ boolean ]])"
        ],
        "description": "TARGETING::SET_PLAYER_PERFECT_ACCURACY (0x5F566576) function."
    },
    "targeting.override_player_targeting_weights": {
        "prefix": [
            "targeting.override_player_targeting_weights",
            "override_player_targeting_weights"
        ],
        "body": [
            "targeting.override_player_targeting_weights(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TARGETING::OVERRIDE_PLAYER_TARGETING_WEIGHTS (0xD95C01D2) function."
    },
    "targeting.set_actor_base_score": {
        "prefix": [
            "targeting.set_actor_base_score",
            "set_actor_base_score"
        ],
        "body": [
            "targeting.set_actor_base_score(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_BASE_SCORE (0x91220723) function."
    },
    "targeting.set_actor_hardlock_bias": {
        "prefix": [
            "targeting.set_actor_hardlock_bias",
            "set_actor_hardlock_bias"
        ],
        "body": [
            "targeting.set_actor_hardlock_bias(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_HARDLOCK_BIAS (0x856C3A8A) function."
    },
    "targeting.set_actor_use_fullscreen_acquisition": {
        "prefix": [
            "targeting.set_actor_use_fullscreen_acquisition",
            "set_actor_use_fullscreen_acquisition"
        ],
        "body": [
            "targeting.set_actor_use_fullscreen_acquisition(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_USE_FULLSCREEN_ACQUISITION (0x6400E005) function."
    },
    "targeting.set_actor_can_be_targeted": {
        "prefix": [
            "targeting.set_actor_can_be_targeted",
            "set_actor_can_be_targeted"
        ],
        "body": [
            "targeting.set_actor_can_be_targeted(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_CAN_BE_TARGETED (0xF1607937) function."
    },
    "targeting.set_actor_can_be_targeted_casual_only": {
        "prefix": [
            "targeting.set_actor_can_be_targeted_casual_only",
            "set_actor_can_be_targeted_casual_only"
        ],
        "body": [
            "targeting.set_actor_can_be_targeted_casual_only(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_CAN_BE_TARGETED_CASUAL_ONLY (0x0753A098) function."
    },
    "targeting.set_actor_can_be_hardlocked": {
        "prefix": [
            "targeting.set_actor_can_be_hardlocked",
            "set_actor_can_be_hardlocked"
        ],
        "body": [
            "targeting.set_actor_can_be_hardlocked(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_CAN_BE_HARDLOCKED (0xF4429710) function."
    },
    "targeting.actor_can_be_hardlocked": {
        "prefix": [
            "targeting.actor_can_be_hardlocked",
            "actor_can_be_hardlocked"
        ],
        "body": [
            "local result --[[ boolean ]] = targeting.actor_can_be_hardlocked(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::ACTOR_CAN_BE_HARDLOCKED (0x1468DD56) function."
    },
    "targeting.set_actor_can_be_softlocked": {
        "prefix": [
            "targeting.set_actor_can_be_softlocked",
            "set_actor_can_be_softlocked"
        ],
        "body": [
            "targeting.set_actor_can_be_softlocked(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_CAN_BE_SOFTLOCKED (0x327E4426) function."
    },
    "targeting.set_actor_can_be_aimassisted": {
        "prefix": [
            "targeting.set_actor_can_be_aimassisted",
            "set_actor_can_be_aimassisted"
        ],
        "body": [
            "targeting.set_actor_can_be_aimassisted(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_CAN_BE_AIMASSISTED (0xAC8D3A0C) function."
    },
    "targeting.set_actor_can_be_bumptargeted": {
        "prefix": [
            "targeting.set_actor_can_be_bumptargeted",
            "set_actor_can_be_bumptargeted"
        ],
        "body": [
            "targeting.set_actor_can_be_bumptargeted(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_CAN_BE_BUMPTARGETED (0x57055A7D) function."
    },
    "targeting.set_actor_only_hardlock_if_hostile": {
        "prefix": [
            "targeting.set_actor_only_hardlock_if_hostile",
            "set_actor_only_hardlock_if_hostile"
        ],
        "body": [
            "targeting.set_actor_only_hardlock_if_hostile(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_ACTOR_ONLY_HARDLOCK_IF_HOSTILE (0x5CC16A49) function."
    },
    "targeting.is_actor_in_accuracy_range": {
        "prefix": [
            "targeting.is_actor_in_accuracy_range",
            "is_actor_in_accuracy_range"
        ],
        "body": [
            "local result --[[ boolean ]] = targeting.is_actor_in_accuracy_range(actor --[[ integer ]])"
        ],
        "description": "TARGETING::IS_ACTOR_IN_ACCURACY_RANGE (0x7E124E62) function."
    },
    "targeting.set_can_actor_hardlock_neutrals": {
        "prefix": [
            "targeting.set_can_actor_hardlock_neutrals",
            "set_can_actor_hardlock_neutrals"
        ],
        "body": [
            "targeting.set_can_actor_hardlock_neutrals(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::SET_CAN_ACTOR_HARDLOCK_NEUTRALS (0x1EEE7494) function."
    },
    "targeting.calculate_normalized_screen_distance_from_reticle": {
        "prefix": [
            "targeting.calculate_normalized_screen_distance_from_reticle",
            "calculate_normalized_screen_distance_from_reticle"
        ],
        "body": [
            "local result --[[ number ]] = targeting.calculate_normalized_screen_distance_from_reticle(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TARGETING::CALCULATE_NORMALIZED_SCREEN_DISTANCE_FROM_RETICLE (0xD19EFFC1) function."
    },
    "tasks.task_action_perform": {
        "prefix": [
            "tasks.task_action_perform",
            "task_action_perform"
        ],
        "body": [
            "tasks.task_action_perform(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_ACTION_PERFORM (0xE32F09B3) function."
    },
    "tasks.task_animal_patrol": {
        "prefix": [
            "tasks.task_animal_patrol",
            "task_animal_patrol"
        ],
        "body": [
            "tasks.task_animal_patrol(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_ANIMAL_PATROL (0xF54E4D45) function."
    },
    "tasks.task_animal_circle_aggressively": {
        "prefix": [
            "tasks.task_animal_circle_aggressively",
            "task_animal_circle_aggressively"
        ],
        "body": [
            "tasks.task_animal_circle_aggressively(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_ANIMAL_CIRCLE_AGGRESSIVELY (0xEACE773D) function."
    },
    "tasks.task_bird_land_at_coord": {
        "prefix": [
            "tasks.task_bird_land_at_coord",
            "task_bird_land_at_coord"
        ],
        "body": [
            "tasks.task_bird_land_at_coord(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_BIRD_LAND_AT_COORD (0xAD0E49E3) function."
    },
    "tasks.task_bird_soar_at_coord": {
        "prefix": [
            "tasks.task_bird_soar_at_coord",
            "task_bird_soar_at_coord"
        ],
        "body": [
            "tasks.task_bird_soar_at_coord(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_BIRD_SOAR_AT_COORD (0x69CCFD7C) function."
    },
    "tasks.task_crouch": {
        "prefix": [
            "tasks.task_crouch",
            "task_crouch"
        ],
        "body": [
            "tasks.task_crouch(actor --[[ integer ]], durability --[[ number ]])"
        ],
        "description": "TASKS::TASK_CROUCH (0x616C803C) function."
    },
    "tasks.task_dismount": {
        "prefix": [
            "tasks.task_dismount",
            "task_dismount"
        ],
        "body": [
            "tasks.task_dismount(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_DISMOUNT (0x5DEF5C4A) function."
    },
    "tasks.task_dive": {
        "prefix": [
            "tasks.task_dive",
            "task_dive"
        ],
        "body": [
            "tasks.task_dive(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_DIVE (0xECAD08C7) function."
    },
    "tasks.task_draw_holster_weapon": {
        "prefix": [
            "tasks.task_draw_holster_weapon",
            "task_draw_holster_weapon"
        ],
        "body": [
            "tasks.task_draw_holster_weapon(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_DRAW_HOLSTER_WEAPON (0xDB5F6B35) function."
    },
    "tasks.task_face_actor": {
        "prefix": [
            "tasks.task_face_actor",
            "task_face_actor"
        ],
        "body": [
            "tasks.task_face_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FACE_ACTOR (0x9F3B5B47) function."
    },
    "tasks.task_face_coord": {
        "prefix": [
            "tasks.task_face_coord",
            "task_face_coord"
        ],
        "body": [
            "tasks.task_face_coord(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FACE_COORD (0x31B598FB) function."
    },
    "tasks.task_flee_coord": {
        "prefix": [
            "tasks.task_flee_coord",
            "task_flee_coord"
        ],
        "body": [
            "tasks.task_flee_coord(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FLEE_COORD (0x826D3459) function."
    },
    "tasks.task_flee_actor": {
        "prefix": [
            "tasks.task_flee_actor",
            "task_flee_actor"
        ],
        "body": [
            "tasks.task_flee_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FLEE_ACTOR (0x2CF32A98) function."
    },
    "tasks.task_flee_actorset": {
        "prefix": [
            "tasks.task_flee_actorset",
            "task_flee_actorset"
        ],
        "body": [
            "tasks.task_flee_actorset(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FLEE_ACTORSET (0xCD5E23C3) function."
    },
    "tasks.task_follow_actor": {
        "prefix": [
            "tasks.task_follow_actor",
            "task_follow_actor"
        ],
        "body": [
            "tasks.task_follow_actor(actor --[[ integer ]], target --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FOLLOW_ACTOR (0x12F0911A) function."
    },
    "tasks.task_follow_and_attack_object": {
        "prefix": [
            "tasks.task_follow_and_attack_object",
            "task_follow_and_attack_object"
        ],
        "body": [
            "tasks.task_follow_and_attack_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FOLLOW_AND_ATTACK_OBJECT (0xDA646464) function."
    },
    "tasks.task_follow_object": {
        "prefix": [
            "tasks.task_follow_object",
            "task_follow_object"
        ],
        "body": [
            "tasks.task_follow_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FOLLOW_OBJECT (0xFF3E3DCE) function."
    },
    "tasks.task_follow_object_along_path": {
        "prefix": [
            "tasks.task_follow_object_along_path",
            "task_follow_object_along_path"
        ],
        "body": [
            "tasks.task_follow_object_along_path(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FOLLOW_OBJECT_ALONG_PATH (0x626C97D5) function."
    },
    "tasks.task_follow_object_at_distance": {
        "prefix": [
            "tasks.task_follow_object_at_distance",
            "task_follow_object_at_distance"
        ],
        "body": [
            "tasks.task_follow_object_at_distance(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FOLLOW_OBJECT_AT_DISTANCE (0x75A4E05E) function."
    },
    "tasks.task_follow_path": {
        "prefix": [
            "tasks.task_follow_path",
            "task_follow_path"
        ],
        "body": [
            "tasks.task_follow_path(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FOLLOW_PATH (0x973DCC5B) function."
    },
    "tasks.task_follow_path_from_nearest_point": {
        "prefix": [
            "tasks.task_follow_path_from_nearest_point",
            "task_follow_path_from_nearest_point"
        ],
        "body": [
            "tasks.task_follow_path_from_nearest_point(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FOLLOW_PATH_FROM_NEAREST_POINT (0x9591A996) function."
    },
    "tasks.task_go_near_actorset": {
        "prefix": [
            "tasks.task_go_near_actorset",
            "task_go_near_actorset"
        ],
        "body": [
            "tasks.task_go_near_actorset(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GO_NEAR_ACTORSET (0xF7B01E74) function."
    },
    "tasks.task_go_near_coord": {
        "prefix": [
            "tasks.task_go_near_coord",
            "task_go_near_coord"
        ],
        "body": [
            "tasks.task_go_near_coord(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GO_NEAR_COORD (0x55EC940B) function."
    },
    "tasks.task_go_near_object": {
        "prefix": [
            "tasks.task_go_near_object",
            "task_go_near_object"
        ],
        "body": [
            "tasks.task_go_near_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GO_NEAR_OBJECT (0x5EA4F1FE) function."
    },
    "tasks.task_go_to_coord": {
        "prefix": [
            "tasks.task_go_to_coord",
            "task_go_to_coord"
        ],
        "body": [
            "tasks.task_go_to_coord(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GO_TO_COORD (0x8C574832) function."
    },
    "tasks.task_go_to_coord_and_stay": {
        "prefix": [
            "tasks.task_go_to_coord_and_stay",
            "task_go_to_coord_and_stay"
        ],
        "body": [
            "tasks.task_go_to_coord_and_stay(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GO_TO_COORD_AND_STAY (0x8636587A) function."
    },
    "tasks.task_go_to_coord_nonstop": {
        "prefix": [
            "tasks.task_go_to_coord_nonstop",
            "task_go_to_coord_nonstop"
        ],
        "body": [
            "tasks.task_go_to_coord_nonstop(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GO_TO_COORD_NONSTOP (0xD62D6CE5) function."
    },
    "tasks.task_go_to_coord_precisely": {
        "prefix": [
            "tasks.task_go_to_coord_precisely",
            "task_go_to_coord_precisely"
        ],
        "body": [
            "tasks.task_go_to_coord_precisely(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GO_TO_COORD_PRECISELY (0x6BDB3257) function."
    },
    "tasks.task_go_to_object": {
        "prefix": [
            "tasks.task_go_to_object",
            "task_go_to_object"
        ],
        "body": [
            "tasks.task_go_to_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GO_TO_OBJECT (0x01BACD08) function."
    },
    "tasks.task_guard_patrol_path": {
        "prefix": [
            "tasks.task_guard_patrol_path",
            "task_guard_patrol_path"
        ],
        "body": [
            "tasks.task_guard_patrol_path(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GUARD_PATROL_PATH (0xFA5BB172) function."
    },
    "tasks.task_guard_stand": {
        "prefix": [
            "tasks.task_guard_stand",
            "task_guard_stand"
        ],
        "body": [
            "tasks.task_guard_stand(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GUARD_STAND (0x99F65CC0) function."
    },
    "tasks.task_hide_at_cover": {
        "prefix": [
            "tasks.task_hide_at_cover",
            "task_hide_at_cover"
        ],
        "body": [
            "tasks.task_hide_at_cover(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_HIDE_AT_COVER (0xAB8B96A5) function."
    },
    "tasks.task_horse_action": {
        "prefix": [
            "tasks.task_horse_action",
            "task_horse_action"
        ],
        "body": [
            "tasks.task_horse_action(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_HORSE_ACTION (0x916FF236) function."
    },
    "tasks.task_kill_char": {
        "prefix": [
            "tasks.task_kill_char",
            "task_kill_char"
        ],
        "body": [
            "tasks.task_kill_char(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_KILL_CHAR (0x1AE4B75B) function."
    },
    "tasks.task_melee_attack": {
        "prefix": [
            "tasks.task_melee_attack",
            "task_melee_attack"
        ],
        "body": [
            "tasks.task_melee_attack(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_MELEE_ATTACK (0x4FEADDD9) function."
    },
    "tasks.task_mount": {
        "prefix": [
            "tasks.task_mount",
            "task_mount"
        ],
        "body": [
            "tasks.task_mount(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_MOUNT (0xB6131204) function."
    },
    "tasks.task_point_gun_at_coord": {
        "prefix": [
            "tasks.task_point_gun_at_coord",
            "task_point_gun_at_coord"
        ],
        "body": [
            "tasks.task_point_gun_at_coord(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_POINT_GUN_AT_COORD (0xAD3729AD) function."
    },
    "tasks.task_point_gun_at_object": {
        "prefix": [
            "tasks.task_point_gun_at_object",
            "task_point_gun_at_object"
        ],
        "body": [
            "tasks.task_point_gun_at_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_POINT_GUN_AT_OBJECT (0x95C206C2) function."
    },
    "tasks.task_respond_to_horse_whistle": {
        "prefix": [
            "tasks.task_respond_to_horse_whistle",
            "task_respond_to_horse_whistle"
        ],
        "body": [
            "tasks.task_respond_to_horse_whistle(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_RESPOND_TO_HORSE_WHISTLE (0x69B924A7) function."
    },
    "tasks.task_search": {
        "prefix": [
            "tasks.task_search",
            "task_search"
        ],
        "body": [
            "tasks.task_search(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SEARCH (0x4E17E039) function."
    },
    "tasks.task_search_for_object": {
        "prefix": [
            "tasks.task_search_for_object",
            "task_search_for_object"
        ],
        "body": [
            "tasks.task_search_for_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SEARCH_FOR_OBJECT (0xD9B57910) function."
    },
    "tasks.task_seek_cover_from_actor": {
        "prefix": [
            "tasks.task_seek_cover_from_actor",
            "task_seek_cover_from_actor"
        ],
        "body": [
            "tasks.task_seek_cover_from_actor(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SEEK_COVER_FROM_ACTOR (0xE1C8A1B3) function."
    },
    "tasks.task_sequence_perform": {
        "prefix": [
            "tasks.task_sequence_perform",
            "task_sequence_perform"
        ],
        "body": [
            "tasks.task_sequence_perform(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SEQUENCE_PERFORM (0x2DF2298C) function."
    },
    "tasks.task_sequence_perform_repeatedly": {
        "prefix": [
            "tasks.task_sequence_perform_repeatedly",
            "task_sequence_perform_repeatedly"
        ],
        "body": [
            "tasks.task_sequence_perform_repeatedly(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SEQUENCE_PERFORM_REPEATEDLY (0xA7A50E4D) function."
    },
    "tasks.task_shoot_at_coord": {
        "prefix": [
            "tasks.task_shoot_at_coord",
            "task_shoot_at_coord"
        ],
        "body": [
            "tasks.task_shoot_at_coord(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SHOOT_AT_COORD (0x601C22E3) function."
    },
    "tasks.task_shoot_at_coord_from_position": {
        "prefix": [
            "tasks.task_shoot_at_coord_from_position",
            "task_shoot_at_coord_from_position"
        ],
        "body": [
            "tasks.task_shoot_at_coord_from_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SHOOT_AT_COORD_FROM_POSITION (0x7B5FC704) function."
    },
    "tasks.task_shoot_enemies_from_any_cover": {
        "prefix": [
            "tasks.task_shoot_enemies_from_any_cover",
            "task_shoot_enemies_from_any_cover"
        ],
        "body": [
            "tasks.task_shoot_enemies_from_any_cover(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SHOOT_ENEMIES_FROM_ANY_COVER (0x3C9875E5) function."
    },
    "tasks.task_shoot_enemies_from_cover": {
        "prefix": [
            "tasks.task_shoot_enemies_from_cover",
            "task_shoot_enemies_from_cover"
        ],
        "body": [
            "tasks.task_shoot_enemies_from_cover(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SHOOT_ENEMIES_FROM_COVER (0xCE584BCF) function."
    },
    "tasks.task_shoot_enemies_from_position": {
        "prefix": [
            "tasks.task_shoot_enemies_from_position",
            "task_shoot_enemies_from_position"
        ],
        "body": [
            "tasks.task_shoot_enemies_from_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SHOOT_ENEMIES_FROM_POSITION (0xCF8DB984) function."
    },
    "tasks.task_shoot_from_cover": {
        "prefix": [
            "tasks.task_shoot_from_cover",
            "task_shoot_from_cover"
        ],
        "body": [
            "tasks.task_shoot_from_cover(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SHOOT_FROM_COVER (0x506B8205) function."
    },
    "tasks.task_shoot_from_position": {
        "prefix": [
            "tasks.task_shoot_from_position",
            "task_shoot_from_position"
        ],
        "body": [
            "tasks.task_shoot_from_position(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SHOOT_FROM_POSITION (0x326316DC) function."
    },
    "tasks.task_stand_still": {
        "prefix": [
            "tasks.task_stand_still",
            "task_stand_still"
        ],
        "body": [
            "tasks.task_stand_still(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_STAND_STILL (0x6F80965D) function."
    },
    "tasks.task_surround_actor": {
        "prefix": [
            "tasks.task_surround_actor",
            "task_surround_actor"
        ],
        "body": [
            "tasks.task_surround_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SURROUND_ACTOR (0x5DD80BEF) function."
    },
    "tasks.task_taunt_actor": {
        "prefix": [
            "tasks.task_taunt_actor",
            "task_taunt_actor"
        ],
        "body": [
            "tasks.task_taunt_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_TAUNT_ACTOR (0x9043D092) function."
    },
    "tasks.task_taunt_actor_in_place": {
        "prefix": [
            "tasks.task_taunt_actor_in_place",
            "task_taunt_actor_in_place"
        ],
        "body": [
            "tasks.task_taunt_actor_in_place(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_TAUNT_ACTOR_IN_PLACE (0x030FB1FA) function."
    },
    "tasks.task_use_gringo": {
        "prefix": [
            "tasks.task_use_gringo",
            "task_use_gringo"
        ],
        "body": [
            "tasks.task_use_gringo(actor --[[ integer ]], gringo --[[ integer ]], unk2 --[[ string ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_USE_GRINGO (0xA0E003A7) function."
    },
    "tasks.task_use_lasso": {
        "prefix": [
            "tasks.task_use_lasso",
            "task_use_lasso"
        ],
        "body": [
            "tasks.task_use_lasso(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_USE_LASSO (0xC41AAF49) function."
    },
    "tasks.task_use_turret": {
        "prefix": [
            "tasks.task_use_turret",
            "task_use_turret"
        ],
        "body": [
            "tasks.task_use_turret(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_USE_TURRET (0x6484F21E) function."
    },
    "tasks.task_use_turret_against_coord": {
        "prefix": [
            "tasks.task_use_turret_against_coord",
            "task_use_turret_against_coord"
        ],
        "body": [
            "tasks.task_use_turret_against_coord(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_USE_TURRET_AGAINST_COORD (0x3B8DBA13) function."
    },
    "tasks.task_use_turret_against_object": {
        "prefix": [
            "tasks.task_use_turret_against_object",
            "task_use_turret_against_object"
        ],
        "body": [
            "tasks.task_use_turret_against_object(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_USE_TURRET_AGAINST_OBJECT (0x49EC6A04) function."
    },
    "tasks.task_vehicle_enter": {
        "prefix": [
            "tasks.task_vehicle_enter",
            "task_vehicle_enter"
        ],
        "body": [
            "tasks.task_vehicle_enter(actor --[[ integer ]], vehicle --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_VEHICLE_ENTER (0xB2CD5160) function."
    },
    "tasks.task_vehicle_enter_specific_location": {
        "prefix": [
            "tasks.task_vehicle_enter_specific_location",
            "task_vehicle_enter_specific_location"
        ],
        "body": [
            "tasks.task_vehicle_enter_specific_location(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_VEHICLE_ENTER_SPECIFIC_LOCATION (0xDC087173) function."
    },
    "tasks.task_vehicle_leave": {
        "prefix": [
            "tasks.task_vehicle_leave",
            "task_vehicle_leave"
        ],
        "body": [
            "tasks.task_vehicle_leave(unk0 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_VEHICLE_LEAVE (0x6C1218A4) function."
    },
    "tasks.task_wander": {
        "prefix": [
            "tasks.task_wander",
            "task_wander"
        ],
        "body": [
            "tasks.task_wander(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_WANDER (0x17BCA08E) function."
    },
    "tasks.task_wander_in_box": {
        "prefix": [
            "tasks.task_wander_in_box",
            "task_wander_in_box"
        ],
        "body": [
            "tasks.task_wander_in_box(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_WANDER_IN_BOX (0x6840D3C1) function."
    },
    "tasks.task_wander_in_volume": {
        "prefix": [
            "tasks.task_wander_in_volume",
            "task_wander_in_volume"
        ],
        "body": [
            "tasks.task_wander_in_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_WANDER_IN_VOLUME (0xA5F2BFAA) function."
    },
    "tasks.task_go_near_actor": {
        "prefix": [
            "tasks.task_go_near_actor",
            "task_go_near_actor"
        ],
        "body": [
            "tasks.task_go_near_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_GO_NEAR_ACTOR (0x3EB7590C) function."
    },
    "tasks.get_task_status": {
        "prefix": [
            "tasks.get_task_status",
            "get_task_status"
        ],
        "body": [
            "local result --[[ integer ]] = tasks.get_task_status(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::GET_TASK_STATUS (0xCCE01E8A) function."
    },
    "tasks.is_tasked_to_use_gringo_forever": {
        "prefix": [
            "tasks.is_tasked_to_use_gringo_forever",
            "is_tasked_to_use_gringo_forever"
        ],
        "body": [
            "local result --[[ integer ]] = tasks.is_tasked_to_use_gringo_forever(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::IS_TASKED_TO_USE_GRINGO_FOREVER (0x600A0EE4) function."
    },
    "tasks.get_nth_task_status": {
        "prefix": [
            "tasks.get_nth_task_status",
            "get_nth_task_status"
        ],
        "body": [
            "local result --[[ integer ]] = tasks.get_nth_task_status(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::GET_NTH_TASK_STATUS (0x016C6801) function."
    },
    "tasks.get_task_sequence_current_task_index": {
        "prefix": [
            "tasks.get_task_sequence_current_task_index",
            "get_task_sequence_current_task_index"
        ],
        "body": [
            "local result --[[ integer ]] = tasks.get_task_sequence_current_task_index(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::GET_TASK_SEQUENCE_CURRENT_TASK_INDEX (0xD062CBF6) function."
    },
    "tasks.get_task_next_point_on_path": {
        "prefix": [
            "tasks.get_task_next_point_on_path",
            "get_task_next_point_on_path"
        ],
        "body": [
            "local result --[[ integer ]] = tasks.get_task_next_point_on_path(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::GET_TASK_NEXT_POINT_ON_PATH (0xF726557C) function."
    },
    "tasks.task_clear": {
        "prefix": [
            "tasks.task_clear",
            "task_clear"
        ],
        "body": [
            "tasks.task_clear(unk0 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_CLEAR (0x16876A25) function."
    },
    "tasks.task_override_clear_movetype": {
        "prefix": [
            "tasks.task_override_clear_movetype",
            "task_override_clear_movetype"
        ],
        "body": [
            "tasks.task_override_clear_movetype(unk0 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_OVERRIDE_CLEAR_MOVETYPE (0x9B9C8628) function."
    },
    "tasks.task_override_clear_posture": {
        "prefix": [
            "tasks.task_override_clear_posture",
            "task_override_clear_posture"
        ],
        "body": [
            "tasks.task_override_clear_posture(unk0 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_OVERRIDE_CLEAR_POSTURE (0x5394CF3B) function."
    },
    "tasks.task_override_set_movetype": {
        "prefix": [
            "tasks.task_override_set_movetype",
            "task_override_set_movetype"
        ],
        "body": [
            "tasks.task_override_set_movetype(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_OVERRIDE_SET_MOVETYPE (0x172477F0) function."
    },
    "tasks.task_override_set_movespeed_absolute": {
        "prefix": [
            "tasks.task_override_set_movespeed_absolute",
            "task_override_set_movespeed_absolute"
        ],
        "body": [
            "tasks.task_override_set_movespeed_absolute(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_OVERRIDE_SET_MOVESPEED_ABSOLUTE (0xCE843315) function."
    },
    "tasks.task_override_set_movespeed_normalized": {
        "prefix": [
            "tasks.task_override_set_movespeed_normalized",
            "task_override_set_movespeed_normalized"
        ],
        "body": [
            "tasks.task_override_set_movespeed_normalized(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_OVERRIDE_SET_MOVESPEED_NORMALIZED (0x96F3BD31) function."
    },
    "tasks.task_override_set_posture": {
        "prefix": [
            "tasks.task_override_set_posture",
            "task_override_set_posture"
        ],
        "body": [
            "tasks.task_override_set_posture(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_OVERRIDE_SET_POSTURE (0x52D34567) function."
    },
    "tasks.task_priority_set": {
        "prefix": [
            "tasks.task_priority_set",
            "task_priority_set"
        ],
        "body": [
            "tasks.task_priority_set(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_PRIORITY_SET (0x3A95A656) function."
    },
    "tasks.task_sequence_open": {
        "prefix": [
            "tasks.task_sequence_open",
            "task_sequence_open"
        ],
        "body": [
            "local result --[[ integer ]] = tasks.task_sequence_open()"
        ],
        "description": "TASKS::TASK_SEQUENCE_OPEN (0x8DA34524) function."
    },
    "tasks.task_sequence_close": {
        "prefix": [
            "tasks.task_sequence_close",
            "task_sequence_close"
        ],
        "body": [
            "tasks.task_sequence_close()"
        ],
        "description": "TASKS::TASK_SEQUENCE_CLOSE (0x9EE3053B) function."
    },
    "tasks.task_sequence_release": {
        "prefix": [
            "tasks.task_sequence_release",
            "task_sequence_release"
        ],
        "body": [
            "tasks.task_sequence_release(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_SEQUENCE_RELEASE (0xB2D35E22) function."
    },
    "tasks.set_actor_face_style": {
        "prefix": [
            "tasks.set_actor_face_style",
            "set_actor_face_style"
        ],
        "body": [
            "tasks.set_actor_face_style(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::SET_ACTOR_FACE_STYLE (0x08654394) function."
    },
    "tasks.ai_set_enable_stickup_override": {
        "prefix": [
            "tasks.ai_set_enable_stickup_override",
            "ai_set_enable_stickup_override"
        ],
        "body": [
            "tasks.ai_set_enable_stickup_override(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::AI_SET_ENABLE_STICKUP_OVERRIDE (0x1436588F) function."
    },
    "tasks.ai_set_enable_horse_charge_reactions": {
        "prefix": [
            "tasks.ai_set_enable_horse_charge_reactions",
            "ai_set_enable_horse_charge_reactions"
        ],
        "body": [
            "tasks.ai_set_enable_horse_charge_reactions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::AI_SET_ENABLE_HORSE_CHARGE_REACTIONS (0xF3D88421) function."
    },
    "tasks.ai_set_enable_dead_body_reactions": {
        "prefix": [
            "tasks.ai_set_enable_dead_body_reactions",
            "ai_set_enable_dead_body_reactions"
        ],
        "body": [
            "tasks.ai_set_enable_dead_body_reactions(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::AI_SET_ENABLE_DEAD_BODY_REACTIONS (0x1978C111) function."
    },
    "tasks.task_failure_mode_set": {
        "prefix": [
            "tasks.task_failure_mode_set",
            "task_failure_mode_set"
        ],
        "body": [
            "tasks.task_failure_mode_set(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TASKS::TASK_FAILURE_MODE_SET (0x26EBE467) function."
    },
    "time.get_minutes_from_time_of_day": {
        "prefix": [
            "time.get_minutes_from_time_of_day",
            "get_minutes_from_time_of_day"
        ],
        "body": [
            "local result --[[ integer ]] = time.get_minutes_from_time_of_day(unk0 --[[ integer ]])"
        ],
        "description": "TIME::GET_MINUTES_FROM_TIME_OF_DAY (0x7C3D1193) function."
    },
    "time.get_time_of_day_as_int": {
        "prefix": [
            "time.get_time_of_day_as_int",
            "get_time_of_day_as_int"
        ],
        "body": [
            "local result --[[ integer ]] = time.get_time_of_day_as_int()"
        ],
        "description": "TIME::GET_TIME_OF_DAY_AS_INT (0x061A2A3C) function."
    },
    "time.get_total_minutes": {
        "prefix": [
            "time.get_total_minutes",
            "get_total_minutes"
        ],
        "body": [
            "local result --[[ integer ]] = time.get_total_minutes(unk0 --[[ integer ]])"
        ],
        "description": "TIME::GET_TOTAL_MINUTES (0xC52F07A8) function."
    },
    "time.convert_time_of_day_to_int": {
        "prefix": [
            "time.convert_time_of_day_to_int",
            "convert_time_of_day_to_int"
        ],
        "body": [
            "local result --[[ integer ]] = time.convert_time_of_day_to_int(unk0 --[[ integer ]])"
        ],
        "description": "TIME::CONVERT_TIME_OF_DAY_TO_INT (0x57FC0E16) function."
    },
    "time.set_day": {
        "prefix": [
            "time.set_day",
            "set_day"
        ],
        "body": [
            "time.set_day(day --[[ integer ]])"
        ],
        "description": "TIME::SET_DAY (0x0EBBDC34) function."
    },
    "time.get_hour": {
        "prefix": [
            "time.get_hour",
            "get_hour"
        ],
        "body": [
            "local result --[[ integer ]] = time.get_hour(packedtime --[[ integer ]])"
        ],
        "description": "TIME::GET_HOUR (0x2765C37E) function."
    },
    "time.get_minute": {
        "prefix": [
            "time.get_minute",
            "get_minute"
        ],
        "body": [
            "local result --[[ integer ]] = time.get_minute(packedtime --[[ integer ]])"
        ],
        "description": "TIME::GET_MINUTE (0x1020BF6D) function."
    },
    "time.get_second": {
        "prefix": [
            "time.get_second",
            "get_second"
        ],
        "body": [
            "local result --[[ integer ]] = time.get_second(packedtime --[[ integer ]])"
        ],
        "description": "TIME::GET_SECOND (0xBA8077CF) function."
    },
    "time.get_day": {
        "prefix": [
            "time.get_day",
            "get_day"
        ],
        "body": [
            "local result --[[ integer ]] = time.get_day(packedtime --[[ integer ]])"
        ],
        "description": "TIME::GET_DAY (0x63D13FB0) function."
    },
    "time.add_time": {
        "prefix": [
            "time.add_time",
            "add_time"
        ],
        "body": [
            "time.add_time(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "TIME::ADD_TIME (0xBA4FEEBC) function."
    },
    "time.add_time_using_time_of_day": {
        "prefix": [
            "time.add_time_using_time_of_day",
            "add_time_using_time_of_day"
        ],
        "body": [
            "time.add_time_using_time_of_day(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TIME::ADD_TIME_USING_TIME_OF_DAY (0x2F7CB0E3) function."
    },
    "time.get_time_of_day": {
        "prefix": [
            "time.get_time_of_day",
            "get_time_of_day"
        ],
        "body": [
            "local result --[[ integer ]] = time.get_time_of_day()"
        ],
        "description": "TIME::GET_TIME_OF_DAY (0x4E1DE7A5) function."
    },
    "time.make_time_of_day": {
        "prefix": [
            "time.make_time_of_day",
            "make_time_of_day"
        ],
        "body": [
            "local result --[[ integer ]] = time.make_time_of_day(hour --[[ integer ]], minute --[[ integer ]], second --[[ integer ]])"
        ],
        "description": "TIME::MAKE_TIME_OF_DAY (0xC09EAB6E) function."
    },
    "time.make_time_of_day_ex": {
        "prefix": [
            "time.make_time_of_day_ex",
            "make_time_of_day_ex"
        ],
        "body": [
            "local result --[[ integer ]] = time.make_time_of_day_ex(day --[[ integer ]], hour --[[ integer ]], minute --[[ integer ]], second --[[ integer ]])"
        ],
        "description": "TIME::MAKE_TIME_OF_DAY_EX (0x0E453CF0) function."
    },
    "time.is_later_than": {
        "prefix": [
            "time.is_later_than",
            "is_later_than"
        ],
        "body": [
            "local result --[[ integer ]] = time.is_later_than(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TIME::IS_LATER_THAN (0x2DB3AC0F) function."
    },
    "time.is_earlier_than": {
        "prefix": [
            "time.is_earlier_than",
            "is_earlier_than"
        ],
        "body": [
            "local result --[[ integer ]] = time.is_earlier_than(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "TIME::IS_EARLIER_THAN (0x9C9529D8) function."
    },
    "time.time_is_in_range": {
        "prefix": [
            "time.time_is_in_range",
            "time_is_in_range"
        ],
        "body": [
            "local result --[[ integer ]] = time.time_is_in_range(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "TIME::TIME_IS_IN_RANGE (0x243AF970) function."
    },
    "time.advance_time_hours": {
        "prefix": [
            "time.advance_time_hours",
            "advance_time_hours"
        ],
        "body": [
            "time.advance_time_hours(unk0 --[[ integer ]])"
        ],
        "description": "TIME::ADVANCE_TIME_HOURS (0xD4FECCBC) function."
    },
    "time.set_time_of_day": {
        "prefix": [
            "time.set_time_of_day",
            "set_time_of_day"
        ],
        "body": [
            "time.set_time_of_day(packedtime --[[ integer ]])"
        ],
        "description": "TIME::SET_TIME_OF_DAY (0xAD03186C) function."
    },
    "time.set_time_acceleration": {
        "prefix": [
            "time.set_time_acceleration",
            "set_time_acceleration"
        ],
        "body": [
            "time.set_time_acceleration(value --[[ number ]])"
        ],
        "description": "TIME::SET_TIME_ACCELERATION (0xB98C7AA5) function."
    },
    "time.get_time_acceleration": {
        "prefix": [
            "time.get_time_acceleration",
            "get_time_acceleration"
        ],
        "body": [
            "local result --[[ number ]] = time.get_time_acceleration()"
        ],
        "description": "TIME::GET_TIME_ACCELERATION (0xC87F16A8) function."
    },
    "time.cancel_time_warp": {
        "prefix": [
            "time.cancel_time_warp",
            "cancel_time_warp"
        ],
        "body": [
            "time.cancel_time_warp(unk0 --[[ integer ]])"
        ],
        "description": "TIME::CANCEL_TIME_WARP (0xAF50E8A1) function."
    },
    "turret.is_using_turret": {
        "prefix": [
            "turret.is_using_turret",
            "is_using_turret"
        ],
        "body": [
            "local result --[[ boolean ]] = turret.is_using_turret(unk0 --[[ integer ]])"
        ],
        "description": "TURRET::IS_USING_TURRET (0x2C5983E0) function."
    },
    "ui.ui_stackpush": {
        "prefix": [
            "ui.ui_stackpush",
            "ui_stackpush"
        ],
        "body": [
            "ui.ui_stackpush(scaleformlayer --[[ string ]])"
        ],
        "description": "UI::UI_STACKPUSH (0xB1A2028A) function."
    },
    "ui.ui_pop": {
        "prefix": [
            "ui.ui_pop",
            "ui_pop"
        ],
        "body": [
            "ui.ui_pop(unk0 --[[ string ]])"
        ],
        "description": "UI::UI_POP (0xBEE5CF6C) function."
    },
    "ui.ui_push": {
        "prefix": [
            "ui.ui_push",
            "ui_push"
        ],
        "body": [
            "ui.ui_push(unk0 --[[ string ]])"
        ],
        "description": "UI::UI_PUSH (0x97C5EFC8) function."
    },
    "ui.ui_goto": {
        "prefix": [
            "ui.ui_goto",
            "ui_goto"
        ],
        "body": [
            "ui.ui_goto(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_GOTO (0xA0159C77) function."
    },
    "ui.ui_exit": {
        "prefix": [
            "ui.ui_exit",
            "ui_exit"
        ],
        "body": [
            "ui.ui_exit(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_EXIT (0x2DF89C2E) function."
    },
    "ui.ui_show": {
        "prefix": [
            "ui.ui_show",
            "ui_show"
        ],
        "body": [
            "ui.ui_show(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_SHOW (0xD1D1D467) function."
    },
    "ui.ui_refresh": {
        "prefix": [
            "ui.ui_refresh",
            "ui_refresh"
        ],
        "body": [
            "ui.ui_refresh(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_REFRESH (0xFAC3DF71) function."
    },
    "ui.ui_hide": {
        "prefix": [
            "ui.ui_hide",
            "ui_hide"
        ],
        "body": [
            "ui.ui_hide(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_HIDE (0x7508E7F3) function."
    },
    "ui.ui_enable": {
        "prefix": [
            "ui.ui_enable",
            "ui_enable"
        ],
        "body": [
            "ui.ui_enable(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_ENABLE (0xE576DCAD) function."
    },
    "ui.ui_disable": {
        "prefix": [
            "ui.ui_disable",
            "ui_disable"
        ],
        "body": [
            "ui.ui_disable(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_DISABLE (0xC4532F84) function."
    },
    "ui.ui_isactive": {
        "prefix": [
            "ui.ui_isactive",
            "ui_isactive"
        ],
        "body": [
            "local result --[[ boolean ]] = ui.ui_isactive(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_ISACTIVE (0xB1FDB70D) function."
    },
    "ui.ui_activate": {
        "prefix": [
            "ui.ui_activate",
            "ui_activate"
        ],
        "body": [
            "ui.ui_activate(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_ACTIVATE (0xD11BD55A) function."
    },
    "ui.ui_deactivate": {
        "prefix": [
            "ui.ui_deactivate",
            "ui_deactivate"
        ],
        "body": [
            "ui.ui_deactivate(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_DEACTIVATE (0xCA35BB5E) function."
    },
    "ui.ui_exclude": {
        "prefix": [
            "ui.ui_exclude",
            "ui_exclude"
        ],
        "body": [
            "ui.ui_exclude(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_EXCLUDE (0x4A005F2A) function."
    },
    "ui.ui_include": {
        "prefix": [
            "ui.ui_include",
            "ui_include"
        ],
        "body": [
            "ui.ui_include(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_INCLUDE (0x209255AD) function."
    },
    "ui.ui_isfocused": {
        "prefix": [
            "ui.ui_isfocused",
            "ui_isfocused"
        ],
        "body": [
            "local result --[[ boolean ]] = ui.ui_isfocused(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_ISFOCUSED (0x6F2509E8) function."
    },
    "ui.ui_focus": {
        "prefix": [
            "ui.ui_focus",
            "ui_focus"
        ],
        "body": [
            "ui.ui_focus(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_FOCUS (0x699CC85E) function."
    },
    "ui.ui_unfocus": {
        "prefix": [
            "ui.ui_unfocus",
            "ui_unfocus"
        ],
        "body": [
            "ui.ui_unfocus(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_UNFOCUS (0x0ACEA059) function."
    },
    "ui.ui_restore": {
        "prefix": [
            "ui.ui_restore",
            "ui_restore"
        ],
        "body": [
            "ui.ui_restore(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_RESTORE (0x7ADB2BE7) function."
    },
    "ui.ui_suppress": {
        "prefix": [
            "ui.ui_suppress",
            "ui_suppress"
        ],
        "body": [
            "ui.ui_suppress(uilayer --[[ string ]])"
        ],
        "description": "UI::UI_SUPPRESS (0x182EC44A) function."
    },
    "ui.ui_get_selected_index": {
        "prefix": [
            "ui.ui_get_selected_index",
            "ui_get_selected_index"
        ],
        "body": [
            "local result --[[ integer ]] = ui.ui_get_selected_index(menuid --[[ string ]], unk0 --[[ boolean ]])"
        ],
        "description": "UI::UI_GET_SELECTED_INDEX (0x8B63A008) function."
    },
    "ui.ui_set_style": {
        "prefix": [
            "ui.ui_set_style",
            "ui_set_style"
        ],
        "body": [
            "ui.ui_set_style(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_SET_STYLE (0x1ECD8B18) function."
    },
    "ui.ui_add_child": {
        "prefix": [
            "ui.ui_add_child",
            "ui_add_child"
        ],
        "body": [
            "ui.ui_add_child(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_ADD_CHILD (0x13F156A4) function."
    },
    "ui.ui_set_data": {
        "prefix": [
            "ui.ui_set_data",
            "ui_set_data"
        ],
        "body": [
            "ui.ui_set_data(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "UI::UI_SET_DATA (0x00B89B46) function."
    },
    "ui.ui_get_num_children": {
        "prefix": [
            "ui.ui_get_num_children",
            "ui_get_num_children"
        ],
        "body": [
            "local result --[[ integer ]] = ui.ui_get_num_children(unk0 --[[ integer ]])"
        ],
        "description": "UI::UI_GET_NUM_CHILDREN (0xD3C7AEFA) function."
    },
    "ui.ui_anim_setup": {
        "prefix": [
            "ui.ui_anim_setup",
            "ui_anim_setup"
        ],
        "body": [
            "ui.ui_anim_setup(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "UI::UI_ANIM_SETUP (0xCBDE38C6) function."
    },
    "ui.ui_anim_restart": {
        "prefix": [
            "ui.ui_anim_restart",
            "ui_anim_restart"
        ],
        "body": [
            "ui.ui_anim_restart(unk0 --[[ integer ]])"
        ],
        "description": "UI::UI_ANIM_RESTART (0x4068D2E4) function."
    },
    "ui.ui_anim_get_time": {
        "prefix": [
            "ui.ui_anim_get_time",
            "ui_anim_get_time"
        ],
        "body": [
            "local result --[[ integer ]] = ui.ui_anim_get_time(unk0 --[[ integer ]])"
        ],
        "description": "UI::UI_ANIM_GET_TIME (0x7EB1ED99) function."
    },
    "ui.ui_register_streaming_texture": {
        "prefix": [
            "ui.ui_register_streaming_texture",
            "ui_register_streaming_texture"
        ],
        "body": [
            "ui.ui_register_streaming_texture(dir --[[ string ]], tex --[[ string ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "UI::UI_REGISTER_STREAMING_TEXTURE (0x1F9EE9E1) function."
    },
    "ui.ui_set_string": {
        "prefix": [
            "ui.ui_set_string",
            "ui_set_string"
        ],
        "body": [
            "ui.ui_set_string(entry --[[ string ]], string --[[ string ]])"
        ],
        "description": "UI::UI_SET_STRING (0xE457546C) function."
    },
    "ui.ui_set_string_format": {
        "prefix": [
            "ui.ui_set_string_format",
            "ui_set_string_format"
        ],
        "body": [
            "ui.ui_set_string_format(gxtname --[[ string ]], format --[[ string ]], str --[[ string ]])"
        ],
        "description": "UI::UI_SET_STRING_FORMAT (0xEDA84121) function."
    },
    "ui.ui_set_money": {
        "prefix": [
            "ui.ui_set_money",
            "ui_set_money"
        ],
        "body": [
            "ui.ui_set_money(gxtentry1 --[[ string ]], gxtentry2 --[[ string ]], amount --[[ integer ]])"
        ],
        "description": "UI::UI_SET_MONEY (0xF71BD93A) function."
    },
    "ui.ui_get_string": {
        "prefix": [
            "ui.ui_get_string",
            "ui_get_string"
        ],
        "body": [
            "local result --[[ string ]] = ui.ui_get_string(gxtentry --[[ string ]])"
        ],
        "description": "UI::UI_GET_STRING (0xCCCFF80B) function."
    },
    "ui.ui_get_string_by_hash": {
        "prefix": [
            "ui.ui_get_string_by_hash",
            "ui_get_string_by_hash"
        ],
        "body": [
            "local result --[[ integer ]] = ui.ui_get_string_by_hash(unk0 --[[ integer ]])"
        ],
        "description": "UI::UI_GET_STRING_BY_HASH (0xBA89F5EA) function."
    },
    "ui.ui_messagebox_set_description": {
        "prefix": [
            "ui.ui_messagebox_set_description",
            "ui_messagebox_set_description"
        ],
        "body": [
            "ui.ui_messagebox_set_description(ui_id --[[ string ]], new_text --[[ string ]])"
        ],
        "description": "UI::UI_MESSAGEBOX_SET_DESCRIPTION (0x591339B9) function."
    },
    "ui.ui_label_set_text": {
        "prefix": [
            "ui.ui_label_set_text",
            "ui_label_set_text"
        ],
        "body": [
            "ui.ui_label_set_text(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_LABEL_SET_TEXT (0xB3FC8CB7) function."
    },
    "ui.ui_label_set_value": {
        "prefix": [
            "ui.ui_label_set_value",
            "ui_label_set_value"
        ],
        "body": [
            "ui.ui_label_set_value(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_LABEL_SET_VALUE (0xDF50D8DE) function."
    },
    "ui.ai_set_special_areas_time": {
        "prefix": [
            "ui.ai_set_special_areas_time",
            "ai_set_special_areas_time"
        ],
        "body": [
            "ui.ai_set_special_areas_time(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::AI_SET_SPECIAL_AREAS_TIME (0xF53EB511) function."
    },
    "ui.ui_button_set_text": {
        "prefix": [
            "ui.ui_button_set_text",
            "ui_button_set_text"
        ],
        "body": [
            "ui.ui_button_set_text(name --[[ string ]], str --[[ string ]])"
        ],
        "description": "UI::UI_BUTTON_SET_TEXT (0x3DB16A3D) function."
    },
    "ui.ui_texture_set_name": {
        "prefix": [
            "ui.ui_texture_set_name",
            "ui_texture_set_name"
        ],
        "body": [
            "ui.ui_texture_set_name(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_TEXTURE_SET_NAME (0x9A56C3F3) function."
    },
    "ui.ui_texture_set_hash": {
        "prefix": [
            "ui.ui_texture_set_hash",
            "ui_texture_set_hash"
        ],
        "body": [
            "ui.ui_texture_set_hash(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_TEXTURE_SET_HASH (0x573BEF3B) function."
    },
    "ui.ui_set_text": {
        "prefix": [
            "ui.ui_set_text",
            "ui_set_text"
        ],
        "body": [
            "ui.ui_set_text(entry --[[ string ]], text --[[ string ]])"
        ],
        "description": "UI::UI_SET_TEXT (0xC464D5DD) function."
    },
    "ui.ui_set_text_hash": {
        "prefix": [
            "ui.ui_set_text_hash",
            "ui_set_text_hash"
        ],
        "body": [
            "ui.ui_set_text_hash(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_SET_TEXT_HASH (0x06FD03D2) function."
    },
    "ui.ui_set_progress_bar_val": {
        "prefix": [
            "ui.ui_set_progress_bar_val",
            "ui_set_progress_bar_val"
        ],
        "body": [
            "ui.ui_set_progress_bar_val(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_SET_PROGRESS_BAR_VAL (0xE5D53722) function."
    },
    "ui.ui_set_progress_bar_change": {
        "prefix": [
            "ui.ui_set_progress_bar_change",
            "ui_set_progress_bar_change"
        ],
        "body": [
            "ui.ui_set_progress_bar_change(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_SET_PROGRESS_BAR_CHANGE (0xDF4627D1) function."
    },
    "ui._ui_set_auto_exit_time": {
        "prefix": [
            "ui._ui_set_auto_exit_time",
            "_ui_set_auto_exit_time"
        ],
        "body": [
            "ui._ui_set_auto_exit_time(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::_UI_SET_AUTO_EXIT_TIME (0xD792B93B) function."
    },
    "ui.ui_set_icon": {
        "prefix": [
            "ui.ui_set_icon",
            "ui_set_icon"
        ],
        "body": [
            "ui.ui_set_icon(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "UI::UI_SET_ICON (0x191BA4DF) function."
    },
    "ui.ui_is_fuimovie_loaded": {
        "prefix": [
            "ui.ui_is_fuimovie_loaded",
            "ui_is_fuimovie_loaded"
        ],
        "body": [
            "local result --[[ integer ]] = ui.ui_is_fuimovie_loaded(unk0 --[[ integer ]])"
        ],
        "description": "UI::UI_IS_FUIMOVIE_LOADED (0x9D20BDC4) function."
    },
    "ui_hud.ui_addicon": {
        "prefix": [
            "ui_hud.ui_addicon",
            "ui_addicon"
        ],
        "body": [
            "ui_hud.ui_addicon(iconid --[[ integer ]], iconname --[[ string ]])"
        ],
        "description": "UI_HUD::UI_ADDICON (0x724B4E9B) function."
    },
    "vehicles.get_actor_most_recent_vehicle": {
        "prefix": [
            "vehicles.get_actor_most_recent_vehicle",
            "get_actor_most_recent_vehicle"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_actor_most_recent_vehicle(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_ACTOR_MOST_RECENT_VEHICLE (0x58745E4B) function."
    },
    "vehicles.is_actor_on_train": {
        "prefix": [
            "vehicles.is_actor_on_train",
            "is_actor_on_train"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_actor_on_train(actor --[[ integer ]], unk0 --[[ boolean ]])"
        ],
        "description": "VEHICLES::IS_ACTOR_ON_TRAIN (0xD36E2D54) function."
    },
    "vehicles.is_actor_on_boat": {
        "prefix": [
            "vehicles.is_actor_on_boat",
            "is_actor_on_boat"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_actor_on_boat(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_ACTOR_ON_BOAT (0x9EE8AB59) function."
    },
    "vehicles.is_actor_vehicle": {
        "prefix": [
            "vehicles.is_actor_vehicle",
            "is_actor_vehicle"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_actor_vehicle(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_ACTOR_VEHICLE (0x9751B167) function."
    },
    "vehicles.is_actor_draft_vehicle": {
        "prefix": [
            "vehicles.is_actor_draft_vehicle",
            "is_actor_draft_vehicle"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_actor_draft_vehicle(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_ACTOR_DRAFT_VEHICLE (0x5D41D423) function."
    },
    "vehicles.is_actor_driving_vehicle": {
        "prefix": [
            "vehicles.is_actor_driving_vehicle",
            "is_actor_driving_vehicle"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_actor_driving_vehicle(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_ACTOR_DRIVING_VEHICLE (0xDC99C124) function."
    },
    "vehicles.is_actor_jacking_vehicle": {
        "prefix": [
            "vehicles.is_actor_jacking_vehicle",
            "is_actor_jacking_vehicle"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_actor_jacking_vehicle(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_ACTOR_JACKING_VEHICLE (0x1BA90C92) function."
    },
    "vehicles.is_actor_inside_vehicle": {
        "prefix": [
            "vehicles.is_actor_inside_vehicle",
            "is_actor_inside_vehicle"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_actor_inside_vehicle(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_ACTOR_INSIDE_VEHICLE (0x12325AE7) function."
    },
    "vehicles.is_actor_riding_vehicle": {
        "prefix": [
            "vehicles.is_actor_riding_vehicle",
            "is_actor_riding_vehicle"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_actor_riding_vehicle(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_ACTOR_RIDING_VEHICLE (0xDE19A1F9) function."
    },
    "vehicles.get_vehicle": {
        "prefix": [
            "vehicles.get_vehicle",
            "get_vehicle"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_vehicle(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_VEHICLE (0xA0936EB6) function."
    },
    "vehicles.get_actor_vehicle_state": {
        "prefix": [
            "vehicles.get_actor_vehicle_state",
            "get_actor_vehicle_state"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_actor_vehicle_state(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_ACTOR_VEHICLE_STATE (0xCEA2449F) function."
    },
    "vehicles.get_num_drafted_actors": {
        "prefix": [
            "vehicles.get_num_drafted_actors",
            "get_num_drafted_actors"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_num_drafted_actors(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_NUM_DRAFTED_ACTORS (0xDAB0D820) function."
    },
    "vehicles.set_actor_in_vehicle": {
        "prefix": [
            "vehicles.set_actor_in_vehicle",
            "set_actor_in_vehicle"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.set_actor_in_vehicle(actor --[[ integer ]], vehicle --[[ integer ]], seatid --[[ integer ]])"
        ],
        "description": "VEHICLES::SET_ACTOR_IN_VEHICLE (0x32974F99) function."
    },
    "vehicles.get_draft_actor": {
        "prefix": [
            "vehicles.get_draft_actor",
            "get_draft_actor"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_draft_actor(harnessid --[[ integer ]], actor --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_DRAFT_ACTOR (0x48D5121D) function."
    },
    "vehicles.is_actor_drafted": {
        "prefix": [
            "vehicles.is_actor_drafted",
            "is_actor_drafted"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_actor_drafted(actor --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_ACTOR_DRAFTED (0xEF2C329D) function."
    },
    "vehicles.get_actor_drafted_to": {
        "prefix": [
            "vehicles.get_actor_drafted_to",
            "get_actor_drafted_to"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_actor_drafted_to(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_ACTOR_DRAFTED_TO (0xD89C14BA) function."
    },
    "vehicles.is_seat_occupied": {
        "prefix": [
            "vehicles.is_seat_occupied",
            "is_seat_occupied"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.is_seat_occupied(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_SEAT_OCCUPIED (0xF7400A47) function."
    },
    "vehicles.get_actor_in_vehicle_seat": {
        "prefix": [
            "vehicles.get_actor_in_vehicle_seat",
            "get_actor_in_vehicle_seat"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_actor_in_vehicle_seat(vehicle --[[ integer ]], seatid --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_ACTOR_IN_VEHICLE_SEAT (0xE8E94C3B) function."
    },
    "vehicles.get_num_available_seats": {
        "prefix": [
            "vehicles.get_num_available_seats",
            "get_num_available_seats"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_num_available_seats(vehicle --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_NUM_AVAILABLE_SEATS (0x3ACE659E) function."
    },
    "vehicles.get_num_occupied_seats": {
        "prefix": [
            "vehicles.get_num_occupied_seats",
            "get_num_occupied_seats"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_num_occupied_seats(vehicle --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_NUM_OCCUPIED_SEATS (0xF0354E46) function."
    },
    "vehicles.enable_vehicle_seat": {
        "prefix": [
            "vehicles.enable_vehicle_seat",
            "enable_vehicle_seat"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.enable_vehicle_seat(vehicle --[[ integer ]], seatid --[[ integer ]], enable --[[ boolean ]])"
        ],
        "description": "VEHICLES::ENABLE_VEHICLE_SEAT (0x6AC8234D) function."
    },
    "vehicles.stop_vehicle": {
        "prefix": [
            "vehicles.stop_vehicle",
            "stop_vehicle"
        ],
        "body": [
            "vehicles.stop_vehicle(vehicle --[[ integer ]])"
        ],
        "description": "VEHICLES::STOP_VEHICLE (0xC2232D29) function."
    },
    "vehicles.start_vehicle": {
        "prefix": [
            "vehicles.start_vehicle",
            "start_vehicle"
        ],
        "body": [
            "vehicles.start_vehicle(vehicle --[[ integer ]])"
        ],
        "description": "VEHICLES::START_VEHICLE (0xE4442AB2) function."
    },
    "vehicles.accessorize_vehicle_horses": {
        "prefix": [
            "vehicles.accessorize_vehicle_horses",
            "accessorize_vehicle_horses"
        ],
        "body": [
            "vehicles.accessorize_vehicle_horses(vehicle --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::ACCESSORIZE_VEHICLE_HORSES (0xB12584C8) function."
    },
    "vehicles.get_num_draft_positions": {
        "prefix": [
            "vehicles.get_num_draft_positions",
            "get_num_draft_positions"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_num_draft_positions(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_NUM_DRAFT_POSITIONS (0xD85CA776) function."
    },
    "vehicles.attach_draft_to_vehicle": {
        "prefix": [
            "vehicles.attach_draft_to_vehicle",
            "attach_draft_to_vehicle"
        ],
        "body": [
            "vehicles.attach_draft_to_vehicle(actor --[[ integer ]], vehicle --[[ integer ]], position --[[ integer ]], unk --[[ boolean ]])"
        ],
        "description": "VEHICLES::ATTACH_DRAFT_TO_VEHICLE (0xB0A81226) function."
    },
    "vehicles.detach_draft_from_vehicle_by_actor": {
        "prefix": [
            "vehicles.detach_draft_from_vehicle_by_actor",
            "detach_draft_from_vehicle_by_actor"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.detach_draft_from_vehicle_by_actor(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "VEHICLES::DETACH_DRAFT_FROM_VEHICLE_BY_ACTOR (0xF763B06D) function."
    },
    "vehicles.detach_draft_from_vehicle_by_index": {
        "prefix": [
            "vehicles.detach_draft_from_vehicle_by_index",
            "detach_draft_from_vehicle_by_index"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.detach_draft_from_vehicle_by_index(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::DETACH_DRAFT_FROM_VEHICLE_BY_INDEX (0x8C3B533B) function."
    },
    "vehicles.train_create_new_train": {
        "prefix": [
            "vehicles.train_create_new_train",
            "train_create_new_train"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_create_new_train(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_CREATE_NEW_TRAIN (0x8533AC9D) function."
    },
    "vehicles.train_destroy_train": {
        "prefix": [
            "vehicles.train_destroy_train",
            "train_destroy_train"
        ],
        "body": [
            "vehicles.train_destroy_train(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_DESTROY_TRAIN (0x74CECEB3) function."
    },
    "vehicles.train_release_train": {
        "prefix": [
            "vehicles.train_release_train",
            "train_release_train"
        ],
        "body": [
            "vehicles.train_release_train(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_RELEASE_TRAIN (0x87082991) function."
    },
    "vehicles.train_is_valid": {
        "prefix": [
            "vehicles.train_is_valid",
            "train_is_valid"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_is_valid(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_IS_VALID (0x7224CD9B) function."
    },
    "vehicles.train_add_train_car_from_enum": {
        "prefix": [
            "vehicles.train_add_train_car_from_enum",
            "train_add_train_car_from_enum"
        ],
        "body": [
            "vehicles.train_add_train_car_from_enum(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_ADD_TRAIN_CAR_FROM_ENUM (0xA7A672FA) function."
    },
    "vehicles.train_get_velocity": {
        "prefix": [
            "vehicles.train_get_velocity",
            "train_get_velocity"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_get_velocity(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_GET_VELOCITY (0xF2373407) function."
    },
    "vehicles.train_set_target_pos": {
        "prefix": [
            "vehicles.train_set_target_pos",
            "train_set_target_pos"
        ],
        "body": [
            "vehicles.train_set_target_pos(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_TARGET_POS (0x9091E0A3) function."
    },
    "vehicles.train_set_speed": {
        "prefix": [
            "vehicles.train_set_speed",
            "train_set_speed"
        ],
        "body": [
            "vehicles.train_set_speed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_SPEED (0x9D93961C) function."
    },
    "vehicles.train_set_target_speed": {
        "prefix": [
            "vehicles.train_set_target_speed",
            "train_set_target_speed"
        ],
        "body": [
            "vehicles.train_set_target_speed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_TARGET_SPEED (0xEA2A8B79) function."
    },
    "vehicles.train_set_max_accel": {
        "prefix": [
            "vehicles.train_set_max_accel",
            "train_set_max_accel"
        ],
        "body": [
            "vehicles.train_set_max_accel(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_MAX_ACCEL (0xB5383B93) function."
    },
    "vehicles.train_set_max_decel": {
        "prefix": [
            "vehicles.train_set_max_decel",
            "train_set_max_decel"
        ],
        "body": [
            "vehicles.train_set_max_decel(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_MAX_DECEL (0xB7A4D403) function."
    },
    "vehicles.train_set_engine_enabled": {
        "prefix": [
            "vehicles.train_set_engine_enabled",
            "train_set_engine_enabled"
        ],
        "body": [
            "vehicles.train_set_engine_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_ENGINE_ENABLED (0x6C62C522) function."
    },
    "vehicles.train_get_num_cars": {
        "prefix": [
            "vehicles.train_get_num_cars",
            "train_get_num_cars"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_get_num_cars(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_GET_NUM_CARS (0xFB2F9989) function."
    },
    "vehicles.train_set_position_direction": {
        "prefix": [
            "vehicles.train_set_position_direction",
            "train_set_position_direction"
        ],
        "body": [
            "vehicles.train_set_position_direction(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_POSITION_DIRECTION (0x9C488CB3) function."
    },
    "vehicles.train_set_position_direction_precisely": {
        "prefix": [
            "vehicles.train_set_position_direction_precisely",
            "train_set_position_direction_precisely"
        ],
        "body": [
            "vehicles.train_set_position_direction_precisely(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_POSITION_DIRECTION_PRECISELY (0x268D546D) function."
    },
    "vehicles.train_set_fx": {
        "prefix": [
            "vehicles.train_set_fx",
            "train_set_fx"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_set_fx(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_FX (0xBA1620AF) function."
    },
    "vehicles.train_play_whistle_sequence": {
        "prefix": [
            "vehicles.train_play_whistle_sequence",
            "train_play_whistle_sequence"
        ],
        "body": [
            "vehicles.train_play_whistle_sequence(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_PLAY_WHISTLE_SEQUENCE (0x1440C806) function."
    },
    "vehicles.train_enable_visual_debug": {
        "prefix": [
            "vehicles.train_enable_visual_debug",
            "train_enable_visual_debug"
        ],
        "body": [
            "vehicles.train_enable_visual_debug(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_ENABLE_VISUAL_DEBUG (0x4DF9283F) function."
    },
    "vehicles.train_destroy_car": {
        "prefix": [
            "vehicles.train_destroy_car",
            "train_destroy_car"
        ],
        "body": [
            "vehicles.train_destroy_car(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_DESTROY_CAR (0x2040FB19) function."
    },
    "vehicles.train_get_lod_level": {
        "prefix": [
            "vehicles.train_get_lod_level",
            "train_get_lod_level"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_get_lod_level(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_GET_LOD_LEVEL (0xD8E0EF01) function."
    },
    "vehicles.train_force_high_lod": {
        "prefix": [
            "vehicles.train_force_high_lod",
            "train_force_high_lod"
        ],
        "body": [
            "vehicles.train_force_high_lod(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_FORCE_HIGH_LOD (0x43E6DCAC) function."
    },
    "vehicles.train_get_car": {
        "prefix": [
            "vehicles.train_get_car",
            "train_get_car"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_get_car(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_GET_CAR (0x41EF2EED) function."
    },
    "vehicles.train_set_particle_effects_enabled": {
        "prefix": [
            "vehicles.train_set_particle_effects_enabled",
            "train_set_particle_effects_enabled"
        ],
        "body": [
            "vehicles.train_set_particle_effects_enabled(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_PARTICLE_EFFECTS_ENABLED (0x7CFD539A) function."
    },
    "vehicles.train_set_autopilot_enable": {
        "prefix": [
            "vehicles.train_set_autopilot_enable",
            "train_set_autopilot_enable"
        ],
        "body": [
            "vehicles.train_set_autopilot_enable(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_AUTOPILOT_ENABLE (0xADE865AE) function."
    },
    "vehicles.train_set_audio_enable": {
        "prefix": [
            "vehicles.train_set_audio_enable",
            "train_set_audio_enable"
        ],
        "body": [
            "vehicles.train_set_audio_enable(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_AUDIO_ENABLE (0x6A9C8E5B) function."
    },
    "vehicles.train_set_junction_state": {
        "prefix": [
            "vehicles.train_set_junction_state",
            "train_set_junction_state"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_set_junction_state(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_SET_JUNCTION_STATE (0x1F9F8C04) function."
    },
    "vehicles.train_get_curve_network_point": {
        "prefix": [
            "vehicles.train_get_curve_network_point",
            "train_get_curve_network_point"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_get_curve_network_point(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_GET_CURVE_NETWORK_POINT (0xC5A04EC7) function."
    },
    "vehicles.train_get_nearest_poi_distance": {
        "prefix": [
            "vehicles.train_get_nearest_poi_distance",
            "train_get_nearest_poi_distance"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.train_get_nearest_poi_distance(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_GET_NEAREST_POI_DISTANCE (0x6FC1847D) function."
    },
    "vehicles.train_get_position": {
        "prefix": [
            "vehicles.train_get_position",
            "train_get_position"
        ],
        "body": [
            "vehicles.train_get_position(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::TRAIN_GET_POSITION (0x06D055AB) function."
    },
    "vehicles.set_boat_extra_steer": {
        "prefix": [
            "vehicles.set_boat_extra_steer",
            "set_boat_extra_steer"
        ],
        "body": [
            "vehicles.set_boat_extra_steer(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VEHICLES::SET_BOAT_EXTRA_STEER (0x6BB8BCFB) function."
    },
    "vehicles.set_vehicle_engine_running": {
        "prefix": [
            "vehicles.set_vehicle_engine_running",
            "set_vehicle_engine_running"
        ],
        "body": [
            "vehicles.set_vehicle_engine_running(vehicle --[[ integer ]], isrunning --[[ boolean ]])"
        ],
        "description": "VEHICLES::SET_VEHICLE_ENGINE_RUNNING (0x462B5FDF) function."
    },
    "vehicles.is_vehicle_engine_running": {
        "prefix": [
            "vehicles.is_vehicle_engine_running",
            "is_vehicle_engine_running"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_vehicle_engine_running(vehicle --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_VEHICLE_ENGINE_RUNNING (0x8257A916) function."
    },
    "vehicles.set_vehicle_allowed_to_drive": {
        "prefix": [
            "vehicles.set_vehicle_allowed_to_drive",
            "set_vehicle_allowed_to_drive"
        ],
        "body": [
            "vehicles.set_vehicle_allowed_to_drive(vehicle --[[ integer ]], allowed --[[ boolean ]])"
        ],
        "description": "VEHICLES::SET_VEHICLE_ALLOWED_TO_DRIVE (0x55A56DF8) function."
    },
    "vehicles.is_vehicle_allowed_to_drive": {
        "prefix": [
            "vehicles.is_vehicle_allowed_to_drive",
            "is_vehicle_allowed_to_drive"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_vehicle_allowed_to_drive(vehicle --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_VEHICLE_ALLOWED_TO_DRIVE (0x1C391A44) function."
    },
    "vehicles.set_vehicle_passengers_allowed": {
        "prefix": [
            "vehicles.set_vehicle_passengers_allowed",
            "set_vehicle_passengers_allowed"
        ],
        "body": [
            "vehicles.set_vehicle_passengers_allowed(vehicle --[[ integer ]], allowed --[[ boolean ]])"
        ],
        "description": "VEHICLES::SET_VEHICLE_PASSENGERS_ALLOWED (0xBD0C1BEA) function."
    },
    "vehicles.set_vehicle_ejection_enabled": {
        "prefix": [
            "vehicles.set_vehicle_ejection_enabled",
            "set_vehicle_ejection_enabled"
        ],
        "body": [
            "vehicles.set_vehicle_ejection_enabled(vehicle --[[ integer ]], enabled --[[ boolean ]])"
        ],
        "description": "VEHICLES::SET_VEHICLE_EJECTION_ENABLED (0x0ABD83C0) function."
    },
    "vehicles.vehicle_set_handbrake": {
        "prefix": [
            "vehicles.vehicle_set_handbrake",
            "vehicle_set_handbrake"
        ],
        "body": [
            "vehicles.vehicle_set_handbrake(vehicle --[[ integer ]], handbreak --[[ boolean ]])"
        ],
        "description": "VEHICLES::VEHICLE_SET_HANDBRAKE (0x384BB6AB) function."
    },
    "vehicles.is_any_vehicle_wheel_detached": {
        "prefix": [
            "vehicles.is_any_vehicle_wheel_detached",
            "is_any_vehicle_wheel_detached"
        ],
        "body": [
            "local result --[[ boolean ]] = vehicles.is_any_vehicle_wheel_detached(vehicle --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "VEHICLES::IS_ANY_VEHICLE_WHEEL_DETACHED (0xF801CBD7) function."
    },
    "vehicles.get_vehicle_wheel_count_initial": {
        "prefix": [
            "vehicles.get_vehicle_wheel_count_initial",
            "get_vehicle_wheel_count_initial"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_vehicle_wheel_count_initial(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_VEHICLE_WHEEL_COUNT_INITIAL (0x71A3F193) function."
    },
    "vehicles.get_vehicle_wheel_count_current": {
        "prefix": [
            "vehicles.get_vehicle_wheel_count_current",
            "get_vehicle_wheel_count_current"
        ],
        "body": [
            "local result --[[ integer ]] = vehicles.get_vehicle_wheel_count_current(unk0 --[[ integer ]])"
        ],
        "description": "VEHICLES::GET_VEHICLE_WHEEL_COUNT_CURRENT (0xFB252BA9) function."
    },
    "volume.is_volume_valid": {
        "prefix": [
            "volume.is_volume_valid",
            "is_volume_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = volume.is_volume_valid(volume --[[ integer ]])"
        ],
        "description": "VOLUME::IS_VOLUME_VALID (0xBC33CEB5) function."
    },
    "volume.is_point_in_volume": {
        "prefix": [
            "volume.is_point_in_volume",
            "is_point_in_volume"
        ],
        "body": [
            "local result --[[ boolean ]] = volume.is_point_in_volume(x --[[ number ]], y --[[ number ]], z --[[ number ]], volume --[[ integer ]])"
        ],
        "description": "VOLUME::IS_POINT_IN_VOLUME (0xB85BB21B) function."
    },
    "volume.is_actor_in_volume": {
        "prefix": [
            "volume.is_actor_in_volume",
            "is_actor_in_volume"
        ],
        "body": [
            "local result --[[ boolean ]] = volume.is_actor_in_volume(actor --[[ integer ]], volume --[[ integer ]])"
        ],
        "description": "VOLUME::IS_ACTOR_IN_VOLUME (0xF5593A78) function."
    },
    "volume.delete_projectiles_in_volume": {
        "prefix": [
            "volume.delete_projectiles_in_volume",
            "delete_projectiles_in_volume"
        ],
        "body": [
            "volume.delete_projectiles_in_volume(volume --[[ integer ]])"
        ],
        "description": "VOLUME::DELETE_PROJECTILES_IN_VOLUME (0x0F474297) function."
    },
    "volume.get_volume_center": {
        "prefix": [
            "volume.get_volume_center",
            "get_volume_center"
        ],
        "body": [
            "volume.get_volume_center(volume --[[ integer ]], center --[[ vector3 ]])"
        ],
        "description": "VOLUME::GET_VOLUME_CENTER (0x6729EEFE) function."
    },
    "volume.set_volume_enabled": {
        "prefix": [
            "volume.set_volume_enabled",
            "set_volume_enabled"
        ],
        "body": [
            "volume.set_volume_enabled(volume --[[ integer ]], enable --[[ boolean ]])"
        ],
        "description": "VOLUME::SET_VOLUME_ENABLED (0x14D5CFC3) function."
    },
    "volume.is_volume_enabled": {
        "prefix": [
            "volume.is_volume_enabled",
            "is_volume_enabled"
        ],
        "body": [
            "local result --[[ boolean ]] = volume.is_volume_enabled(volume --[[ integer ]])"
        ],
        "description": "VOLUME::IS_VOLUME_ENABLED (0x29ED6F03) function."
    },
    "volume.get_volume_heading": {
        "prefix": [
            "volume.get_volume_heading",
            "get_volume_heading"
        ],
        "body": [
            "local result --[[ number ]] = volume.get_volume_heading(volume --[[ integer ]])"
        ],
        "description": "VOLUME::GET_VOLUME_HEADING (0x8D5609F2) function."
    },
    "volume.get_volume_scale": {
        "prefix": [
            "volume.get_volume_scale",
            "get_volume_scale"
        ],
        "body": [
            "volume.get_volume_scale(volume --[[ integer ]], scale --[[ vector3 ]])"
        ],
        "description": "VOLUME::GET_VOLUME_SCALE (0xE9C34ACC) function."
    },
    "volume.generate_random_point_in_volume": {
        "prefix": [
            "volume.generate_random_point_in_volume",
            "generate_random_point_in_volume"
        ],
        "body": [
            "volume.generate_random_point_in_volume(volume --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "VOLUME::GENERATE_RANDOM_POINT_IN_VOLUME (0x9FC69F27) function."
    },
    "volume.find_vol_surface_points_for_point": {
        "prefix": [
            "volume.find_vol_surface_points_for_point",
            "find_vol_surface_points_for_point"
        ],
        "body": [
            "volume.find_vol_surface_points_for_point(volume --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "VOLUME::FIND_VOL_SURFACE_POINTS_FOR_POINT (0x026F7060) function."
    },
    "weapon.init_native_weaponenum_pistol": {
        "prefix": [
            "weapon.init_native_weaponenum_pistol",
            "init_native_weaponenum_pistol"
        ],
        "body": [
            "weapon.init_native_weaponenum_pistol(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_PISTOL (0xBAC27559) function."
    },
    "weapon.init_native_weaponenum_rifle": {
        "prefix": [
            "weapon.init_native_weaponenum_rifle",
            "init_native_weaponenum_rifle"
        ],
        "body": [
            "weapon.init_native_weaponenum_rifle(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_RIFLE (0xA534CD14) function."
    },
    "weapon.init_native_weaponenum_repeater": {
        "prefix": [
            "weapon.init_native_weaponenum_repeater",
            "init_native_weaponenum_repeater"
        ],
        "body": [
            "weapon.init_native_weaponenum_repeater(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_REPEATER (0xA72B6620) function."
    },
    "weapon.init_native_weaponenum_sniperrifle": {
        "prefix": [
            "weapon.init_native_weaponenum_sniperrifle",
            "init_native_weaponenum_sniperrifle"
        ],
        "body": [
            "weapon.init_native_weaponenum_sniperrifle(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_SNIPERRIFLE (0x92FE3677) function."
    },
    "weapon.init_native_weaponenum_shotgun": {
        "prefix": [
            "weapon.init_native_weaponenum_shotgun",
            "init_native_weaponenum_shotgun"
        ],
        "body": [
            "weapon.init_native_weaponenum_shotgun(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_SHOTGUN (0xEA06907B) function."
    },
    "weapon.init_native_weaponenum_thrown": {
        "prefix": [
            "weapon.init_native_weaponenum_thrown",
            "init_native_weaponenum_thrown"
        ],
        "body": [
            "weapon.init_native_weaponenum_thrown(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_THROWN (0xE0DF7B3B) function."
    },
    "weapon.init_native_weaponenum_thrown_exploding": {
        "prefix": [
            "weapon.init_native_weaponenum_thrown_exploding",
            "init_native_weaponenum_thrown_exploding"
        ],
        "body": [
            "weapon.init_native_weaponenum_thrown_exploding(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_THROWN_EXPLODING (0xA2597101) function."
    },
    "weapon.init_native_weaponenum_bow": {
        "prefix": [
            "weapon.init_native_weaponenum_bow",
            "init_native_weaponenum_bow"
        ],
        "body": [
            "weapon.init_native_weaponenum_bow(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_BOW (0x2AD5D078) function."
    },
    "weapon.init_native_weaponenum_melee": {
        "prefix": [
            "weapon.init_native_weaponenum_melee",
            "init_native_weaponenum_melee"
        ],
        "body": [
            "weapon.init_native_weaponenum_melee(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_MELEE (0xA6C4E59F) function."
    },
    "weapon.init_native_weaponenum_lasso": {
        "prefix": [
            "weapon.init_native_weaponenum_lasso",
            "init_native_weaponenum_lasso"
        ],
        "body": [
            "weapon.init_native_weaponenum_lasso(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_LASSO (0xF82711CC) function."
    },
    "weapon.init_native_weaponenum_turret": {
        "prefix": [
            "weapon.init_native_weaponenum_turret",
            "init_native_weaponenum_turret"
        ],
        "body": [
            "weapon.init_native_weaponenum_turret(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_TURRET (0x82609DC7) function."
    },
    "weapon.init_native_weaponenum_cannon": {
        "prefix": [
            "weapon.init_native_weaponenum_cannon",
            "init_native_weaponenum_cannon"
        ],
        "body": [
            "weapon.init_native_weaponenum_cannon(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_CANNON (0x628E3173) function."
    },
    "weapon.init_native_weaponenum_ammo": {
        "prefix": [
            "weapon.init_native_weaponenum_ammo",
            "init_native_weaponenum_ammo"
        ],
        "body": [
            "weapon.init_native_weaponenum_ammo(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_AMMO (0xCE5CCF2E) function."
    },
    "weapon.get_weapon_enum_string_from_enum": {
        "prefix": [
            "weapon.get_weapon_enum_string_from_enum",
            "get_weapon_enum_string_from_enum"
        ],
        "body": [
            "local result --[[ string ]] = weapon.get_weapon_enum_string_from_enum(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::GET_WEAPON_ENUM_STRING_FROM_ENUM (0x6A9CFA2A) function."
    },
    "weapon.get_weapon_display_name": {
        "prefix": [
            "weapon.get_weapon_display_name",
            "get_weapon_display_name"
        ],
        "body": [
            "local result --[[ string ]] = weapon.get_weapon_display_name(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::GET_WEAPON_DISPLAY_NAME (0x35CD589C) function."
    },
    "weapon.get_weapon_internal_name": {
        "prefix": [
            "weapon.get_weapon_internal_name",
            "get_weapon_internal_name"
        ],
        "body": [
            "local result --[[ string ]] = weapon.get_weapon_internal_name(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::GET_WEAPON_INTERNAL_NAME (0x87C5471F) function."
    },
    "weapon._get_weapon_icon_name": {
        "prefix": [
            "weapon._get_weapon_icon_name",
            "_get_weapon_icon_name"
        ],
        "body": [
            "local result --[[ string ]] = weapon._get_weapon_icon_name(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::_GET_WEAPON_ICON_NAME (0xBE06C265) function."
    },
    "weapon.get_weapon_fragment_name": {
        "prefix": [
            "weapon.get_weapon_fragment_name",
            "get_weapon_fragment_name"
        ],
        "body": [
            "local result --[[ string ]] = weapon.get_weapon_fragment_name(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::GET_WEAPON_FRAGMENT_NAME (0xE8739A48) function."
    },
    "weapon.init_native_weaponenum_category": {
        "prefix": [
            "weapon.init_native_weaponenum_category",
            "init_native_weaponenum_category"
        ],
        "body": [
            "weapon.init_native_weaponenum_category(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "WEAPON::INIT_NATIVE_WEAPONENUM_CATEGORY (0x01C7193C) function."
    },
    "weapon.finalize_weaponenum_categories": {
        "prefix": [
            "weapon.finalize_weaponenum_categories",
            "finalize_weaponenum_categories"
        ],
        "body": [
            "weapon.finalize_weaponenum_categories()"
        ],
        "description": "WEAPON::FINALIZE_WEAPONENUM_CATEGORIES (0x0A23A69C) function."
    },
    "weapon.set_weaponenum_locked": {
        "prefix": [
            "weapon.set_weaponenum_locked",
            "set_weaponenum_locked"
        ],
        "body": [
            "weapon.set_weaponenum_locked(weaponmodel --[[ integer ]], islocked --[[ boolean ]])"
        ],
        "description": "WEAPON::SET_WEAPONENUM_LOCKED (0x0E4B7A33) function."
    },
    "weapon.is_weaponenum_locked": {
        "prefix": [
            "weapon.is_weaponenum_locked",
            "is_weaponenum_locked"
        ],
        "body": [
            "local result --[[ boolean ]] = weapon.is_weaponenum_locked(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::IS_WEAPONENUM_LOCKED (0xCCE4A339) function."
    },
    "weapon.get_weapon_category_from_enum": {
        "prefix": [
            "weapon.get_weapon_category_from_enum",
            "get_weapon_category_from_enum"
        ],
        "body": [
            "local result --[[ integer ]] = weapon.get_weapon_category_from_enum(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::GET_WEAPON_CATEGORY_FROM_ENUM (0xDB679ED9) function."
    },
    "weapon.get_ammo_enum": {
        "prefix": [
            "weapon.get_ammo_enum",
            "get_ammo_enum"
        ],
        "body": [
            "local result --[[ integer ]] = weapon.get_ammo_enum(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::GET_AMMO_ENUM (0xD3E16075) function."
    },
    "weapon.set_ammo_drop_bias": {
        "prefix": [
            "weapon.set_ammo_drop_bias",
            "set_ammo_drop_bias"
        ],
        "body": [
            "weapon.set_ammo_drop_bias(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "WEAPON::SET_AMMO_DROP_BIAS (0x08A655C5) function."
    },
    "weapon.get_ammo_enum_string_from_enum": {
        "prefix": [
            "weapon.get_ammo_enum_string_from_enum",
            "get_ammo_enum_string_from_enum"
        ],
        "body": [
            "local result --[[ string ]] = weapon.get_ammo_enum_string_from_enum(ammotype --[[ integer ]])"
        ],
        "description": "WEAPON::GET_AMMO_ENUM_STRING_FROM_ENUM (0xCCB57C38) function."
    },
    "weapon.get_ammo_enum_icon_name": {
        "prefix": [
            "weapon.get_ammo_enum_icon_name",
            "get_ammo_enum_icon_name"
        ],
        "body": [
            "local result --[[ string ]] = weapon.get_ammo_enum_icon_name(ammotype --[[ integer ]])"
        ],
        "description": "WEAPON::GET_AMMO_ENUM_ICON_NAME (0x2AF84928) function."
    },
    "weapon.get_weapon_max_ammo": {
        "prefix": [
            "weapon.get_weapon_max_ammo",
            "get_weapon_max_ammo"
        ],
        "body": [
            "local result --[[ number ]] = weapon.get_weapon_max_ammo(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::GET_WEAPON_MAX_AMMO (0xA677B204) function."
    },
    "weapon.resolve_dlc_weaponenum": {
        "prefix": [
            "weapon.resolve_dlc_weaponenum",
            "resolve_dlc_weaponenum"
        ],
        "body": [
            "weapon.resolve_dlc_weaponenum(weaponmodel --[[ integer ]])"
        ],
        "description": "WEAPON::RESOLVE_DLC_WEAPONENUM (0xD291A820) function."
    },
    "weapon.add_idlefx_to_weapon": {
        "prefix": [
            "weapon.add_idlefx_to_weapon",
            "add_idlefx_to_weapon"
        ],
        "body": [
            "weapon.add_idlefx_to_weapon(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]])"
        ],
        "description": "WEAPON::ADD_IDLEFX_TO_WEAPON (0xF4641CF4) function."
    },
    "weather.set_weather": {
        "prefix": [
            "weather.set_weather",
            "set_weather"
        ],
        "body": [
            "weather.set_weather(weather --[[ integer ]], transitionspeed --[[ number ]])"
        ],
        "description": "WEATHER::SET_WEATHER (0x456D7F38) function."
    },
    "weather.get_weather": {
        "prefix": [
            "weather.get_weather",
            "get_weather"
        ],
        "body": [
            "local result --[[ integer ]] = weather.get_weather()"
        ],
        "description": "WEATHER::GET_WEATHER (0xEA026ED9) function."
    },
    "weather.set_weather_complex": {
        "prefix": [
            "weather.set_weather_complex",
            "set_weather_complex"
        ],
        "body": [
            "weather.set_weather_complex(time --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]], unk10 --[[ integer ]], unk11 --[[ integer ]], unk12 --[[ integer ]], unk13 --[[ integer ]], unk14 --[[ integer ]])"
        ],
        "description": "WEATHER::SET_WEATHER_COMPLEX (0xC157CA40) function."
    },
    "weather.set_wind": {
        "prefix": [
            "weather.set_wind",
            "set_wind"
        ],
        "body": [
            "weather.set_wind(intensity --[[ number ]], direction --[[ number ]])"
        ],
        "description": "WEATHER::SET_WIND (0xC6294698) function."
    },
    "weather.set_auto_wind": {
        "prefix": [
            "weather.set_auto_wind",
            "set_auto_wind"
        ],
        "body": [
            "weather.set_auto_wind()"
        ],
        "description": "WEATHER::SET_AUTO_WIND (0x5D37C383) function."
    },
    "weather.set_rain_amount": {
        "prefix": [
            "weather.set_rain_amount",
            "set_rain_amount"
        ],
        "body": [
            "weather.set_rain_amount(amount --[[ number ]])"
        ],
        "description": "WEATHER::SET_RAIN_AMOUNT (0xB788D24A) function."
    },
    "weather.set_lightning_amount": {
        "prefix": [
            "weather.set_lightning_amount",
            "set_lightning_amount"
        ],
        "body": [
            "weather.set_lightning_amount(amount --[[ number ]])"
        ],
        "description": "WEATHER::SET_LIGHTNING_AMOUNT (0xF0C9645A) function."
    },
    "weather.set_weather_type_good": {
        "prefix": [
            "weather.set_weather_type_good",
            "set_weather_type_good"
        ],
        "body": [
            "weather.set_weather_type_good(unk0 --[[ integer ]])"
        ],
        "description": "WEATHER::SET_WEATHER_TYPE_GOOD (0xC4C59CA4) function."
    },
    "weather.set_weather_type_rainy": {
        "prefix": [
            "weather.set_weather_type_rainy",
            "set_weather_type_rainy"
        ],
        "body": [
            "weather.set_weather_type_rainy(unk0 --[[ integer ]])"
        ],
        "description": "WEATHER::SET_WEATHER_TYPE_RAINY (0xA915DC46) function."
    },
    "weather.trigger_lightning_sequence": {
        "prefix": [
            "weather.trigger_lightning_sequence",
            "trigger_lightning_sequence"
        ],
        "body": [
            "weather.trigger_lightning_sequence()"
        ],
        "description": "WEATHER::TRIGGER_LIGHTNING_SEQUENCE (0x9B390724) function."
    },
    "weather.trigger_cloud_lightning_sequence": {
        "prefix": [
            "weather.trigger_cloud_lightning_sequence",
            "trigger_cloud_lightning_sequence"
        ],
        "body": [
            "weather.trigger_cloud_lightning_sequence()"
        ],
        "description": "WEATHER::TRIGGER_CLOUD_LIGHTNING_SEQUENCE (0x858FD48D) function."
    },
    "weather.enable_weather_sphere": {
        "prefix": [
            "weather.enable_weather_sphere",
            "enable_weather_sphere"
        ],
        "body": [
            "weather.enable_weather_sphere(enable --[[ boolean ]], allareasaffected --[[ boolean ]])"
        ],
        "description": "WEATHER::ENABLE_WEATHER_SPHERE (0x17BCED9F) function."
    },
    "weather.is_weather_sphere_enabled": {
        "prefix": [
            "weather.is_weather_sphere_enabled",
            "is_weather_sphere_enabled"
        ],
        "body": [
            "local result --[[ boolean ]] = weather.is_weather_sphere_enabled(unk0 --[[ integer ]])"
        ],
        "description": "WEATHER::IS_WEATHER_SPHERE_ENABLED (0xFEEC4EE2) function."
    },
    "weather._set_sky_is_intro_running": {
        "prefix": [
            "weather._set_sky_is_intro_running",
            "_set_sky_is_intro_running"
        ],
        "body": [
            "weather._set_sky_is_intro_running(unk0 --[[ boolean ]])"
        ],
        "description": "WEATHER::_SET_SKY_IS_INTRO_RUNNING (0x21A68D47) function."
    },
    "weather.override_benchmark_weather": {
        "prefix": [
            "weather.override_benchmark_weather",
            "override_benchmark_weather"
        ],
        "body": [
            "weather.override_benchmark_weather(weather --[[ integer ]])"
        ],
        "description": "WEATHER::OVERRIDE_BENCHMARK_WEATHER (0x8291ED47) function."
    },
    "weather.override_benchmark_time": {
        "prefix": [
            "weather.override_benchmark_time",
            "override_benchmark_time"
        ],
        "body": [
            "weather.override_benchmark_time(time --[[ integer ]])"
        ],
        "description": "WEATHER::OVERRIDE_BENCHMARK_TIME (0xB288F455) function."
    },
    "world.clear_area_of_tree_type": {
        "prefix": [
            "world.clear_area_of_tree_type",
            "clear_area_of_tree_type"
        ],
        "body": [
            "local result --[[ number ]] = world.clear_area_of_tree_type(x --[[ number ]], y --[[ number ]], z --[[ number ]], radius --[[ number ]], unk4 --[[ integer ]])"
        ],
        "description": "WORLD::CLEAR_AREA_OF_TREE_TYPE (0x9A93E7CA) function."
    },
    "world.reset_tree_type_clearing": {
        "prefix": [
            "world.reset_tree_type_clearing",
            "reset_tree_type_clearing"
        ],
        "body": [
            "world.reset_tree_type_clearing()"
        ],
        "description": "WORLD::RESET_TREE_TYPE_CLEARING (0x59A7835E) function."
    },
    "world.reset_this_tree_type_clearing": {
        "prefix": [
            "world.reset_this_tree_type_clearing",
            "reset_this_tree_type_clearing"
        ],
        "body": [
            "world.reset_this_tree_type_clearing(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::RESET_THIS_TREE_TYPE_CLEARING (0x25690082) function."
    },
    "world.set_dust_level": {
        "prefix": [
            "world.set_dust_level",
            "set_dust_level"
        ],
        "body": [
            "local result --[[ integer ]] = world.set_dust_level(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::SET_DUST_LEVEL (0xE92C3435) function."
    },
    "world.set_dust_level_modifier": {
        "prefix": [
            "world.set_dust_level_modifier",
            "set_dust_level_modifier"
        ],
        "body": [
            "local result --[[ integer ]] = world.set_dust_level_modifier(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::SET_DUST_LEVEL_MODIFIER (0xDB86F53B) function."
    },
    "world.set_dust_level_mid": {
        "prefix": [
            "world.set_dust_level_mid",
            "set_dust_level_mid"
        ],
        "body": [
            "local result --[[ integer ]] = world.set_dust_level_mid(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::SET_DUST_LEVEL_MID (0x8BA565F7) function."
    },
    "world.set_dust_level_far": {
        "prefix": [
            "world.set_dust_level_far",
            "set_dust_level_far"
        ],
        "body": [
            "local result --[[ integer ]] = world.set_dust_level_far(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::SET_DUST_LEVEL_FAR (0xB8E09389) function."
    },
    "world.clear_area_of_grass": {
        "prefix": [
            "world.clear_area_of_grass",
            "clear_area_of_grass"
        ],
        "body": [
            "local result --[[ number ]] = world.clear_area_of_grass(x --[[ number ]], y --[[ number ]], z --[[ number ]], radius --[[ number ]])"
        ],
        "description": "WORLD::CLEAR_AREA_OF_GRASS (0x9AA8A1B1) function."
    },
    "world.clear_area_of_breakable_trees": {
        "prefix": [
            "world.clear_area_of_breakable_trees",
            "clear_area_of_breakable_trees"
        ],
        "body": [
            "local result --[[ number ]] = world.clear_area_of_breakable_trees(x --[[ number ]], y --[[ number ]], z --[[ number ]], radius --[[ number ]])"
        ],
        "description": "WORLD::CLEAR_AREA_OF_BREAKABLE_TREES (0x002B0698) function."
    },
    "world.reset_this_breakable_tree_clearing": {
        "prefix": [
            "world.reset_this_breakable_tree_clearing",
            "reset_this_breakable_tree_clearing"
        ],
        "body": [
            "world.reset_this_breakable_tree_clearing(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::RESET_THIS_BREAKABLE_TREE_CLEARING (0x57478561) function."
    },
    "world.reset_all_breakable_tree_clearings": {
        "prefix": [
            "world.reset_all_breakable_tree_clearings",
            "reset_all_breakable_tree_clearings"
        ],
        "body": [
            "world.reset_all_breakable_tree_clearings()"
        ],
        "description": "WORLD::RESET_ALL_BREAKABLE_TREE_CLEARINGS (0x39B0CFE5) function."
    },
    "world.reload_smictionary_list": {
        "prefix": [
            "world.reload_smictionary_list",
            "reload_smictionary_list"
        ],
        "body": [
            "world.reload_smictionary_list()"
        ],
        "description": "WORLD::RELOAD_SMICTIONARY_LIST (0xDCAE6935) function."
    },
    "world.set_zombie_dlc_is_active": {
        "prefix": [
            "world.set_zombie_dlc_is_active",
            "set_zombie_dlc_is_active"
        ],
        "body": [
            "world.set_zombie_dlc_is_active(active --[[ boolean ]])"
        ],
        "description": "WORLD::SET_ZOMBIE_DLC_IS_ACTIVE (0x28246500) function."
    },
    "world.zombie_dlc_is_active": {
        "prefix": [
            "world.zombie_dlc_is_active",
            "zombie_dlc_is_active"
        ],
        "body": [
            "local result --[[ boolean ]] = world.zombie_dlc_is_active()"
        ],
        "description": "WORLD::ZOMBIE_DLC_IS_ACTIVE (0x8CF15FCB) function."
    },
    "world.zombie_dlc_load_assets": {
        "prefix": [
            "world.zombie_dlc_load_assets",
            "zombie_dlc_load_assets"
        ],
        "body": [
            "local result --[[ boolean ]] = world.zombie_dlc_load_assets()"
        ],
        "description": "WORLD::ZOMBIE_DLC_LOAD_ASSETS (0x4A8066FB) function."
    },
    "world.zombie_dlc_load_assets_mp": {
        "prefix": [
            "world.zombie_dlc_load_assets_mp",
            "zombie_dlc_load_assets_mp"
        ],
        "body": [
            "local result --[[ boolean ]] = world.zombie_dlc_load_assets_mp()"
        ],
        "description": "WORLD::ZOMBIE_DLC_LOAD_ASSETS_MP (0x1DDB57A6) function."
    },
    "world.zombie_dlc_unload_assets": {
        "prefix": [
            "world.zombie_dlc_unload_assets",
            "zombie_dlc_unload_assets"
        ],
        "body": [
            "local result --[[ boolean ]] = world.zombie_dlc_unload_assets()"
        ],
        "description": "WORLD::ZOMBIE_DLC_UNLOAD_ASSETS (0x88863344) function."
    },
    "world.zombie_dlc_is_load_complete": {
        "prefix": [
            "world.zombie_dlc_is_load_complete",
            "zombie_dlc_is_load_complete"
        ],
        "body": [
            "local result --[[ boolean ]] = world.zombie_dlc_is_load_complete()"
        ],
        "description": "WORLD::ZOMBIE_DLC_IS_LOAD_COMPLETE (0xE7371670) function."
    },
    "world.zombie_dlc_is_unload_complete": {
        "prefix": [
            "world.zombie_dlc_is_unload_complete",
            "zombie_dlc_is_unload_complete"
        ],
        "body": [
            "local result --[[ boolean ]] = world.zombie_dlc_is_unload_complete()"
        ],
        "description": "WORLD::ZOMBIE_DLC_IS_UNLOAD_COMPLETE (0x03E2B631) function."
    },
    "world.set_phosphorus_ammo_active": {
        "prefix": [
            "world.set_phosphorus_ammo_active",
            "set_phosphorus_ammo_active"
        ],
        "body": [
            "world.set_phosphorus_ammo_active(active --[[ boolean ]])"
        ],
        "description": "WORLD::SET_PHOSPHORUS_AMMO_ACTIVE (0xCA840DBB) function."
    },
    "world.is_phosphorus_ammo_active": {
        "prefix": [
            "world.is_phosphorus_ammo_active",
            "is_phosphorus_ammo_active"
        ],
        "body": [
            "local result --[[ boolean ]] = world.is_phosphorus_ammo_active()"
        ],
        "description": "WORLD::IS_PHOSPHORUS_AMMO_ACTIVE (0x4F3F3CA5) function."
    },
    "world.create_fire_on_object": {
        "prefix": [
            "world.create_fire_on_object",
            "create_fire_on_object"
        ],
        "body": [
            "local result --[[ integer ]] = world.create_fire_on_object(object --[[ integer ]])"
        ],
        "description": "WORLD::CREATE_FIRE_ON_OBJECT (0xC587FA2B) function."
    },
    "world.create_fire_in_volume": {
        "prefix": [
            "world.create_fire_in_volume",
            "create_fire_in_volume"
        ],
        "body": [
            "local result --[[ integer ]] = world.create_fire_in_volume(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]], unk4 --[[ integer ]], unk5 --[[ integer ]], unk6 --[[ integer ]], unk7 --[[ integer ]], unk8 --[[ integer ]], unk9 --[[ integer ]])"
        ],
        "description": "WORLD::CREATE_FIRE_IN_VOLUME (0xD4799325) function."
    },
    "world.stop_all_fires": {
        "prefix": [
            "world.stop_all_fires",
            "stop_all_fires"
        ],
        "body": [
            "world.stop_all_fires()"
        ],
        "description": "WORLD::STOP_ALL_FIRES (0x9544570A) function."
    },
    "world._stop_all_fires_2": {
        "prefix": [
            "world._stop_all_fires_2",
            "_stop_all_fires_2"
        ],
        "body": [
            "world._stop_all_fires_2()"
        ],
        "description": "WORLD::_STOP_ALL_FIRES_2 (0x8011737F) function."
    },
    "world.create_fire_property": {
        "prefix": [
            "world.create_fire_property",
            "create_fire_property"
        ],
        "body": [
            "local result --[[ integer ]] = world.create_fire_property()"
        ],
        "description": "WORLD::CREATE_FIRE_PROPERTY (0x5402321A) function."
    },
    "world.get_fire_property": {
        "prefix": [
            "world.get_fire_property",
            "get_fire_property"
        ],
        "body": [
            "local result --[[ integer ]] = world.get_fire_property(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::GET_FIRE_PROPERTY (0x2AC74780) function."
    },
    "world.stop_all_fire_in_sphere": {
        "prefix": [
            "world.stop_all_fire_in_sphere",
            "stop_all_fire_in_sphere"
        ],
        "body": [
            "world.stop_all_fire_in_sphere(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "WORLD::STOP_ALL_FIRE_IN_SPHERE (0x466C02BA) function."
    },
    "world.stop_all_fire_in_volume": {
        "prefix": [
            "world.stop_all_fire_in_volume",
            "stop_all_fire_in_volume"
        ],
        "body": [
            "world.stop_all_fire_in_volume()"
        ],
        "description": "WORLD::STOP_ALL_FIRE_IN_VOLUME (0xEC3A9EBB) function."
    },
    "world.replace_world_sector": {
        "prefix": [
            "world.replace_world_sector",
            "replace_world_sector"
        ],
        "body": [
            "local result --[[ integer ]] = world.replace_world_sector(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]])"
        ],
        "description": "WORLD::REPLACE_WORLD_SECTOR (0xADB3E8D9) function."
    },
    "world.replace_world_sector_load_bounding_box": {
        "prefix": [
            "world.replace_world_sector_load_bounding_box",
            "replace_world_sector_load_bounding_box"
        ],
        "body": [
            "world.replace_world_sector_load_bounding_box(sectorname --[[ string ]])"
        ],
        "description": "WORLD::REPLACE_WORLD_SECTOR_LOAD_BOUNDING_BOX (0x08D06543) function."
    },
    "world.enable_world_sector": {
        "prefix": [
            "world.enable_world_sector",
            "enable_world_sector"
        ],
        "body": [
            "world.enable_world_sector(sectorname --[[ string ]])"
        ],
        "description": "WORLD::ENABLE_WORLD_SECTOR (0xAD5613FD) function."
    },
    "world.disable_world_sector": {
        "prefix": [
            "world.disable_world_sector",
            "disable_world_sector"
        ],
        "body": [
            "world.disable_world_sector(sectorname --[[ string ]])"
        ],
        "description": "WORLD::DISABLE_WORLD_SECTOR (0xB511D087) function."
    },
    "world.enable_child_sector": {
        "prefix": [
            "world.enable_child_sector",
            "enable_child_sector"
        ],
        "body": [
            "world.enable_child_sector(sectorname --[[ string ]])"
        ],
        "description": "WORLD::ENABLE_CHILD_SECTOR (0x7ECE15BE) function."
    },
    "world.disable_child_sector": {
        "prefix": [
            "world.disable_child_sector",
            "disable_child_sector"
        ],
        "body": [
            "world.disable_child_sector(sectorname --[[ string ]])"
        ],
        "description": "WORLD::DISABLE_CHILD_SECTOR (0x9E1AE585) function."
    },
    "world.hide_child_sector": {
        "prefix": [
            "world.hide_child_sector",
            "hide_child_sector"
        ],
        "body": [
            "world.hide_child_sector(sectorname --[[ string ]])"
        ],
        "description": "WORLD::HIDE_CHILD_SECTOR (0x4E6A78B5) function."
    },
    "world.show_child_sector": {
        "prefix": [
            "world.show_child_sector",
            "show_child_sector"
        ],
        "body": [
            "world.show_child_sector(sectorname --[[ string ]])"
        ],
        "description": "WORLD::SHOW_CHILD_SECTOR (0x63A83655) function."
    },
    "world.set_use_actor_stagger": {
        "prefix": [
            "world.set_use_actor_stagger",
            "set_use_actor_stagger"
        ],
        "body": [
            "world.set_use_actor_stagger(actor --[[ integer ]])"
        ],
        "description": "WORLD::SET_USE_ACTOR_STAGGER (0xE437932A) function."
    },
    "world.fire_create_handle": {
        "prefix": [
            "world.fire_create_handle",
            "fire_create_handle"
        ],
        "body": [
            "local result --[[ integer ]] = world.fire_create_handle()"
        ],
        "description": "WORLD::FIRE_CREATE_HANDLE (0xBBAE9CBD) function."
    },
    "world.fire_is_handle_valid": {
        "prefix": [
            "world.fire_is_handle_valid",
            "fire_is_handle_valid"
        ],
        "body": [
            "local result --[[ boolean ]] = world.fire_is_handle_valid(firehandle --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_IS_HANDLE_VALID (0xA488E930) function."
    },
    "world.fire_release_handle": {
        "prefix": [
            "world.fire_release_handle",
            "fire_release_handle"
        ],
        "body": [
            "world.fire_release_handle(firehandle --[[ integer ]], deactivate --[[ boolean ]])"
        ],
        "description": "WORLD::FIRE_RELEASE_HANDLE (0xB14B936A) function."
    },
    "world.fire_release_infinite_handle": {
        "prefix": [
            "world.fire_release_infinite_handle",
            "fire_release_infinite_handle"
        ],
        "body": [
            "world.fire_release_infinite_handle(firehandle --[[ integer ]], releasestrength --[[ number ]], unk0 --[[ number ]])"
        ],
        "description": "WORLD::FIRE_RELEASE_INFINITE_HANDLE (0xD2BB733E) function."
    },
    "world.fire_find_handle_from_attached_actor": {
        "prefix": [
            "world.fire_find_handle_from_attached_actor",
            "fire_find_handle_from_attached_actor"
        ],
        "body": [
            "local result --[[ integer ]] = world.fire_find_handle_from_attached_actor(actor --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_FIND_HANDLE_FROM_ATTACHED_ACTOR (0x91396EB7) function."
    },
    "world.fire_create_on_actor": {
        "prefix": [
            "world.fire_create_on_actor",
            "fire_create_on_actor"
        ],
        "body": [
            "world.fire_create_on_actor(firehandle --[[ integer ]], actor --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_CREATE_ON_ACTOR (0x9679CF84) function."
    },
    "world.fire_create_in_volume": {
        "prefix": [
            "world.fire_create_in_volume",
            "fire_create_in_volume"
        ],
        "body": [
            "world.fire_create_in_volume(firehandle --[[ integer ]], positionxy --[[ vector2 ]], positionz --[[ number ]], heightflag --[[ integer ]], flag --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_CREATE_IN_VOLUME (0xB65ADFAC) function."
    },
    "world.fire_is_actor_on_fire": {
        "prefix": [
            "world.fire_is_actor_on_fire",
            "fire_is_actor_on_fire"
        ],
        "body": [
            "local result --[[ boolean ]] = world.fire_is_actor_on_fire(actor --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_IS_ACTOR_ON_FIRE (0x30C4CA99) function."
    },
    "world.fire_stop_all_fires": {
        "prefix": [
            "world.fire_stop_all_fires",
            "fire_stop_all_fires"
        ],
        "body": [
            "world.fire_stop_all_fires()"
        ],
        "description": "WORLD::FIRE_STOP_ALL_FIRES (0x15001332) function."
    },
    "world.fire_stop_on_actor": {
        "prefix": [
            "world.fire_stop_on_actor",
            "fire_stop_on_actor"
        ],
        "body": [
            "world.fire_stop_on_actor(actor --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_STOP_ON_ACTOR (0xF635B9EA) function."
    },
    "world.fire_stop_flames_in_volume": {
        "prefix": [
            "world.fire_stop_flames_in_volume",
            "fire_stop_flames_in_volume"
        ],
        "body": [
            "world.fire_stop_flames_in_volume(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_STOP_FLAMES_IN_VOLUME (0x11A65FFB) function."
    },
    "world.fire_get_owner": {
        "prefix": [
            "world.fire_get_owner",
            "fire_get_owner"
        ],
        "body": [
            "local result --[[ integer ]] = world.fire_get_owner(firehandle --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_GET_OWNER (0x15683736) function."
    },
    "world.fire_set_owner": {
        "prefix": [
            "world.fire_set_owner",
            "fire_set_owner"
        ],
        "body": [
            "world.fire_set_owner(firehandle --[[ integer ]], actor --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_SET_OWNER (0xE5C7E4C9) function."
    },
    "world.fire_set_damage_allowed": {
        "prefix": [
            "world.fire_set_damage_allowed",
            "fire_set_damage_allowed"
        ],
        "body": [
            "world.fire_set_damage_allowed(firehandle --[[ integer ]], damageallowed --[[ boolean ]])"
        ],
        "description": "WORLD::FIRE_SET_DAMAGE_ALLOWED (0x3D5D3B26) function."
    },
    "world.fire_set_control_volume": {
        "prefix": [
            "world.fire_set_control_volume",
            "fire_set_control_volume"
        ],
        "body": [
            "world.fire_set_control_volume(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_SET_CONTROL_VOLUME (0x03240324) function."
    },
    "world.fire_set_max_flames": {
        "prefix": [
            "world.fire_set_max_flames",
            "fire_set_max_flames"
        ],
        "body": [
            "world.fire_set_max_flames(firehandle --[[ integer ]], maxflames --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_SET_MAX_FLAMES (0xE5E04E83) function."
    },
    "world.fire_set_target_fill_percent": {
        "prefix": [
            "world.fire_set_target_fill_percent",
            "fire_set_target_fill_percent"
        ],
        "body": [
            "world.fire_set_target_fill_percent(firehandle --[[ integer ]], targetfillpercent --[[ number ]])"
        ],
        "description": "WORLD::FIRE_SET_TARGET_FILL_PERCENT (0x9C471E7D) function."
    },
    "world.fire_set_grow_rate": {
        "prefix": [
            "world.fire_set_grow_rate",
            "fire_set_grow_rate"
        ],
        "body": [
            "world.fire_set_grow_rate(firehandle --[[ integer ]], growrate --[[ number ]])"
        ],
        "description": "WORLD::FIRE_SET_GROW_RATE (0x1A82B949) function."
    },
    "world.fire_set_decay_rate": {
        "prefix": [
            "world.fire_set_decay_rate",
            "fire_set_decay_rate"
        ],
        "body": [
            "world.fire_set_decay_rate(firehandle --[[ integer ]], decayrate --[[ number ]])"
        ],
        "description": "WORLD::FIRE_SET_DECAY_RATE (0x7906A950) function."
    },
    "world.fire_set_expire_allowed": {
        "prefix": [
            "world.fire_set_expire_allowed",
            "fire_set_expire_allowed"
        ],
        "body": [
            "world.fire_set_expire_allowed(firehandle --[[ integer ]], allowexpire --[[ boolean ]])"
        ],
        "description": "WORLD::FIRE_SET_EXPIRE_ALLOWED (0x6471D75C) function."
    },
    "world.fire_set_grow_allowed": {
        "prefix": [
            "world.fire_set_grow_allowed",
            "fire_set_grow_allowed"
        ],
        "body": [
            "world.fire_set_grow_allowed(unk0 --[[ integer ]], unk1 --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_SET_GROW_ALLOWED (0x53895856) function."
    },
    "world.count_flames_in_sphere": {
        "prefix": [
            "world.count_flames_in_sphere",
            "count_flames_in_sphere"
        ],
        "body": [
            "local result --[[ integer ]] = world.count_flames_in_sphere(unk0 --[[ integer ]], unk1 --[[ integer ]], unk2 --[[ integer ]], unk3 --[[ integer ]])"
        ],
        "description": "WORLD::COUNT_FLAMES_IN_SPHERE (0xDEE6523D) function."
    },
    "world.count_flames_in_volume": {
        "prefix": [
            "world.count_flames_in_volume",
            "count_flames_in_volume"
        ],
        "body": [
            "local result --[[ integer ]] = world.count_flames_in_volume(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::COUNT_FLAMES_IN_VOLUME (0x3DD3E1EB) function."
    },
    "world.fire_are_any_flames_in_volume": {
        "prefix": [
            "world.fire_are_any_flames_in_volume",
            "fire_are_any_flames_in_volume"
        ],
        "body": [
            "local result --[[ integer ]] = world.fire_are_any_flames_in_volume(unk0 --[[ integer ]])"
        ],
        "description": "WORLD::FIRE_ARE_ANY_FLAMES_IN_VOLUME (0x28DAED2A) function."
    },
    "world.fire_set_guns_blazing_active": {
        "prefix": [
            "world.fire_set_guns_blazing_active",
            "fire_set_guns_blazing_active"
        ],
        "body": [
            "world.fire_set_guns_blazing_active(isactive --[[ boolean ]])"
        ],
        "description": "WORLD::FIRE_SET_GUNS_BLAZING_ACTIVE (0x3F67DEDB) function."
    },
    "redhook.allow_gameplay_camera_fov_override": {
        "prefix": [
            "redhook.allow_gameplay_camera_fov_override",
            "allow_gameplay_camera_fov_override"
        ],
        "body": [
            "redhook.allow_gameplay_camera_fov_override(toggle --[[ boolean ]])"
        ],
        "description": "REDHOOK::ALLOW_GAMEPLAY_CAMERA_FOV_OVERRIDE (0x5E632574) function."
    },
    "redhook.get_address_from_object": {
        "prefix": [
            "redhook.get_address_from_object",
            "get_address_from_object"
        ],
        "body": [
            "local result --[[ unknown ]] = redhook.get_address_from_object(object --[[ integer ]])"
        ],
        "description": "REDHOOK::GET_ADDRESS_FROM_OBJECT (0xFDCAED7C) function."
    },
    "redhook.get_object_from_address": {
        "prefix": [
            "redhook.get_object_from_address",
            "get_object_from_address"
        ],
        "body": [
            "local result --[[ integer ]] = redhook.get_object_from_address(addr --[[ unknown ]])"
        ],
        "description": "REDHOOK::GET_OBJECT_FROM_ADDRESS (0xFB05516E) function."
    },
    "redhook.world_get_all_actors": {
        "prefix": [
            "redhook.world_get_all_actors",
            "world_get_all_actors"
        ],
        "body": [
            "local result --[[ integer ]] = redhook.world_get_all_actors(array --[[ integer ]])"
        ],
        "description": "REDHOOK::WORLD_GET_ALL_ACTORS (0xD892AD02) function."
    },
    "redhook.world_to_screen": {
        "prefix": [
            "redhook.world_to_screen",
            "world_to_screen"
        ],
        "body": [
            "local result --[[ boolean ]] = redhook.world_to_screen(worldposition --[[ vector3 ]], x --[[ number ]], y --[[ number ]])"
        ],
        "description": "REDHOOK::WORLD_TO_SCREEN (0xBAA72911) function."
    },
    "redhook.set_player_reload_time_scale": {
        "prefix": [
            "redhook.set_player_reload_time_scale",
            "set_player_reload_time_scale"
        ],
        "body": [
            "redhook.set_player_reload_time_scale(override --[[ boolean ]], timescale --[[ number ]])"
        ],
        "description": "REDHOOK::SET_PLAYER_RELOAD_TIME_SCALE (0x6FCC9A11) function."
    },
    "redhook.set_player_auto_firing": {
        "prefix": [
            "redhook.set_player_auto_firing",
            "set_player_auto_firing"
        ],
        "body": [
            "redhook.set_player_auto_firing(autofiring --[[ boolean ]])"
        ],
        "description": "REDHOOK::SET_PLAYER_AUTO_FIRING (0x064E9472) function."
    },
    "redhook.set_actors_jump_height": {
        "prefix": [
            "redhook.set_actors_jump_height",
            "set_actors_jump_height"
        ],
        "body": [
            "redhook.set_actors_jump_height(jumpheight --[[ number ]])"
        ],
        "description": "REDHOOK::SET_ACTORS_JUMP_HEIGHT (0x605297B1) function."
    },
    "redhook.get_time_scale": {
        "prefix": [
            "redhook.get_time_scale",
            "get_time_scale"
        ],
        "body": [
            "local result --[[ number ]] = redhook.get_time_scale()"
        ],
        "description": "REDHOOK::GET_TIME_SCALE (0x8CFD581F) function."
    },
    "redhook.set_time_scale": {
        "prefix": [
            "redhook.set_time_scale",
            "set_time_scale"
        ],
        "body": [
            "redhook.set_time_scale(timescale --[[ number ]])"
        ],
        "description": "REDHOOK::SET_TIME_SCALE (0xA7F84694) function."
    },
    "redhook.is_key_down": {
        "prefix": [
            "redhook.is_key_down",
            "is_key_down"
        ],
        "body": [
            "local result --[[ boolean ]] = redhook.is_key_down(keycode --[[ integer ]])"
        ],
        "description": "REDHOOK::IS_KEY_DOWN (0xAC93D58A) function."
    },
    "redhook.is_key_pressed": {
        "prefix": [
            "redhook.is_key_pressed",
            "is_key_pressed"
        ],
        "body": [
            "local result --[[ boolean ]] = redhook.is_key_pressed(keycode --[[ integer ]])"
        ],
        "description": "REDHOOK::IS_KEY_PRESSED (0x6AFB8EB9) function."
    },
    "redhook.is_key_released": {
        "prefix": [
            "redhook.is_key_released",
            "is_key_released"
        ],
        "body": [
            "local result --[[ boolean ]] = redhook.is_key_released(keycode --[[ integer ]])"
        ],
        "description": "REDHOOK::IS_KEY_RELEASED (0x21B6EB31) function."
    }
}